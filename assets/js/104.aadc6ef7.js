(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{440:function(s,a,e){"use strict";e.r(a);var n=e(7),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-使用"}},[s._v("#")]),s._v(" docker 使用")]),s._v(" "),a("h2",{attrs:{id:"在x86-64-系统使用docker-运行arm64-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在x86-64-系统使用docker-运行arm64-容器"}},[s._v("#")]),s._v(" 在x86_64 系统使用docker 运行arm64 容器")]),s._v(" "),a("h3",{attrs:{id:"_1-启用docker-manifest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-启用docker-manifest"}},[s._v("#")]),s._v(" 1. 启用docker manifest")]),s._v(" "),a("blockquote",[a("p",[s._v("docker manifest特性可支持用户在不同系统架构的机器上分别运行不同的架构的镜像。")])]),s._v(" "),a("p",[s._v("manifest list是一个镜像清单列表，用于存放多个不同os/arch的镜像信息；主要用到manifest的目的，其实还是多用于存放不同的os/arch信息，也就是方便我们在不同的CPU架构（arm或者x86）或者操作系统中，通过一个镜像名称拉取对应架构或者操作系统的镜像， ( 这个尤其是在K8S中，对于异构CPU的服务器中的镜像显得尤为有效。)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\n#如果没有配置文件的话，新建\nmkdir /root/.docker\n\n#进入docker配置目录\ncd /root/.docker/\n\n#修改配置文件\nvi config.json\n\n#添加如下配置信息 \n{\n  "auth": {},\n  "experimental": "enabled"   \n}\n\n#测试manifest是否开启\ndocker manifest\n\n#查看docker是否开启experimental功能\ndocker version \n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"_2-使用docker获取arm镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用docker获取arm镜像"}},[s._v("#")]),s._v(" 2. 使用docker获取arm镜像")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#X86平台docker拉取arm镜像\n#方法一：\n\ndocker pull --platform=arm64 镜像名:版本\n\n#示例\ndocker pull --platform=arm64 nginx:latest\n\n#方法二：\ndocker pull arm64v8/ubuntu:20.04\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_3-启用docker-buildx-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-启用docker-buildx-新特性"}},[s._v("#")]),s._v(" 3. 启用docker Buildx 新特性")]),s._v(" "),a("blockquote",[a("p",[s._v("Docker在19.03引入了一个新的特性，使得Docker可以构建不同CPU体系结构的镜像，比如ARM镜像")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 编辑 /etc/docker/daemon.json,增加下面的内容:\n{\n    "experimental": true\n}\n\n\n# 编辑 ~/.docker/config.json 文件,增加下面的内容\n{\n"experimental": "enabled"\n}\n\n# 重启Docker使生效：\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n#确认是否开启：如果输出true，则表示开启成功\ndocker version -f\'{{.Server.Experimental}}\'\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"_4-获取qemu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-获取qemu"}},[s._v("#")]),s._v(" 4. 获取QEMU")]),s._v(" "),a("blockquote",[a("p",[s._v("QEMU是一个通用的开源的跨平台仿真模拟器，提供user和system两种模式。其模拟的作用可是可以模拟在特定的体系结构下的应用的执行或者构建，比如在x86的体系结构的操作系统上运行ARM的应用。")])]),s._v(" "),a("ul",[a("li",[s._v("下载地址："),a("code",[s._v("https://github.com/multiarch/qemu-user-static/releases")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 配置QEMU\nsudo cp qemu-aarch64-static /usr/bin/\nsudo chmod+x /usr/bin/qemu-aarch64-static\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"_5-注册qemu虚拟机-注意-重启电脑需要重新执行注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-注册qemu虚拟机-注意-重启电脑需要重新执行注册"}},[s._v("#")]),s._v(" 5. 注册QEMU虚拟机(注意：重启电脑需要重新执行注册)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#方式一\ndocker run --rm --privileged multiarch/qemu-user-static:register\n\n#方式二\ndocker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-创建arm架构容器-并运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-创建arm架构容器-并运行"}},[s._v("#")]),s._v(" 6. 创建arm架构容器，并运行")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker run --rm -it -v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static -v /etc/timezone:/etc/timezone:ro \\\n-v /etc/localtime:/etc/localtime:ro arm64v8/ubuntu:20.04 bash\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_7-查看容器架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-查看容器架构"}},[s._v("#")]),s._v(" 7. 查看容器架构")]),s._v(" "),a("p",[s._v("在运行后的容器内部执行以下命令："),a("code",[s._v("uname -m")]),s._v("可查看容器系统所属架构。")])])}),[],!1,null,null,null);a.default=r.exports}}]);