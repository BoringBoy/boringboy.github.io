(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{443:function(a,s,n){"use strict";n.r(s);var e=n(7),t=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"整理一些nginx的常见问题及解惑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整理一些nginx的常见问题及解惑"}},[a._v("#")]),a._v(" 整理一些Nginx的常见问题及解惑")]),a._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("h3",{attrs:{id:"_1-nginx是什么-为什么要使用nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx是什么-为什么要使用nginx"}},[a._v("#")]),a._v(" 1.nginx是什么？为什么要使用Nginx？")]),a._v(" "),s("p",[a._v('Nginx（发音为"engine x"）是一个高性能、开源的Web服务器和反向代理服务器。它以其卓越的性能、可靠性和扩展性而受到广泛关注和使用。Nginx采用事件驱动的架构和异步非阻塞处理方式，可以处理大量并发连接，同时消耗较少的系统资源。')]),a._v(" "),s("p",[a._v("使用Nginx的主要原因包括：")]),a._v(" "),s("ul",[s("li",[a._v("高性能：Nginx的设计使其能够处理大量并发请求，具有出色的性能表现。")]),a._v(" "),s("li",[a._v("可扩展性：Nginx可以轻松扩展以适应高流量和负载。它可以作为负载均衡器，将请求分发给多个服务器。")]),a._v(" "),s("li",[a._v("反向代理：Nginx可以作为反向代理，提供对后端服务器的负载均衡、缓存、SSL终结等功能。")]),a._v(" "),s("li",[a._v("高可靠性：Nginx能够在高并发环境下保持稳定，并具备故障转移和故障恢复的能力。")]),a._v(" "),s("li",[a._v("虚拟主机支持：Nginx支持虚拟主机配置，使您能够在同一台服务器上托管多个域名和网站。")])]),a._v(" "),s("h3",{attrs:{id:"_2-解释下正向代理和反向代理-以及它们的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-解释下正向代理和反向代理-以及它们的区别"}},[a._v("#")]),a._v(" 2. 解释下正向代理和反向代理，以及它们的区别？")]),a._v(" "),s("p",[a._v("正向代理和反向代理是两种不同的代理方式，它们的区别如下：")]),a._v(" "),s("ul",[s("li",[a._v("正向代理：")])]),a._v(" "),s("p",[a._v("正向代理是客户端和目标服务器之间的代理。客户端向代理服务器发送请求，然后代理服务器将请求转发给目标服务器，并将响应返回给客户端。在这种情况下，目标服务器不知道客户端的存在。正向代理常见的使用场景是翻墙、匿名访问互联网等。")]),a._v(" "),s("ul",[s("li",[a._v("反向代理：")])]),a._v(" "),s("p",[a._v("反向代理是位于服务器端的代理。客户端向反向代理服务器发送请求，然后反向代理服务器根据一定的规则将请求转发给后端的目标服务器，并将目标服务器的响应返回给客户端。反向代理隐藏了后端服务器的细节，对客户端来说，只需要与反向代理交互。反向代理常用于负载均衡、缓存加速、SSL终结等。")]),a._v(" "),s("h2",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[a._v("#")]),a._v(" 作用")]),a._v(" "),s("h3",{attrs:{id:"_1-nginx应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx应用场景"}},[a._v("#")]),a._v(" 1. Nginx应用场景？")]),a._v(" "),s("p",[a._v("Nginx的应用场景包括但不限于：")]),a._v(" "),s("ul",[s("li",[a._v("Web服务器：Nginx可以作为高性能的Web服务器，处理静态资源的请求并提供高并发能力。")]),a._v(" "),s("li",[a._v("反向代理：Nginx作为反向代理，可以实现负载均衡、缓存加速、SSL终结等功能，提高服务的可靠性和性能。")]),a._v(" "),s("li",[a._v("负载均衡器：Nginx可以将请求分发给多个后端服务器，平衡服务器的负载，确保服务的可用性。")]),a._v(" "),s("li",[a._v("静态文件服务器：Nginx可以高效地提供静态文件的访问，加速文件传输和下载速度。")]),a._v(" "),s("li",[a._v("缓存服务器：Nginx可以将经常访问的内容缓存在内存中，提供快速响应并减轻后端服务器的压力。")])]),a._v(" "),s("h3",{attrs:{id:"_2-location的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-location的作用是什么"}},[a._v("#")]),a._v(" 2. location的作用是什么？")]),a._v(" "),s("p",[a._v("在Nginx中，"),s("code",[a._v("location")]),a._v("指令用于匹配请求的URL路径，并定义要执行的操作。它可以用于处理特定的URL请求，并指定如何处理请求，如处理静态文件、反向代理、重定向等。")]),a._v(" "),s("h3",{attrs:{id:"_3-动静分离的好处-意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-动静分离的好处-意义"}},[a._v("#")]),a._v(" 3. 动静分离的好处？意义？")]),a._v(" "),s("p",[a._v("动静分离的好处和意义包括：")]),a._v(" "),s("ul",[s("li",[a._v("静态资源的处理效率高：Nginx专注于处理静态文件，具有高效的文件传输能力和较低的系统资源消耗。")]),a._v(" "),s("li",[a._v("提升系统性能和可靠性：将动态请求交给应用服务器处理，可以减轻应用服务器的压力，提高整体系统的性能和可靠性。")]),a._v(" "),s("li",[a._v("简化部署和维护：通过动静分离，可以更容易地对静态资源进行修改、更新和管理，并灵活地扩展和维护系统。")])]),a._v(" "),s("h2",{attrs:{id:"应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[a._v("#")]),a._v(" 应用")]),a._v(" "),s("h3",{attrs:{id:"_1-什么是热部署-在nginx中如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是热部署-在nginx中如何实现"}},[a._v("#")]),a._v(" 1. 什么是热部署，在Nginx中如何实现？")]),a._v(" "),s("p",[a._v("热部署是在无需重启服务器的情况下，实时更新和部署应用程序的过程。在Nginx中，可以通过以下方式实现热部署：")]),a._v(" "),s("ul",[s("li",[a._v("在Nginx的配置文件中，定义一个或多个upstream块，指定后端服务器的地址和端口。例如："),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("upstream backend {\n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])])]),a._v(" "),s("li",[a._v("当需要更新应用程序时，只需直接修改后端服务器的配置，例如更改服务器的IP或端口，或者增加/减少服务器数量。")]),a._v(" "),s("li",[a._v("保存配置更改后，通过执行"),s("code",[a._v("nginx -s reload")]),a._v("命令，Nginx将重新加载配置文件，并将新的配置应用到后端服务器。")])]),a._v(" "),s("h3",{attrs:{id:"_2-什么是负载均衡-在nginx中如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是负载均衡-在nginx中如何实现"}},[a._v("#")]),a._v(" 2. 什么是负载均衡？在Nginx中如何实现？")]),a._v(" "),s("p",[a._v("负载均衡是将请求分发给多个服务器，以平衡服务器的负载，提高系统的性能和可靠性。在Nginx中，可以使用以下方法来实现负载均衡：")]),a._v(" "),s("ul",[s("li",[a._v("在Nginx的配置文件中，使用"),s("code",[a._v("upstream")]),a._v("块定义一组后端服务器。例如："),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("upstream backend {\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])])]),a._v(" "),s("li",[a._v("在"),s("code",[a._v("location")]),a._v("块中，使用"),s("code",[a._v("proxy_pass")]),a._v("指令将请求转发给后端服务器。例如："),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("location / {\n    proxy_pass http://backend;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])]),a._v(" "),s("li",[a._v("根据配置中的负载均衡算法，Nginx将根据一定的规则将请求分发给后端服务器。常见的负载均衡算法有轮询、IP哈希、最少连接等。")])]),a._v(" "),s("h3",{attrs:{id:"_3-location-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-location-语法"}},[a._v("#")]),a._v(" 3. location 语法？")]),a._v(" "),s("p",[s("code",[a._v("location")]),a._v("块的语法如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("location [修饰符] 要匹配的URL路径 {\n    ...  // 在这里定义要执行的操作\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[s("code",[a._v("[修饰符]")]),a._v("：修饰符可以是以下几种：\n"),s("ul",[s("li",[s("code",[a._v("=")]),a._v("：精确匹配，只匹配完全与给定字符串相等的URL。")]),a._v(" "),s("li",[s("code",[a._v("~")]),a._v("：使用正则表达式匹配URL，区分大小写。")]),a._v(" "),s("li",[s("code",[a._v("~*")]),a._v("：使用正则表达式匹配URL，不区分大小写。")])])]),a._v(" "),s("li",[s("code",[a._v("要匹配的URL路径")]),a._v("：指定要匹配的URL路径模式，可以是字符串或正则表达式。")])]),a._v(" "),s("h3",{attrs:{id:"_4-什么是动静分离-如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是动静分离-如何实现"}},[a._v("#")]),a._v(" 4. 什么是动静分离？如何实现？")]),a._v(" "),s("p",[a._v("动静分离是将动态生成和处理的内容与静态的资源分别存放和处理的一种架构设计。在实践中，可以将动态请求交给应用服务器处理，而将静态资源（如图片、样式表、脚本等）交给Nginx进行处理。可以通过在Nginx的配置文件中，将静态资源的URL路径指定为Nginx服务器处理的路径，例如：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("location /static/ {\n    root /path/to/static/files;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("当请求以 "),s("code",[a._v("/static/")]),a._v(" 开头时，Nginx会在 "),s("code",[a._v("/path/to/static/files")]),a._v(" 目录下寻找相应的静态资源并返回给客户端。")]),a._v(" "),s("h3",{attrs:{id:"_5-nginx怎么限制个别ip不可访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-nginx怎么限制个别ip不可访问"}},[a._v("#")]),a._v(" 5. Nginx怎么限制个别IP不可访问？")]),a._v(" "),s("p",[a._v("Nginx可以使用"),s("code",[a._v("deny")]),a._v("指令来阻止特定IP地址的访问。可以在Nginx的配置文件中使用"),s("code",[a._v("location")]),a._v("块和"),s("code",[a._v("deny")]),a._v("指令来实现，例如：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    location / {\n        deny 192.168.1.100;\n        ...\n    }\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("这样配置之后，IP地址为 "),s("code",[a._v("192.168.1.100")]),a._v(" 的客户端将无法访问该"),s("code",[a._v("location")]),a._v("下的资源。您还可以使用"),s("code",[a._v("allow")]),a._v("指令来设置允许访问的IP地址或IP地址段。")])])}),[],!1,null,null,null);s.default=t.exports}}]);