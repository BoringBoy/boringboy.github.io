(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var a,i,s=e[0],l=e[1],c=e[2],p=0,u=[];p<s.length;p++)i=s[p],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&u.push(r[i][0]),r[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(n[a]=l[a]);for(d&&d(e);u.length;)u.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],a=!0,s=1;s<t.length;s++){var l=t[s];0!==r[l]&&(a=!1)}a&&(o.splice(e--,1),n=i(i.s=t[0]))}return n}var a={},r={1:0},o=[];function i(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var a=new Promise((function(e,a){t=r[n]=[e,a]}));e.push(t[2]=a);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{2:"2fca6303",3:"fa5c8eb4",4:"585fa815",5:"4abe6565",6:"1097e019",7:"88aabda5",8:"c37ff828",9:"31e0efa3",10:"d214a035",11:"76d1e42a",12:"741455e1",13:"efda55da",14:"eb288792",15:"310ad08a",16:"80cbff0a",17:"6205ba55",18:"2cbb0cbd",19:"2f36e08f",20:"7a215150",21:"c4174eda",22:"8b88eedd",23:"3ba3a335",24:"b8907ff1",25:"ddb62431",26:"b0118725",27:"f2445fc1",28:"28b5508b",29:"cbd061d6",30:"45bca873",31:"3dffcd38",32:"f1021218",33:"bd0d7b94",34:"67525539",35:"efc90700",36:"ea777725",37:"45191499",38:"ec3d8ad1",39:"ec69955d",40:"b0de0927",41:"96f7c9c0",42:"58655379",43:"aa0b1864",44:"8272b1d1",45:"ef1f5741",46:"597e8942",47:"f5efe7f3",48:"f65ffee3",49:"a83f5900",50:"7a5fc02d",51:"bf7a02be",52:"4a6b0fa4",53:"b7cbebac",54:"ffc2ce89",55:"ae1808e0",56:"6b3a8b78",57:"15bb4d38",58:"fd87afda",59:"7751c8f5",60:"45349d9d",61:"cd2b00a4",62:"4cbbd8ae",63:"ebf7f0a9",64:"ed442937",65:"db71b76d",66:"f0443382",67:"28bb5e7c",68:"d2d84d26",69:"d0f4ce76",70:"43b6e402",71:"23cff52e",72:"bc9fabae",73:"ee9afff2",74:"7907996e",75:"fac41b48",76:"b6a13529",77:"3a83db5e",78:"776955d0",79:"25cb3641",80:"f685f505",81:"03cebc61",82:"66904da0",83:"898a730c",84:"c4ad8300",85:"fee275bd",86:"87bdf0c6",87:"3acd147f",88:"1a488e30",89:"a5fa589c",90:"9fe68e28",91:"10513d7f",92:"e692e7f0",93:"e313b3c9",94:"c7fb0f01",95:"c306adf1",96:"524118f6",97:"67f8e6f8",98:"37ecc325",99:"ec6b30ab",100:"65602f7c",101:"00fdf96d",102:"125c783e",103:"29918222",104:"aadc6ef7",105:"1d40f010",106:"54255e26",107:"39f25872",108:"4a346bb3",109:"fcf3be92",110:"3f18ced7",111:"e729ed67",112:"118ec22e",113:"cbe30d69"}[n]+".js"}(n);var l=new Error;o=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=r[n];if(0!==t){if(t){var a=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,t[1](l)}r[n]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=a,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)i.d(t,a,function(e){return n[e]}.bind(null,a));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;o.push([105,0]),t()}([function(n,e,t){"use strict";var a=t(55),r=a.all;n.exports=a.IS_HTMLDDA?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var a=function(n){return n&&n.Math===Math&&n};n.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof global&&global)||function(){return this}()||this||Function("return this")()},function(n,e,t){"use strict";var a=t(27),r=Function.prototype,o=r.call,i=a&&r.bind.bind(o,o);n.exports=a?i:function(n){return function(){return o.apply(n,arguments)}}},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var a=t(3);n.exports=!a((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var a=t(69),r="object"==typeof self&&self&&self.Object===Object&&self,o=a||r||Function("return this")();n.exports=o},function(n,e,t){"use strict";function a(n,e,t,a,r,o,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),a&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):r&&(l=s?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return a}))},function(n,e,t){"use strict";var a=t(2),r=t(32),o=a({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return o(r(n),e)}},function(n,e,t){"use strict";var a=t(0),r=t(55),o=r.all;n.exports=r.IS_HTMLDDA?function(n){return"object"==typeof n?null!==n:a(n)||n===o}:function(n){return"object"==typeof n?null!==n:a(n)}},function(n,e,t){var a=t(163),r=t(166);n.exports=function(n,e){var t=r(n,e);return a(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return a})),t.d(e,"b",(function(){return o})),t.d(e,"j",(function(){return i})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return p})),t.d(e,"f",(function(){return u})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return h})),t.d(e,"d",(function(){return f})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return x}));t(24);const a=/#.*$/,r=/\.(md|html)$/,o=/\/$/,i=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(a,"").replace(r,"")}function l(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function p(n){if(l(n))return n;if(!n)return"404";const e=n.match(a),t=e?e[0]:"",r=s(n);return o.test(r)?n:r+".html"+t}function u(n,e){const t=n.hash,r=function(n){const e=n&&n.match(a);if(e)return e[0]}(e);if(r&&t!==r)return!1;return s(n.path)===s(e)}function m(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;const r=e.split("/");t&&r[r.length-1]||r.pop();const o=n.replace(/^\//,"").split("/");for(let n=0;n<o.length;n++){const e=o[n];".."===e?r.pop():"."!==e&&r.push(e)}""!==r[0]&&r.unshift("");return r.join("/")}(e,t));const a=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===a)return Object.assign({},n[e],{type:"page",path:p(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function h(n,e,t,a){const{pages:r,themeConfig:o}=t,i=a&&o.locales&&o.locales[a]||o;if("auto"===(n.frontmatter.sidebar||i.sidebar||o.sidebar))return g(n);const s=i.sidebar||o.sidebar;if(s){const{base:t,config:a}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const a in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(a)))return{base:a,config:e[a]};var t;return{}}(e,s);return"auto"===a?g(n):a?a.map(n=>function n(e,t,a,r=1){if("string"==typeof e)return m(t,e,a);if(Array.isArray(e))return Object.assign(m(t,e[0],a),{title:e[1]});{r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const o=e.children||[];return 0===o.length&&e.path?Object.assign(m(t,e.path,a),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:o.map(e=>n(e,t,a,r+1)),collapsable:!1!==e.collapsable}}}(n,r,t)):[]}return[]}function g(n){const e=f(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function f(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return y(e)-y(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var a=t(15),r=t(148),o=t(149),i=a?a.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?r(n):o(n)}},function(n,e,t){"use strict";var a=t(4),r=t(16),o=t(35);n.exports=a?function(n,e,t){return r.f(n,e,o(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var a=t(6).Symbol;n.exports=a},function(n,e,t){"use strict";var a=t(4),r=t(64),o=t(100),i=t(25),s=t(54),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=a?o?function(n,e,t){if(i(n),e=s(e),i(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var a=d(n,e);a&&a.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:a.configurable,enumerable:"enumerable"in t?t.enumerable:a.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(i(n),e=s(e),i(t),r)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){"use strict";var a=t(2),r=a({}.toString),o=a("".slice);n.exports=function(n){return o(r(n),8,-1)}},function(n,e,t){var a=t(153),r=t(154),o=t(155),i=t(156),s=t(157);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var a=t(71);n.exports=function(n,e){for(var t=n.length;t--;)if(a(n[t][0],e))return t;return-1}},function(n,e,t){var a=t(10)(Object,"create");n.exports=a},function(n,e,t){var a=t(175);n.exports=function(n,e){var t=n.__data__;return a(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var a=t(45);n.exports=function(n){if("string"==typeof n||a(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var a,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(a=function(){var n,e,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function o(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(a[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,a.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(a.barSelector),d=a.speed,p=a.easing;return l.offsetWidth,i((function(e){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var r;return(r="translate3d"===a.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+e+"ms "+t,r}(n,d,p)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),a.trickleSpeed)};return a.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},n=0,e=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===e&&t.start(),n++,e++,a.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=a.template;var r,i=e.querySelector(a.barSelector),l=n?"-100":o(t.status||0),d=document.querySelector(a.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(r=e.querySelector(a.spinnerSelector))&&u(r),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(a.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&u(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var a,r=n.length,o=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((a=n[r]+o)in t)return a;return e}(t))}function a(n,e,a){e=t(e),n.style[e]=a}return function(n,e){var t,r,o=arguments;if(2==o.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&a(n,t,r);else a(n,o[1],o[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),a=t+e;l(t,e)||(n.className=a.substring(1))}function d(n,e){var t,a=p(n);l(n,e)&&(t=a.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function u(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?a.call(e,t,e,n):a)||(n.exports=r)},function(n,e,t){"use strict";var a=t(26),r=t(32),o=t(33),i=t(128),s=t(130);a({target:"Array",proto:!0,arity:1,forced:t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=r(this),t=o(e),a=arguments.length;s(t+a);for(var l=0;l<a;l++)e[t]=arguments[l],t++;return i(e,t),t}})},function(n,e,t){"use strict";var a=t(9),r=String,o=TypeError;n.exports=function(n){if(a(n))return n;throw new o(r(n)+" is not an object")}},function(n,e,t){"use strict";var a=t(1),r=t(51).f,o=t(14),i=t(96),s=t(37),l=t(65),c=t(124);n.exports=function(n,e){var t,d,p,u,m,h=n.target,g=n.global,f=n.stat;if(t=g?a:f?a[h]||s(h,{}):(a[h]||{}).prototype)for(d in e){if(u=e[d],p=n.dontCallGetSet?(m=r(t,d))&&m.value:t[d],!c(g?d:h+(f?".":"#")+d,n.forced)&&void 0!==p){if(typeof u==typeof p)continue;l(u,p)}(n.sham||p&&p.sham)&&o(u,"sham",!0),i(t,d,u,n)}}},function(n,e,t){"use strict";var a=t(3);n.exports=!a((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";var a=t(47),r=t(52);n.exports=function(n){return a(r(n))}},function(n,e,t){"use strict";var a=t(1),r=t(0),o=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?o(a[n]):a[n]&&a[n][e]}},function(n,e,t){"use strict";var a=t(0),r=t(111),o=TypeError;n.exports=function(n){if(a(n))return n;throw new o(r(n)+" is not a function")}},function(n,e,t){"use strict";var a=t(1),r=t(61),o=t(8),i=t(63),s=t(59),l=t(58),c=a.Symbol,d=r("wks"),p=l?c.for||c:c&&c.withoutSetter||i;n.exports=function(n){return o(d,n)||(d[n]=s&&o(c,n)?c[n]:p("Symbol."+n)),d[n]}},function(n,e,t){"use strict";var a=t(52),r=Object;n.exports=function(n){return r(a(n))}},function(n,e,t){"use strict";var a=t(122);n.exports=function(n){return a(n.length)}},function(n,e,t){"use strict";var a=t(27),r=Function.prototype.call;n.exports=a?r.bind(r):function(){return r.apply(r,arguments)}},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var a=t(1),r=t(37),o=a["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=o},function(n,e,t){"use strict";var a=t(1),r=Object.defineProperty;n.exports=function(n,e){try{r(a,n,{value:e,configurable:!0,writable:!0})}catch(t){a[n]=e}return e}},function(n,e,t){var a=t(147),r=t(12),o=Object.prototype,i=o.hasOwnProperty,s=o.propertyIsEnumerable,l=a(function(){return arguments}())?a:function(n){return r(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var a=t(10)(t(6),"Map");n.exports=a},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var a=t(167),r=t(174),o=t(176),i=t(177),s=t(178);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var a=t(5),r=t(45),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(a(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(i.test(n)||!o.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var a=t(13),r=t(12);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==a(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var a=t(2),r=t(3),o=t(17),i=Object,s=a("".split);n.exports=r((function(){return!i("z").propertyIsEnumerable(0)}))?function(n){return"String"===o(n)?s(n,""):i(n)}:i},function(n,e,t){"use strict";n.exports={}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,p=Math.max,u=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=r.test(n);return s||o.test(n)?i(n.slice(2),s?2:8):a.test(n)?NaN:+n}n.exports=function(n,e,t){var a,r,o,i,s,l,c=0,d=!1,f=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=a,o=r;return a=r=void 0,c=e,i=n.apply(o,t)}function y(n){return c=n,s=setTimeout(k,e),d?b(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||f&&n-c>=o}function k(){var n=m();if(x(n))return w(n);s=setTimeout(k,function(n){var t=e-(n-l);return f?u(t,o-(n-c)):t}(n))}function w(n){return s=void 0,v&&a?b(n):(a=r=void 0,i)}function _(){var n=m(),t=x(n);if(a=arguments,r=this,l=n,t){if(void 0===s)return y(l);if(f)return s=setTimeout(k,e),b(l)}return void 0===s&&(s=setTimeout(k,e)),i}return e=g(e)||0,h(t)&&(d=!!t.leading,o=(f="maxWait"in t)?p(g(t.maxWait)||0,e):o,v="trailing"in t?!!t.trailing:v),_.cancel=function(){void 0!==s&&clearTimeout(s),c=0,a=l=r=s=void 0},_.flush=function(){return void 0===s?i:w(m())},_}},function(n,e,t){"use strict";var a=t(4),r=t(34),o=t(107),i=t(35),s=t(28),l=t(54),c=t(8),d=t(64),p=Object.getOwnPropertyDescriptor;e.f=a?p:function(n,e){if(n=s(n),e=l(e),d)try{return p(n,e)}catch(n){}if(c(n,e))return i(!r(o.f,n,e),n[e])}},function(n,e,t){"use strict";var a=t(53),r=TypeError;n.exports=function(n){if(a(n))throw new r("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var a=t(108),r=t(56);n.exports=function(n){var e=a(n,"string");return r(e)?e:e+""}},function(n,e,t){"use strict";var a="object"==typeof document&&document.all,r=void 0===a&&void 0!==a;n.exports={all:a,IS_HTMLDDA:r}},function(n,e,t){"use strict";var a=t(29),r=t(0),o=t(57),i=t(58),s=Object;n.exports=i?function(n){return"symbol"==typeof n}:function(n){var e=a("Symbol");return r(e)&&o(e.prototype,s(n))}},function(n,e,t){"use strict";var a=t(2);n.exports=a({}.isPrototypeOf)},function(n,e,t){"use strict";var a=t(59);n.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var a=t(60),r=t(3),o=t(1).String;n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol("symbol detection");return!o(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(n,e,t){"use strict";var a,r,o=t(1),i=t(109),s=o.process,l=o.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(r=(a=d.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!r&&i&&(!(a=i.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=i.match(/Chrome\/(\d+)/))&&(r=+a[1]),n.exports=r},function(n,e,t){"use strict";var a=t(62),r=t(36);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.33.2",mode:a?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var a=t(2),r=0,o=Math.random(),i=a(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++r+o,36)}},function(n,e,t){"use strict";var a=t(4),r=t(3),o=t(99);n.exports=!a&&!r((function(){return 7!==Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var a=t(8),r=t(117),o=t(51),i=t(16);n.exports=function(n,e,t){for(var s=r(e),l=i.f,c=o.f,d=0;d<s.length;d++){var p=s[d];a(n,p)||t&&a(t,p)||l(n,p,c(e,p))}}},function(n,e,t){"use strict";var a=t(121);n.exports=function(n){var e=+n;return e!=e||0===e?0:a(e)}},function(n,e,t){"use strict";var a=t(134),r=t(25),o=t(135);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=a(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return r(t),o(a),e?n(t,a):t.__proto__=a,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,a=e.length,r=n.length;++t<a;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var a=t(18),r=t(158),o=t(159),i=t(160),s=t(161),l=t(162);function c(n){var e=this.__data__=new a(n);this.size=e.size}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var a=t(13),r=t(40);n.exports=function(n){if(!r(n))return!1;var e=a(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var a=t(179),r=t(12);n.exports=function n(e,t,o,i,s){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:a(e,t,o,i,n,s))}},function(n,e,t){var a=t(76),r=t(182),o=t(77);n.exports=function(n,e,t,i,s,l){var c=1&t,d=n.length,p=e.length;if(d!=p&&!(c&&p>d))return!1;var u=l.get(n),m=l.get(e);if(u&&m)return u==e&&m==n;var h=-1,g=!0,f=2&t?new a:void 0;for(l.set(n,e),l.set(e,n);++h<d;){var v=n[h],b=e[h];if(i)var y=c?i(b,v,h,e,n,l):i(v,b,h,n,e,l);if(void 0!==y){if(y)continue;g=!1;break}if(f){if(!r(e,(function(n,e){if(!o(f,e)&&(v===n||s(v,n,t,i,l)))return f.push(e)}))){g=!1;break}}else if(v!==b&&!s(v,b,t,i,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var a=t(41),r=t(180),o=t(181);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new a;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=r,i.prototype.has=o,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var a=t(192),r=t(198),o=t(82);n.exports=function(n){return o(n)?a(n):r(n)}},function(n,e,t){(function(n){var a=t(6),r=t(194),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===o?a.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;n.exports=l}).call(this,t(49)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var a=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==a||"symbol"!=a&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var a=t(195),r=t(196),o=t(197),i=o&&o.isTypedArray,s=i?r(i):a;n.exports=s},function(n,e,t){var a=t(72),r=t(43);n.exports=function(n){return null!=n&&r(n.length)&&!a(n)}},function(n,e,t){var a=t(10)(t(6),"Set");n.exports=a},function(n,e,t){var a=t(40);n.exports=function(n){return n==n&&!a(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var a=t(87),r=t(22);n.exports=function(n,e){for(var t=0,o=(e=a(e,n)).length;null!=n&&t<o;)n=n[r(e[t++])];return t&&t==o?n:void 0}},function(n,e,t){var a=t(5),r=t(44),o=t(209),i=t(212);n.exports=function(n,e){return a(n)?n:r(n,e)?[n]:o(i(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(145),r=t(150),o=t(221),i=t(229),s=t(238),l=t(104),c=o((function(n){var e=l(n);return s(e)&&(e=void 0),i(a(n,1,s,!0),r(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;n.exports=function(n){var e,t=""+n,r=a.exec(t);if(!r)return t;var o="",i=0,s=0;for(i=r.index;i<t.length;i++){switch(t.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==i&&(o+=t.substring(s,i)),s=i+1,o+=e}return s!==i?o+t.substring(s,i):o}},function(n,e,t){"use strict";t.r(e);var a={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},r=(t(241),t(7)),o=Object(r.a)(a,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=o.exports},function(n,e,t){"use strict";t.r(e);var a={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},r=(t(242),t(7)),o=Object(r.a)(a,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,a){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":a===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(a)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=o.exports},function(n,e,t){"use strict";var a=t(0),r=t(16),o=t(101),i=t(37);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(a(t)&&o(t,c,s),s.global)l?n[e]=t:i(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:r.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var a=t(139),r=String;n.exports=function(n){if("Symbol"===a(n))throw new TypeError("Cannot convert a Symbol value to a string");return r(n)}},function(n,e,t){"use strict";var a=t(1),r=t(9),o=a.document,i=r(o)&&r(o.createElement);n.exports=function(n){return i?o.createElement(n):{}}},function(n,e,t){"use strict";var a=t(4),r=t(3);n.exports=a&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var a=t(2),r=t(3),o=t(0),i=t(8),s=t(4),l=t(113).CONFIGURABLE,c=t(114),d=t(115),p=d.enforce,u=d.get,m=String,h=Object.defineProperty,g=a("".slice),f=a("".replace),v=a([].join),b=s&&!r((function(){return 8!==h((function(){}),"length",{value:8}).length})),y=String(String).split("String"),x=n.exports=function(n,e,t){"Symbol("===g(m(e),0,7)&&(e="["+f(m(e),/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!i(n,"name")||l&&n.name!==e)&&(s?h(n,"name",{value:e,configurable:!0}):n.name=e),b&&t&&i(t,"arity")&&n.length!==t.arity&&h(n,"length",{value:t.arity});try{t&&i(t,"constructor")&&t.constructor?s&&h(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var a=p(n);return i(a,"source")||(a.source=v(y,"string"==typeof e?e:"")),n};Function.prototype.toString=x((function(){return o(this)&&u(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var a=t(61),r=t(63),o=a("keys");n.exports=function(n){return o[n]||(o[n]=r(n))}},function(n,e,t){"use strict";var a=t(2),r=t(8),o=t(28),i=t(119).indexOf,s=t(48),l=a([].push);n.exports=function(n,e){var t,a=o(n),c=0,d=[];for(t in a)!r(s,t)&&r(a,t)&&l(d,t);for(;e.length>c;)r(a,t=e[c++])&&(~i(d,t)||l(d,t));return d}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(247)},function(n,e,t){"use strict";var a=t(26),r=t(125).left,o=t(126),i=t(60);a({target:"Array",proto:!0,forced:!t(127)&&i>79&&i<83||!o("reduce")},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!a.call({1:2},1);e.f=o?function(n){var e=r(this,n);return!!e&&e.enumerable}:a},function(n,e,t){"use strict";var a=t(34),r=t(9),o=t(56),i=t(110),s=t(112),l=t(31),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!r(n)||o(n))return n;var t,l=i(n,d);if(l){if(void 0===e&&(e="default"),t=a(l,n,e),!r(t)||o(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){"use strict";n.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(n,e,t){"use strict";var a=t(30),r=t(53);n.exports=function(n,e){var t=n[e];return r(t)?void 0:a(t)}},function(n,e,t){"use strict";var a=String;n.exports=function(n){try{return a(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var a=t(34),r=t(0),o=t(9),i=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&r(t=n.toString)&&!o(s=a(t,n)))return s;if(r(t=n.valueOf)&&!o(s=a(t,n)))return s;if("string"!==e&&r(t=n.toString)&&!o(s=a(t,n)))return s;throw new i("Can't convert object to primitive value")}},function(n,e,t){"use strict";var a=t(4),r=t(8),o=Function.prototype,i=a&&Object.getOwnPropertyDescriptor,s=r(o,"name"),l=s&&"something"===function(){}.name,c=s&&(!a||a&&i(o,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var a=t(2),r=t(0),o=t(36),i=a(Function.toString);r(o.inspectSource)||(o.inspectSource=function(n){return i(n)}),n.exports=o.inspectSource},function(n,e,t){"use strict";var a,r,o,i=t(116),s=t(1),l=t(9),c=t(14),d=t(8),p=t(36),u=t(102),m=t(48),h=s.TypeError,g=s.WeakMap;if(i||p.state){var f=p.state||(p.state=new g);f.get=f.get,f.has=f.has,f.set=f.set,a=function(n,e){if(f.has(n))throw new h("Object already initialized");return e.facade=n,f.set(n,e),e},r=function(n){return f.get(n)||{}},o=function(n){return f.has(n)}}else{var v=u("state");m[v]=!0,a=function(n,e){if(d(n,v))throw new h("Object already initialized");return e.facade=n,c(n,v,e),e},r=function(n){return d(n,v)?n[v]:{}},o=function(n){return d(n,v)}}n.exports={set:a,get:r,has:o,enforce:function(n){return o(n)?r(n):a(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=r(e)).type!==n)throw new h("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var a=t(1),r=t(0),o=a.WeakMap;n.exports=r(o)&&/native code/.test(String(o))},function(n,e,t){"use strict";var a=t(29),r=t(2),o=t(118),i=t(123),s=t(25),l=r([].concat);n.exports=a("Reflect","ownKeys")||function(n){var e=o.f(s(n)),t=i.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var a=t(103),r=t(97).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return a(n,r)}},function(n,e,t){"use strict";var a=t(28),r=t(120),o=t(33),i=function(n){return function(e,t,i){var s,l=a(e),c=o(l),d=r(i,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){"use strict";var a=t(66),r=Math.max,o=Math.min;n.exports=function(n,e){var t=a(n);return t<0?r(t+e,0):o(t,e)}},function(n,e,t){"use strict";var a=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:a)(e)}},function(n,e,t){"use strict";var a=t(66),r=Math.min;n.exports=function(n){return n>0?r(a(n),9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var a=t(3),r=t(0),o=/#|\.prototype\./,i=function(n,e){var t=l[s(n)];return t===d||t!==c&&(r(e)?a(e):!!e)},s=i.normalize=function(n){return String(n).replace(o,".").toLowerCase()},l=i.data={},c=i.NATIVE="N",d=i.POLYFILL="P";n.exports=i},function(n,e,t){"use strict";var a=t(30),r=t(32),o=t(47),i=t(33),s=TypeError,l=function(n){return function(e,t,l,c){a(t);var d=r(e),p=o(d),u=i(d),m=n?u-1:0,h=n?-1:1;if(l<2)for(;;){if(m in p){c=p[m],m+=h;break}if(m+=h,n?m<0:u<=m)throw new s("Reduce of empty array with no initial value")}for(;n?m>=0:u>m;m+=h)m in p&&(c=t(c,p[m],m,d));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var a=t(3);n.exports=function(n,e){var t=[][n];return!!t&&a((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var a=t(1),r=t(17);n.exports="process"===r(a.process)},function(n,e,t){"use strict";var a=t(4),r=t(129),o=TypeError,i=Object.getOwnPropertyDescriptor,s=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(r(n)&&!i(n,"length").writable)throw new o("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var a=t(17);n.exports=Array.isArray||function(n){return"Array"===a(n)}},function(n,e,t){"use strict";var a=TypeError;n.exports=function(n){if(n>9007199254740991)throw a("Maximum allowed index exceeded");return n}},function(n,e,t){"use strict";var a=t(26),r=t(1),o=t(132),i=t(133),s=r.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=i(n,e,l),a({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(s&&s[n]){var t={};t[n]=i("WebAssembly."+n,e,l),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return o(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return o(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return o(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return o(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return o(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return o(n,this,arguments)}})),c("URIError",(function(n){return function(e){return o(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return o(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return o(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return o(n,this,arguments)}}))},function(n,e,t){"use strict";var a=t(27),r=Function.prototype,o=r.apply,i=r.call;n.exports="object"==typeof Reflect&&Reflect.apply||(a?i.bind(o):function(){return i.apply(o,arguments)})},function(n,e,t){"use strict";var a=t(29),r=t(8),o=t(14),i=t(57),s=t(67),l=t(65),c=t(136),d=t(137),p=t(138),u=t(141),m=t(142),h=t(4),g=t(62);n.exports=function(n,e,t,f){var v=f?2:1,b=n.split("."),y=b[b.length-1],x=a.apply(null,b);if(x){var k=x.prototype;if(!g&&r(k,"cause")&&delete k.cause,!t)return x;var w=a("Error"),_=e((function(n,e){var t=p(f?e:n,void 0),a=f?new x(n):new x;return void 0!==t&&o(a,"message",t),m(a,_,a.stack,2),this&&i(k,this)&&d(a,this,_),arguments.length>v&&u(a,arguments[v]),a}));if(_.prototype=k,"Error"!==y?s?s(_,w):l(_,w,{name:!0}):h&&"stackTraceLimit"in x&&(c(_,x,"stackTraceLimit"),c(_,x,"prepareStackTrace")),l(_,x),!g)try{k.name!==y&&o(k,"name",y),k.constructor=_}catch(n){}return _}}},function(n,e,t){"use strict";var a=t(2),r=t(30);n.exports=function(n,e,t){try{return a(r(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var a=t(0),r=String,o=TypeError;n.exports=function(n){if("object"==typeof n||a(n))return n;throw new o("Can't set "+r(n)+" as a prototype")}},function(n,e,t){"use strict";var a=t(16).f;n.exports=function(n,e,t){t in n||a(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var a=t(0),r=t(9),o=t(67);n.exports=function(n,e,t){var i,s;return o&&a(i=e.constructor)&&i!==t&&r(s=i.prototype)&&s!==t.prototype&&o(n,s),n}},function(n,e,t){"use strict";var a=t(98);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:a(n)}},function(n,e,t){"use strict";var a=t(140),r=t(0),o=t(17),i=t(31)("toStringTag"),s=Object,l="Arguments"===o(function(){return arguments}());n.exports=a?o:function(n){var e,t,a;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),i))?t:l?o(e):"Object"===(a=o(e))&&r(e.callee)?"Arguments":a}},function(n,e,t){"use strict";var a={};a[t(31)("toStringTag")]="z",n.exports="[object z]"===String(a)},function(n,e,t){"use strict";var a=t(9),r=t(14);n.exports=function(n,e){a(e)&&"cause"in e&&r(n,"cause",e.cause)}},function(n,e,t){"use strict";var a=t(14),r=t(143),o=t(144),i=Error.captureStackTrace;n.exports=function(n,e,t,s){o&&(i?i(n,e):a(n,"stack",r(t,s)))}},function(n,e,t){"use strict";var a=t(2),r=Error,o=a("".replace),i=String(new r("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(i);n.exports=function(n,e){if(l&&"string"==typeof n&&!r.prepareStackTrace)for(;e--;)n=o(n,s,"");return n}},function(n,e,t){"use strict";var a=t(3),r=t(35);n.exports=!a((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",r(1,7)),7!==n.stack)}))},function(n,e,t){var a=t(68),r=t(146);n.exports=function n(e,t,o,i,s){var l=-1,c=e.length;for(o||(o=r),s||(s=[]);++l<c;){var d=e[l];t>0&&o(d)?t>1?n(d,t-1,o,i,s):a(s,d):i||(s[s.length]=d)}return s}},function(n,e,t){var a=t(15),r=t(38),o=t(5),i=a?a.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||r(n)||!!(i&&n&&n[i])}},function(n,e,t){var a=t(13),r=t(12);n.exports=function(n){return r(n)&&"[object Arguments]"==a(n)}},function(n,e,t){var a=t(15),r=Object.prototype,o=r.hasOwnProperty,i=r.toString,s=a?a.toStringTag:void 0;n.exports=function(n){var e=o.call(n,s),t=n[s];try{n[s]=void 0;var a=!0}catch(n){}var r=i.call(n);return a&&(e?n[s]=t:delete n[s]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var a=t(151),r=t(207),o=t(46),i=t(5),s=t(218);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?i(n)?r(n[0],n[1]):a(n):s(n)}},function(n,e,t){var a=t(152),r=t(206),o=t(85);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?o(e[0][0],e[0][1]):function(t){return t===n||a(t,n,e)}}},function(n,e,t){var a=t(70),r=t(74);n.exports=function(n,e,t,o){var i=t.length,s=i,l=!o;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var d=(c=t[i])[0],p=n[d],u=c[1];if(l&&c[2]){if(void 0===p&&!(d in n))return!1}else{var m=new a;if(o)var h=o(p,u,d,n,e,m);if(!(void 0===h?r(u,p,3,o,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var a=t(19),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=a(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var a=t(19);n.exports=function(n){var e=this.__data__,t=a(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var a=t(19);n.exports=function(n){return a(this.__data__,n)>-1}},function(n,e,t){var a=t(19);n.exports=function(n,e){var t=this.__data__,r=a(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var a=t(18);n.exports=function(){this.__data__=new a,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var a=t(18),r=t(39),o=t(41);n.exports=function(n,e){var t=this.__data__;if(t instanceof a){var i=t.__data__;if(!r||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new o(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var a=t(72),r=t(164),o=t(40),i=t(73),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,p=c.hasOwnProperty,u=RegExp("^"+d.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||r(n))&&(a(n)?u:s).test(i(n))}},function(n,e,t){var a,r=t(165),o=(a=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";n.exports=function(n){return!!o&&o in n}},function(n,e,t){var a=t(6)["__core-js_shared__"];n.exports=a},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var a=t(168),r=t(18),o=t(39);n.exports=function(){this.size=0,this.__data__={hash:new a,map:new(o||r),string:new a}}},function(n,e,t){var a=t(169),r=t(170),o=t(171),i=t(172),s=t(173);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var a=t(20);n.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var a=t(20),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(a){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var a=t(20),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return a?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var a=t(20);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=a&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var a=t(21);n.exports=function(n){var e=a(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var a=t(21);n.exports=function(n){return a(this,n).get(n)}},function(n,e,t){var a=t(21);n.exports=function(n){return a(this,n).has(n)}},function(n,e,t){var a=t(21);n.exports=function(n,e){var t=a(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var a=t(70),r=t(75),o=t(183),i=t(186),s=t(202),l=t(5),c=t(79),d=t(81),p="[object Object]",u=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,h,g){var f=l(n),v=l(e),b=f?"[object Array]":s(n),y=v?"[object Array]":s(e),x=(b="[object Arguments]"==b?p:b)==p,k=(y="[object Arguments]"==y?p:y)==p,w=b==y;if(w&&c(n)){if(!c(e))return!1;f=!0,x=!1}if(w&&!x)return g||(g=new a),f||d(n)?r(n,e,t,m,h,g):o(n,e,b,t,m,h,g);if(!(1&t)){var _=x&&u.call(n,"__wrapped__"),E=k&&u.call(e,"__wrapped__");if(_||E){var T=_?n.value():n,A=E?e.value():e;return g||(g=new a),h(T,A,t,m,g)}}return!!w&&(g||(g=new a),i(n,e,t,m,h,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length;++t<a;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var a=t(15),r=t(184),o=t(71),i=t(75),s=t(185),l=t(42),c=a?a.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,a,c,p,u){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var h=1&a;if(m||(m=l),n.size!=e.size&&!h)return!1;var g=u.get(n);if(g)return g==e;a|=2,u.set(n,e);var f=i(m(n),m(e),a,c,p,u);return u.delete(n),f;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var a=t(6).Uint8Array;n.exports=a},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,a){t[++e]=[a,n]})),t}},function(n,e,t){var a=t(187),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,o,i,s){var l=1&t,c=a(n),d=c.length;if(d!=a(e).length&&!l)return!1;for(var p=d;p--;){var u=c[p];if(!(l?u in e:r.call(e,u)))return!1}var m=s.get(n),h=s.get(e);if(m&&h)return m==e&&h==n;var g=!0;s.set(n,e),s.set(e,n);for(var f=l;++p<d;){var v=n[u=c[p]],b=e[u];if(o)var y=l?o(b,v,u,e,n,s):o(v,b,u,n,e,s);if(!(void 0===y?v===b||i(v,b,t,o,s):y)){g=!1;break}f||(f="constructor"==u)}if(g&&!f){var x=n.constructor,k=e.constructor;x==k||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var a=t(188),r=t(189),o=t(78);n.exports=function(n){return a(n,o,r)}},function(n,e,t){var a=t(68),r=t(5);n.exports=function(n,e,t){var o=e(n);return r(n)?o:a(o,t(n))}},function(n,e,t){var a=t(190),r=t(191),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),a(i(n),(function(e){return o.call(n,e)})))}:r;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=0,o=[];++t<a;){var i=n[t];e(i,t,n)&&(o[r++]=i)}return o}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var a=t(193),r=t(38),o=t(5),i=t(79),s=t(80),l=t(81),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=o(n),d=!t&&r(n),p=!t&&!d&&i(n),u=!t&&!d&&!p&&l(n),m=t||d||p||u,h=m?a(n.length,String):[],g=h.length;for(var f in n)!e&&!c.call(n,f)||m&&("length"==f||p&&("offset"==f||"parent"==f)||u&&("buffer"==f||"byteLength"==f||"byteOffset"==f)||s(f,g))||h.push(f);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,a=Array(n);++t<n;)a[t]=e(t);return a}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var a=t(13),r=t(43),o=t(12),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&r(n.length)&&!!i[a(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var a=t(69),r=e&&!e.nodeType&&e,o=r&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===r&&a.process,s=function(){try{var n=o&&o.require&&o.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(49)(n))},function(n,e,t){var a=t(199),r=t(200),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!a(n))return r(n);var e=[];for(var t in Object(n))o.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var a=t(201)(Object.keys,Object);n.exports=a},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var a=t(203),r=t(39),o=t(204),i=t(83),s=t(205),l=t(13),c=t(73),d=c(a),p=c(r),u=c(o),m=c(i),h=c(s),g=l;(a&&"[object DataView]"!=g(new a(new ArrayBuffer(1)))||r&&"[object Map]"!=g(new r)||o&&"[object Promise]"!=g(o.resolve())||i&&"[object Set]"!=g(new i)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,a=t?c(t):"";if(a)switch(a){case d:return"[object DataView]";case p:return"[object Map]";case u:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var a=t(10)(t(6),"DataView");n.exports=a},function(n,e,t){var a=t(10)(t(6),"Promise");n.exports=a},function(n,e,t){var a=t(10)(t(6),"WeakMap");n.exports=a},function(n,e,t){var a=t(84),r=t(78);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var o=e[t],i=n[o];e[t]=[o,i,a(i)]}return e}},function(n,e,t){var a=t(74),r=t(208),o=t(215),i=t(44),s=t(84),l=t(85),c=t(22);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=r(t,n);return void 0===i&&i===e?o(t,n):a(e,i,3)}}},function(n,e,t){var a=t(86);n.exports=function(n,e,t){var r=null==n?void 0:a(n,e);return void 0===r?t:r}},function(n,e,t){var a=t(210),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=a((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,a,r){e.push(a?r.replace(o,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var a=t(211);n.exports=function(n){var e=a(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var a=t(41);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var a=arguments,r=e?e.apply(this,a):a[0],o=t.cache;if(o.has(r))return o.get(r);var i=n.apply(this,a);return t.cache=o.set(r,i)||o,i};return t.cache=new(r.Cache||a),t}r.Cache=a,n.exports=r},function(n,e,t){var a=t(213);n.exports=function(n){return null==n?"":a(n)}},function(n,e,t){var a=t(15),r=t(214),o=t(5),i=t(45),s=a?a.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(o(e))return r(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=Array(a);++t<a;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var a=t(216),r=t(217);n.exports=function(n,e){return null!=n&&r(n,e,a)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var a=t(87),r=t(38),o=t(5),i=t(80),s=t(43),l=t(22);n.exports=function(n,e,t){for(var c=-1,d=(e=a(e,n)).length,p=!1;++c<d;){var u=l(e[c]);if(!(p=null!=n&&t(n,u)))break;n=n[u]}return p||++c!=d?p:!!(d=null==n?0:n.length)&&s(d)&&i(u,d)&&(o(n)||r(n))}},function(n,e,t){var a=t(219),r=t(220),o=t(44),i=t(22);n.exports=function(n){return o(n)?a(i(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var a=t(86);n.exports=function(n){return function(e){return a(e,n)}}},function(n,e,t){var a=t(46),r=t(222),o=t(224);n.exports=function(n,e){return o(r(n,e,a),n+"")}},function(n,e,t){var a=t(223),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var o=arguments,i=-1,s=r(o.length-e,0),l=Array(s);++i<s;)l[i]=o[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=o[i];return c[e]=t(l),a(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var a=t(225),r=t(228)(a);n.exports=r},function(n,e,t){var a=t(226),r=t(227),o=t(46),i=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:a(e),writable:!0})}:o;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var a=t(10),r=function(){try{var n=a(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,a=0;return function(){var r=t(),o=16-(r-a);if(a=r,o>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var a=t(76),r=t(230),o=t(235),i=t(77),s=t(236),l=t(42);n.exports=function(n,e,t){var c=-1,d=r,p=n.length,u=!0,m=[],h=m;if(t)u=!1,d=o;else if(p>=200){var g=e?null:s(n);if(g)return l(g);u=!1,d=i,h=new a}else h=e?[]:m;n:for(;++c<p;){var f=n[c],v=e?e(f):f;if(f=t||0!==f?f:0,u&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),m.push(f)}else d(h,v,t)||(h!==m&&h.push(v),m.push(f))}return m}},function(n,e,t){var a=t(231);n.exports=function(n,e){return!!(null==n?0:n.length)&&a(n,e,0)>-1}},function(n,e,t){var a=t(232),r=t(233),o=t(234);n.exports=function(n,e,t){return e==e?o(n,e,t):a(n,r,t)}},function(n,e){n.exports=function(n,e,t,a){for(var r=n.length,o=t+(a?1:-1);a?o--:++o<r;)if(e(n[o],o,n))return o;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var a=t-1,r=n.length;++a<r;)if(n[a]===e)return a;return-1}},function(n,e){n.exports=function(n,e,t){for(var a=-1,r=null==n?0:n.length;++a<r;)if(t(e,n[a]))return!0;return!1}},function(n,e,t){var a=t(83),r=t(237),o=t(42),i=a&&1/o(new a([,-0]))[1]==1/0?function(n){return new a(n)}:r;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var a=t(82),r=t(12);n.exports=function(n){return r(n)&&a(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(88)},function(n,e,t){"use strict";t(89)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(90)},function(n,e,t){"use strict";t(91)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.15
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({}),r=Array.isArray;function o(n){return null==n}function i(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function d(n){return null!==n&&"object"==typeof n}var p=Object.prototype.toString;function u(n){return"[object Object]"===p.call(n)}function m(n){return"[object RegExp]"===p.call(n)}function h(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function g(n){return i(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||u(n)&&n.toString===p?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),a=n.split(","),r=0;r<a.length;r++)t[a[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var y=b("key,ref,slot,slot-scope,is");function x(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var a=n.indexOf(e);if(a>-1)return n.splice(a,1)}}var k=Object.prototype.hasOwnProperty;function w(n,e){return k.call(n,e)}function _(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var E=/-(\w)/g,T=_((function(n){return n.replace(E,(function(n,e){return e?e.toUpperCase():""}))})),A=_((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),C=/\B([A-Z])/g,j=_((function(n){return n.replace(C,"-$1").toLowerCase()}));var z=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var a=arguments.length;return a?a>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function B(n,e){e=e||0;for(var t=n.length-e,a=new Array(t);t--;)a[t]=n[t+e];return a}function I(n,e){for(var t in e)n[t]=e[t];return n}function S(n){for(var e={},t=0;t<n.length;t++)n[t]&&I(e,n[t]);return e}function P(n,e,t){}var L=function(n,e,t){return!1},$=function(n){return n};function D(n,e){if(n===e)return!0;var t=d(n),a=d(e);if(!t||!a)return!t&&!a&&String(n)===String(e);try{var r=Array.isArray(n),o=Array.isArray(e);if(r&&o)return n.length===e.length&&n.every((function(n,t){return D(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||o)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return D(n[t],e[t])}))}catch(n){return!1}}function O(n,e){for(var t=0;t<n.length;t++)if(D(n[t],e))return t;return-1}function M(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function U(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var q=["component","directive","filter"],N=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:L,isReservedAttr:L,isUnknownElement:L,getTagNamespace:P,parsePlatformTagName:$,mustUseProp:L,async:!0,_lifecycleHooks:N},R=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function K(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function H(n,e,t,a){Object.defineProperty(n,e,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var G=new RegExp("[^".concat(R.source,".$_\\d]"));var V="__proto__"in{},Z="undefined"!=typeof window,J=Z&&window.navigator.userAgent.toLowerCase(),W=J&&/msie|trident/.test(J),Y=J&&J.indexOf("msie 9.0")>0,Q=J&&J.indexOf("edge/")>0;J&&J.indexOf("android");var X=J&&/iphone|ipad|ipod|ios/.test(J);J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J);var nn,en=J&&J.match(/firefox\/(\d+)/),tn={}.watch,an=!1;if(Z)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){an=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var on=function(){return void 0===nn&&(nn=!Z&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),nn},sn=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,dn="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);cn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var pn=null;function un(n){void 0===n&&(n=null),n||pn&&pn._scope.off(),pn=n,n&&n._scope.on()}var mn=function(){function n(n,e,t,a,r,o,i,s){this.tag=n,this.data=e,this.children=t,this.text=a,this.elm=r,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),hn=function(n){void 0===n&&(n="");var e=new mn;return e.text=n,e.isComment=!0,e};function gn(n){return new mn(void 0,void 0,void 0,String(n))}function fn(n){var e=new mn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var vn=0,bn=[],yn=function(){function n(){this._pending=!1,this.id=vn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,bn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,a=e.length;t<a;t++){0,e[t].update()}},n}();yn.target=null;var xn=[];function kn(n){xn.push(n),yn.target=n}function wn(){xn.pop(),yn.target=xn[xn.length-1]}var _n=Array.prototype,En=Object.create(_n);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=_n[n];H(En,n,(function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var r,o=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&i.observeArray(r),i.dep.notify(),o}))}));var Tn=Object.getOwnPropertyNames(En),An={},Cn=!0;function jn(n){Cn=n}var zn={notify:P,depend:P,addSub:P,removeSub:P},Bn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?zn:new yn,this.vmCount=0,H(n,"__ob__",this),r(n)){if(!t)if(V)n.__proto__=En;else for(var a=0,o=Tn.length;a<o;a++){H(n,s=Tn[a],En[s])}e||this.observeArray(n)}else{var i=Object.keys(n);for(a=0;a<i.length;a++){var s;Sn(n,s=i[a],An,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)In(n[e],!1,this.mock)},n}();function In(n,e,t){return n&&w(n,"__ob__")&&n.__ob__ instanceof Bn?n.__ob__:!Cn||!t&&on()||!r(n)&&!u(n)||!Object.isExtensible(n)||n.__v_skip||Un(n)||n instanceof mn?void 0:new Bn(n,e,t)}function Sn(n,e,t,a,o,i){var s=new yn,l=Object.getOwnPropertyDescriptor(n,e);if(!l||!1!==l.configurable){var c=l&&l.get,d=l&&l.set;c&&!d||t!==An&&2!==arguments.length||(t=n[e]);var p=!o&&In(t,!1,i);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=c?c.call(n):t;return yn.target&&(s.depend(),p&&(p.dep.depend(),r(e)&&$n(e))),Un(e)&&!o?e.value:e},set:function(e){var a=c?c.call(n):t;if(U(a,e)){if(d)d.call(n,e);else{if(c)return;if(!o&&Un(a)&&!Un(e))return void(a.value=e);t=e}p=!o&&In(e,!1,i),s.notify()}}}),s}}function Pn(n,e,t){if(!Mn(n)){var a=n.__ob__;return r(n)&&h(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),a&&!a.shallow&&a.mock&&In(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||a&&a.vmCount?t:a?(Sn(a.value,e,t,void 0,a.shallow,a.mock),a.dep.notify(),t):(n[e]=t,t)}}function Ln(n,e){if(r(n)&&h(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Mn(n)||w(n,e)&&(delete n[e],t&&t.dep.notify())}}function $n(n){for(var e=void 0,t=0,a=n.length;t<a;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),r(e)&&$n(e)}function Dn(n){return On(n,!0),H(n,"__v_isShallow",!0),n}function On(n,e){if(!Mn(n)){In(n,e,on());0}}function Mn(n){return!(!n||!n.__v_isReadonly)}function Un(n){return!(!n||!0!==n.__v_isRef)}function qn(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Un(n))return n.value;var a=n&&n.__ob__;return a&&a.dep.depend(),n},set:function(n){var a=e[t];Un(a)&&!Un(n)?a.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Nn;var Fn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Nn,!n&&Nn&&(this.index=(Nn.scopes||(Nn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Nn;try{return Nn=this,n()}finally{Nn=e}}else 0},n.prototype.on=function(){Nn=this},n.prototype.off=function(){Nn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Rn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Kn=_((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),a="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=a?n.slice(1):n,once:t,capture:a,passive:e}}));function Hn(n,e){function t(){var n=t.fns;if(!r(n))return Ce(n,null,arguments,e,"v-on handler");for(var a=n.slice(),o=0;o<a.length;o++)Ce(a[o],null,arguments,e,"v-on handler")}return t.fns=n,t}function Gn(n,e,t,a,r,i){var l,c,d,p;for(l in n)c=n[l],d=e[l],p=Kn(l),o(c)||(o(d)?(o(c.fns)&&(c=n[l]=Hn(c,i)),s(p.once)&&(c=n[l]=r(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)o(n[l])&&a((p=Kn(l)).name,e[l],p.capture)}function Vn(n,e,t){var a;n instanceof mn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function l(){t.apply(this,arguments),x(a.fns,l)}o(r)?a=Hn([l]):i(r.fns)&&s(r.merged)?(a=r).fns.push(l):a=Hn([r,l]),a.merged=!0,n[e]=a}function Zn(n,e,t,a,r){if(i(e)){if(w(e,t))return n[t]=e[t],r||delete e[t],!0;if(w(e,a))return n[t]=e[a],r||delete e[a],!0}return!1}function Jn(n){return l(n)?[gn(n)]:r(n)?function n(e,t){var a,c,d,p,u=[];for(a=0;a<e.length;a++)o(c=e[a])||"boolean"==typeof c||(d=u.length-1,p=u[d],r(c)?c.length>0&&(Wn((c=n(c,"".concat(t||"","_").concat(a)))[0])&&Wn(p)&&(u[d]=gn(p.text+c[0].text),c.shift()),u.push.apply(u,c)):l(c)?Wn(p)?u[d]=gn(p.text+c):""!==c&&u.push(gn(c)):Wn(c)&&Wn(p)?u[d]=gn(p.text+c.text):(s(e._isVList)&&i(c.tag)&&o(c.key)&&i(t)&&(c.key="__vlist".concat(t,"_").concat(a,"__")),u.push(c)));return u}(n):void 0}function Wn(n){return i(n)&&i(n.text)&&!1===n.isComment}function Yn(n,e){var t,a,o,s,l=null;if(r(n)||"string"==typeof n)for(l=new Array(n.length),t=0,a=n.length;t<a;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(d(n))if(dn&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)l.push(e(p.value,l.length)),p=c.next()}else for(o=Object.keys(n),l=new Array(o.length),t=0,a=o.length;t<a;t++)s=o[t],l[t]=e(n[s],s,t);return i(l)||(l=[]),l._isVList=!0,l}function Qn(n,e,t,a){var r,o=this.$scopedSlots[n];o?(t=t||{},a&&(t=I(I({},a),t)),r=o(t)||(c(e)?e():e)):r=this.$slots[n]||(c(e)?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},r):r}function Xn(n){return Bt(this.$options,"filters",n,!0)||$}function ne(n,e){return r(n)?-1===n.indexOf(e):n!==e}function ee(n,e,t,a,r){var o=F.keyCodes[e]||t;return r&&a&&!F.keyCodes[e]?ne(r,a):o?ne(o,n):a?j(a)!==e:void 0===n}function te(n,e,t,a,o){if(t)if(d(t)){r(t)&&(t=S(t));var i=void 0,s=function(r){if("class"===r||"style"===r||y(r))i=n;else{var s=n.attrs&&n.attrs.type;i=a||F.mustUseProp(e,s,r)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=T(r),c=j(r);l in i||c in i||(i[r]=t[r],o&&((n.on||(n.on={}))["update:".concat(r)]=function(n){t[r]=n}))};for(var l in t)s(l)}else;return n}function ae(n,e){var t=this._staticTrees||(this._staticTrees=[]),a=t[n];return a&&!e||oe(a=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),a}function re(n,e,t){return oe(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function oe(n,e,t){if(r(n))for(var a=0;a<n.length;a++)n[a]&&"string"!=typeof n[a]&&ie(n[a],"".concat(e,"_").concat(a),t);else ie(n,e,t)}function ie(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function se(n,e){if(e)if(u(e)){var t=n.on=n.on?I({},n.on):{};for(var a in e){var r=t[a],o=e[a];t[a]=r?[].concat(r,o):o}}else;return n}function le(n,e,t,a){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var i=n[o];r(i)?le(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return a&&(e.$key=a),e}function ce(n,e){for(var t=0;t<e.length;t+=2){var a=e[t];"string"==typeof a&&a&&(n[e[t]]=e[t+1])}return n}function de(n,e){return"string"==typeof n?e+n:n}function pe(n){n._o=re,n._n=v,n._s=f,n._l=Yn,n._t=Qn,n._q=D,n._i=O,n._m=ae,n._f=Xn,n._k=ee,n._b=te,n._v=gn,n._e=hn,n._u=le,n._g=se,n._d=ce,n._p=de}function ue(n,e){if(!n||!n.length)return{};for(var t={},a=0,r=n.length;a<r;a++){var o=n[a],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==e&&o.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(o);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in t)t[c].every(me)&&delete t[c];return t}function me(n){return n.isComment&&!n.asyncFactory||" "===n.text}function he(n){return n.isComment&&n.asyncFactory}function ge(n,e,t,r){var o,i=Object.keys(t).length>0,s=e?!!e.$stable:!i,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&r&&r!==a&&l===r.$key&&!i&&!r.$hasNormal)return r;for(var c in o={},e)e[c]&&"$"!==c[0]&&(o[c]=fe(n,t,c,e[c]))}else o={};for(var d in t)d in o||(o[d]=ve(t,d));return e&&Object.isExtensible(e)&&(e._normalized=o),H(o,"$stable",s),H(o,"$key",l),H(o,"$hasNormal",i),o}function fe(n,e,t,a){var o=function(){var e=pn;un(n);var t=arguments.length?a.apply(null,arguments):a({}),o=(t=t&&"object"==typeof t&&!r(t)?[t]:Jn(t))&&t[0];return un(e),t&&(!o||1===t.length&&o.isComment&&!he(o))?void 0:t};return a.proxy&&Object.defineProperty(e,t,{get:o,enumerable:!0,configurable:!0}),o}function ve(n,e){return function(){return n[e]}}function be(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};H(e,"_v_attr_proxy",!0),ye(e,n.$attrs,a,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||ye(n._listenersProxy={},n.$listeners,a,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||ke(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:z(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return qn(n,e,t)}))}}}function ye(n,e,t,a,r){var o=!1;for(var i in e)i in n?e[i]!==t[i]&&(o=!0):(o=!0,xe(n,i,a,r));for(var i in n)i in e||(o=!0,delete n[i]);return o}function xe(n,e,t,a){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[a][e]}})}function ke(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var we=null;function _e(n,e){return(n.__esModule||dn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function Ee(n){if(r(n))for(var e=0;e<n.length;e++){var t=n[e];if(i(t)&&(i(t.componentOptions)||he(t)))return t}}function Te(n,e,t,a,p,u){return(r(t)||l(t))&&(p=a,a=t,t=void 0),s(u)&&(p=2),function(n,e,t,a,l){if(i(t)&&i(t.__ob__))return hn();i(t)&&i(t.is)&&(e=t.is);if(!e)return hn();0;r(a)&&c(a[0])&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===l?a=Jn(a):1===l&&(a=function(n){for(var e=0;e<n.length;e++)if(r(n[e]))return Array.prototype.concat.apply([],n);return n}(a));var p,u;if("string"==typeof e){var m=void 0;u=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),p=F.isReservedTag(e)?new mn(F.parsePlatformTagName(e),t,a,void 0,void 0,n):t&&t.pre||!i(m=Bt(n.$options,"components",e))?new mn(e,t,a,void 0,void 0,n):xt(m,t,n,a,e)}else p=xt(e,t,n,a);return r(p)?p:i(p)?(i(u)&&function n(e,t,a){e.ns=t,"foreignObject"===e.tag&&(t=void 0,a=!0);if(i(e.children))for(var r=0,l=e.children.length;r<l;r++){var c=e.children[r];i(c.tag)&&(o(c.ns)||s(a)&&"svg"!==c.tag)&&n(c,t,a)}}(p,u),i(t)&&function(n){d(n.style)&&Fe(n.style);d(n.class)&&Fe(n.class)}(t),p):hn()}(n,e,t,a,p)}function Ae(n,e,t){kn();try{if(e)for(var a=e;a=a.$parent;){var r=a.$options.errorCaptured;if(r)for(var o=0;o<r.length;o++)try{if(!1===r[o].call(a,n,e,t))return}catch(n){je(n,a,"errorCaptured hook")}}je(n,e,t)}finally{wn()}}function Ce(n,e,t,a,r){var o;try{(o=t?n.apply(e,t):n.call(e))&&!o._isVue&&g(o)&&!o._handled&&(o.catch((function(n){return Ae(n,a,r+" (Promise/async)")})),o._handled=!0)}catch(n){Ae(n,a,r)}return o}function je(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&ze(e,null,"config.errorHandler")}ze(n,e,t)}function ze(n,e,t){if(!Z||"undefined"==typeof console)throw n;console.error(n)}var Be,Ie=!1,Se=[],Pe=!1;function Le(){Pe=!1;var n=Se.slice(0);Se.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var $e=Promise.resolve();Be=function(){$e.then(Le),X&&setTimeout(P)},Ie=!0}else if(W||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Be="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(Le)}:function(){setTimeout(Le,0)};else{var De=1,Oe=new MutationObserver(Le),Me=document.createTextNode(String(De));Oe.observe(Me,{characterData:!0}),Be=function(){De=(De+1)%2,Me.data=String(De)},Ie=!0}function Ue(n,e){var t;if(Se.push((function(){if(n)try{n.call(e)}catch(n){Ae(n,e,"nextTick")}else t&&t(e)})),Pe||(Pe=!0,Be()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function qe(n){return function(e,t){if(void 0===t&&(t=pn),t)return function(n,e,t){var a=n.$options;a[e]=At(a[e],t)}(t,n,e)}}qe("beforeMount"),qe("mounted"),qe("beforeUpdate"),qe("updated"),qe("beforeDestroy"),qe("destroyed"),qe("activated"),qe("deactivated"),qe("serverPrefetch"),qe("renderTracked"),qe("renderTriggered"),qe("errorCaptured");var Ne=new cn;function Fe(n){return function n(e,t){var a,o,i=r(e);if(!i&&!d(e)||e.__v_skip||Object.isFrozen(e)||e instanceof mn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(i)for(a=e.length;a--;)n(e[a],t);else if(Un(e))n(e.value,t);else for(o=Object.keys(e),a=o.length;a--;)n(e[o[a]],t)}(n,Ne),Ne.clear(),n}var Re,Ke=0,He=function(){function n(n,e,t,a,r){var o,i;o=this,void 0===(i=Nn&&!Nn._vm?Nn:n?n._scope:void 0)&&(i=Nn),i&&i.active&&i.effects.push(o),(this.vm=n)&&r&&(n._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ke,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!G.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=P)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;kn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Ae(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Fe(n),wn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ut(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ce(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Ge(n,e){Re.$on(n,e)}function Ve(n,e){Re.$off(n,e)}function Ze(n,e){var t=Re;return function a(){var r=e.apply(null,arguments);null!==r&&t.$off(n,a)}}function Je(n,e,t){Re=n,Gn(e,t||{},Ge,Ve,Ze,n),Re=void 0}var We=null;function Ye(n){var e=We;return We=n,function(){We=e}}function Qe(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Xe(n,e){if(e){if(n._directInactive=!1,Qe(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Xe(n.$children[t]);nt(n,"activated")}}function nt(n,e,t,a){void 0===a&&(a=!0),kn();var r=pn,o=Nn;a&&un(n);var i=n.$options[e],s="".concat(e," hook");if(i)for(var l=0,c=i.length;l<c;l++)Ce(i[l],n,t||null,n,s);n._hasHookEvent&&n.$emit("hook:"+e),a&&(un(r),o&&o.on()),wn()}var et=[],tt=[],at={},rt=!1,ot=!1,it=0;var st=0,lt=Date.now;if(Z&&!W){var ct=window.performance;ct&&"function"==typeof ct.now&&lt()>document.createEvent("Event").timeStamp&&(lt=function(){return ct.now()})}var dt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function pt(){var n,e;for(st=lt(),ot=!0,et.sort(dt),it=0;it<et.length;it++)(n=et[it]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=tt.slice(),a=et.slice();it=et.length=tt.length=0,at={},rt=ot=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Xe(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],a=t.vm;a&&a._watcher===t&&a._isMounted&&!a._isDestroyed&&nt(a,"updated")}}(a),function(){for(var n=0;n<bn.length;n++){var e=bn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}bn.length=0}(),sn&&F.devtools&&sn.emit("flush")}function ut(n){var e=n.id;if(null==at[e]&&(n!==yn.target||!n.noRecurse)){if(at[e]=!0,ot){for(var t=et.length-1;t>it&&et[t].id>n.id;)t--;et.splice(t+1,0,n)}else et.push(n);rt||(rt=!0,Ue(pt))}}function mt(n,e){if(n){for(var t=Object.create(null),a=dn?Reflect.ownKeys(n):Object.keys(n),r=0;r<a.length;r++){var o=a[r];if("__ob__"!==o){var i=n[o].from;if(i in e._provided)t[o]=e._provided[i];else if("default"in n[o]){var s=n[o].default;t[o]=c(s)?s.call(e):s}else 0}}return t}}function ht(n,e,t,o,i){var l,c=this,d=i.options;w(o,"_uid")?(l=Object.create(o))._original=o:(l=o,o=o._original);var p=s(d._compiled),u=!p;this.data=n,this.props=e,this.children=t,this.parent=o,this.listeners=n.on||a,this.injections=mt(d.inject,o),this.slots=function(){return c.$slots||ge(o,n.scopedSlots,c.$slots=ue(t,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ge(o,n.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=ge(o,n.scopedSlots,this.$slots)),d._scopeId?this._c=function(n,e,t,a){var i=Te(l,n,e,t,a,u);return i&&!r(i)&&(i.fnScopeId=d._scopeId,i.fnContext=o),i}:this._c=function(n,e,t,a){return Te(l,n,e,t,a,u)}}function gt(n,e,t,a,r){var o=fn(n);return o.fnContext=t,o.fnOptions=a,e.slot&&((o.data||(o.data={})).slot=e.slot),o}function ft(n,e){for(var t in e)n[T(t)]=e[t]}function vt(n){return n.name||n.__name||n._componentTag}pe(ht.prototype);var bt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;bt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},a=n.data.inlineTemplate;i(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,We)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,o){var i=r.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==a&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(o||n.$options._renderChildren||l),d=n.$vnode;n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r),n.$options._renderChildren=o;var p=r.data.attrs||a;n._attrsProxy&&ye(n._attrsProxy,p,d.data&&d.data.attrs||a,n,"$attrs")&&(c=!0),n.$attrs=p,t=t||a;var u=n.$options._parentListeners;if(n._listenersProxy&&ye(n._listenersProxy,t,u||a,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Je(n,t,u),e&&n.$options.props){jn(!1);for(var m=n._props,h=n.$options._propKeys||[],g=0;g<h.length;g++){var f=h[g],v=n.$options.props;m[f]=It(f,v,e,n)}jn(!0),n.$options.propsData=e}c&&(n.$slots=ue(o,r.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,a=n.componentInstance;a._isMounted||(a._isMounted=!0,nt(a,"mounted")),n.data.keepAlive&&(t._isMounted?((e=a)._inactive=!1,tt.push(e)):Xe(a,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Qe(e))||e._inactive)){e._inactive=!0;for(var a=0;a<e.$children.length;a++)n(e.$children[a]);nt(e,"deactivated")}}(e,!0):e.$destroy())}},yt=Object.keys(bt);function xt(n,e,t,l,c){if(!o(n)){var p=t.$options._base;if(d(n)&&(n=p.extend(n)),"function"==typeof n){var u;if(o(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&i(n.errorComp))return n.errorComp;if(i(n.resolved))return n.resolved;var t=we;if(t&&i(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&i(n.loadingComp))return n.loadingComp;if(t&&!i(n.owners)){var a=n.owners=[t],r=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return x(a,t)}));var p=function(n){for(var e=0,t=a.length;e<t;e++)a[e].$forceUpdate();n&&(a.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},u=M((function(t){n.resolved=_e(t,e),r?a.length=0:p(!0)})),m=M((function(e){i(n.errorComp)&&(n.error=!0,p(!0))})),h=n(u,m);return d(h)&&(g(h)?o(n.resolved)&&h.then(u,m):g(h.component)&&(h.component.then(u,m),i(h.error)&&(n.errorComp=_e(h.error,e)),i(h.loading)&&(n.loadingComp=_e(h.loading,e),0===h.delay?n.loading=!0:l=setTimeout((function(){l=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,p(!1))}),h.delay||200)),i(h.timeout)&&(c=setTimeout((function(){c=null,o(n.resolved)&&m(null)}),h.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(u=n,p)))return function(n,e,t,a,r){var o=hn();return o.asyncFactory=n,o.asyncMeta={data:e,context:t,children:a,tag:r},o}(u,e,t,l,c);e=e||{},Ht(n),i(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",a=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),s=o[a],l=e.model.callback;i(s)?(r(s)?-1===s.indexOf(l):s!==l)&&(o[a]=[l].concat(s)):o[a]=l}(n.options,e);var m=function(n,e,t){var a=e.options.props;if(!o(a)){var r={},s=n.attrs,l=n.props;if(i(s)||i(l))for(var c in a){var d=j(c);Zn(r,l,c,d,!0)||Zn(r,s,c,d,!1)}return r}}(e,n);if(s(n.options.functional))return function(n,e,t,o,s){var l=n.options,c={},d=l.props;if(i(d))for(var p in d)c[p]=It(p,d,e||a);else i(t.attrs)&&ft(c,t.attrs),i(t.props)&&ft(c,t.props);var u=new ht(t,c,s,o,n),m=l.render.call(null,u._c,u);if(m instanceof mn)return gt(m,t,u.parent,l,u);if(r(m)){for(var h=Jn(m)||[],g=new Array(h.length),f=0;f<h.length;f++)g[f]=gt(h[f],t,u.parent,l,u);return g}}(n,m,e,t,l);var h=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<yt.length;t++){var a=yt[t],r=e[a],o=bt[a];r===o||r&&r._merged||(e[a]=r?kt(o,r):o)}}(e);var v=vt(n.options)||c;return new mn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:m,listeners:h,tag:c,children:l},u)}}}function kt(n,e){var t=function(t,a){n(t,a),e(t,a)};return t._merged=!0,t}var wt=P,_t=F.optionMergeStrategies;function Et(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var a,r,o,i=dn?Reflect.ownKeys(e):Object.keys(e),s=0;s<i.length;s++)"__ob__"!==(a=i[s])&&(r=n[a],o=e[a],t&&w(n,a)?r!==o&&u(r)&&u(o)&&Et(r,o):Pn(n,a,o));return n}function Tt(n,e,t){return t?function(){var a=c(e)?e.call(t,t):e,r=c(n)?n.call(t,t):n;return a?Et(a,r):r}:e?n?function(){return Et(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function At(n,e){var t=e?n?n.concat(e):r(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ct(n,e,t,a){var r=Object.create(n||null);return e?I(r,e):r}_t.data=function(n,e,t){return t?Tt(n,e,t):e&&"function"!=typeof e?n:Tt(n,e)},N.forEach((function(n){_t[n]=At})),q.forEach((function(n){_t[n+"s"]=Ct})),_t.watch=function(n,e,t,a){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var i in I(o,n),e){var s=o[i],l=e[i];s&&!r(s)&&(s=[s]),o[i]=s?s.concat(l):r(l)?l:[l]}return o},_t.props=_t.methods=_t.inject=_t.computed=function(n,e,t,a){if(!n)return e;var r=Object.create(null);return I(r,n),e&&I(r,e),r},_t.provide=function(n,e){return n?function(){var t=Object.create(null);return Et(t,c(n)?n.call(this):n),e&&Et(t,c(e)?e.call(this):e,!1),t}:e};var jt=function(n,e){return void 0===e?n:e};function zt(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var a,o,i={};if(r(t))for(a=t.length;a--;)"string"==typeof(o=t[a])&&(i[T(o)]={type:null});else if(u(t))for(var s in t)o=t[s],i[T(s)]=u(o)?o:{type:o};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var a=n.inject={};if(r(t))for(var o=0;o<t.length;o++)a[t[o]]={from:t[o]};else if(u(t))for(var i in t){var s=t[i];a[i]=u(s)?I({from:i},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var a=e[t];c(a)&&(e[t]={bind:a,update:a})}}(e),!e._base&&(e.extends&&(n=zt(n,e.extends,t)),e.mixins))for(var a=0,o=e.mixins.length;a<o;a++)n=zt(n,e.mixins[a],t);var i,s={};for(i in n)l(i);for(i in e)w(n,i)||l(i);function l(a){var r=_t[a]||jt;s[a]=r(n[a],e[a],t,a)}return s}function Bt(n,e,t,a){if("string"==typeof t){var r=n[e];if(w(r,t))return r[t];var o=T(t);if(w(r,o))return r[o];var i=A(o);return w(r,i)?r[i]:r[t]||r[o]||r[i]}}function It(n,e,t,a){var r=e[n],o=!w(t,n),i=t[n],s=$t(Boolean,r.type);if(s>-1)if(o&&!w(r,"default"))i=!1;else if(""===i||i===j(n)){var l=$t(String,r.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!w(e,"default"))return;var a=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(a)&&"Function"!==Pt(e.type)?a.call(n):a}(a,r,n);var d=Cn;jn(!0),In(i),jn(d)}return i}var St=/^\s*function (\w+)/;function Pt(n){var e=n&&n.toString().match(St);return e?e[1]:""}function Lt(n,e){return Pt(n)===Pt(e)}function $t(n,e){if(!r(e))return Lt(e,n)?0:-1;for(var t=0,a=e.length;t<a;t++)if(Lt(e[t],n))return t;return-1}var Dt={enumerable:!0,configurable:!0,get:P,set:P};function Ot(n,e,t){Dt.get=function(){return this[e][t]},Dt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Dt)}function Mt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},a=n._props=Dn({}),r=n.$options._propKeys=[];n.$parent&&jn(!1);var o=function(o){r.push(o);var i=It(o,e,t,n);Sn(a,o,i),o in n||Ot(n,"_props",o)};for(var i in e)o(i);jn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var a=n._setupContext=be(n);un(n),kn();var r=Ce(t,null,[n._props||Dn({}),a],n,"setup");if(wn(),un(),c(r))e.render=r;else if(d(r))if(n._setupState=r,r.__sfc){var o=n._setupProxy={};for(var i in r)"__sfc"!==i&&qn(o,r,i)}else for(var i in r)K(i)||qn(n,r,i);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?P:z(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;u(e=n._data=c(e)?function(n,e){kn();try{return n.call(e,e)}catch(n){return Ae(n,e,"data()"),{}}finally{wn()}}(e,n):e||{})||(e={});var t=Object.keys(e),a=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var o=t[r];0,a&&w(a,o)||K(o)||Ot(n,"_data",o)}var i=In(e);i&&i.vmCount++}(n);else{var t=In(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),a=on();for(var r in e){var o=e[r],i=c(o)?o:o.get;0,a||(t[r]=new He(n,i||P,P,Ut)),r in n||qt(n,r,o)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var a=e[t];if(r(a))for(var o=0;o<a.length;o++)Rt(n,t,a[o]);else Rt(n,t,a)}}(n,e.watch)}var Ut={lazy:!0};function qt(n,e,t){var a=!on();c(t)?(Dt.get=a?Nt(e):Ft(t),Dt.set=P):(Dt.get=t.get?a&&!1!==t.cache?Nt(e):Ft(t.get):P,Dt.set=t.set||P),Object.defineProperty(n,e,Dt)}function Nt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),yn.target&&e.depend(),e.value}}function Ft(n){return function(){return n.call(this,this)}}function Rt(n,e,t,a){return u(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,a)}var Kt=0;function Ht(n){var e=n.options;if(n.super){var t=Ht(n.super);if(t!==n.superOptions){n.superOptions=t;var a=function(n){var e,t=n.options,a=n.sealedOptions;for(var r in t)t[r]!==a[r]&&(e||(e={}),e[r]=t[r]);return e}(n);a&&I(n.extendOptions,a),(e=n.options=zt(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Gt(n){this._init(n)}function Vt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,a=t.cid,r=n._Ctor||(n._Ctor={});if(r[a])return r[a];var o=vt(n)||vt(t.options);var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=zt(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)Ot(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)qt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,q.forEach((function(n){i[n]=t[n]})),o&&(i.options.components[o]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=I({},i.options),r[a]=i,i}}function Zt(n){return n&&(vt(n.Ctor.options)||n.tag)}function Jt(n,e){return r(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!m(n)&&n.test(e)}function Wt(n,e){var t=n.cache,a=n.keys,r=n._vnode;for(var o in t){var i=t[o];if(i){var s=i.name;s&&!e(s)&&Yt(t,o,a,r)}}}function Yt(n,e,t,a){var r=n[e];!r||a&&r.tag===a.tag||r.componentInstance.$destroy(),n[e]=null,x(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Kt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Fn(!0),e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),a=e._parentVnode;t.parent=e.parent,t._parentVnode=a;var r=a.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=zt(Ht(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Je(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=ue(e._renderChildren,r),n.$scopedSlots=t?ge(n.$parent,t.data.scopedSlots,n.$slots):a,n._c=function(e,t,a,r){return Te(n,e,t,a,r,!1)},n.$createElement=function(e,t,a,r){return Te(n,e,t,a,r,!0)};var o=t&&t.data;Sn(n,"$attrs",o&&o.attrs||a,null,!0),Sn(n,"$listeners",e._parentListeners||a,null,!0)}(e),nt(e,"beforeCreate",void 0,!1),function(n){var e=mt(n.$options.inject,n);e&&(jn(!1),Object.keys(e).forEach((function(t){Sn(n,t,e[t])})),jn(!0))}(e),Mt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!d(t))return;for(var a=Rn(n),r=dn?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++){var i=r[o];Object.defineProperty(a,i,Object.getOwnPropertyDescriptor(t,i))}}}(e),nt(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Gt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Pn,n.prototype.$delete=Ln,n.prototype.$watch=function(n,e,t){if(u(e))return Rt(this,n,e,t);(t=t||{}).user=!0;var a=new He(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'.concat(a.expression,'"');kn(),Ce(e,this,[a.value],this,r),wn()}return function(){a.teardown()}}}(Gt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var a=this;if(r(n))for(var o=0,i=n.length;o<i;o++)a.$on(n[o],t);else(a._events[n]||(a._events[n]=[])).push(t),e.test(n)&&(a._hasHookEvent=!0);return a},n.prototype.$once=function(n,e){var t=this;function a(){t.$off(n,a),e.apply(t,arguments)}return a.fn=e,t.$on(n,a),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(r(n)){for(var a=0,o=n.length;a<o;a++)t.$off(n[a],e);return t}var i,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((i=s[l])===e||i.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?B(t):t;for(var a=B(arguments,1),r='event handler for "'.concat(n,'"'),o=0,i=t.length;o<i;o++)Ce(t[o],e,a,e,r)}return e}}(Gt),function(n){n.prototype._update=function(n,e){var t=this,a=t.$el,r=t._vnode,o=Ye(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),o(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var i=t;i&&i.$vnode&&i.$parent&&i.$vnode===i.$parent._vnode;)i.$parent.$el=i.$el,i=i.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){nt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||x(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),nt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Gt),function(n){pe(n.prototype),n.prototype.$nextTick=function(n){return Ue(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,a=t.render,o=t._parentVnode;o&&e._isMounted&&(e.$scopedSlots=ge(e.$parent,o.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&ke(e._slotsProxy,e.$scopedSlots)),e.$vnode=o;try{un(e),we=e,n=a.call(e._renderProxy,e.$createElement)}catch(t){Ae(t,e,"render"),n=e._vnode}finally{we=null,un()}return r(n)&&1===n.length&&(n=n[0]),n instanceof mn||(n=hn()),n.parent=o,n}}(Gt);var Qt=[String,RegExp,Array],Xt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Qt,exclude:Qt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var r=t.tag,o=t.componentInstance,i=t.componentOptions;n[a]={name:Zt(i),tag:r,componentInstance:o},e.push(a),this.max&&e.length>parseInt(this.max)&&Yt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Yt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Wt(n,(function(n){return Jt(e,n)}))})),this.$watch("exclude",(function(e){Wt(n,(function(n){return!Jt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Ee(n),t=e&&e.componentOptions;if(t){var a=Zt(t),r=this.include,o=this.exclude;if(r&&(!a||!Jt(r,a))||o&&a&&Jt(o,a))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,x(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:wt,extend:I,mergeOptions:zt,defineReactive:Sn},n.set=Pn,n.delete=Ln,n.nextTick=Ue,n.observable=function(n){return In(n),n},n.options=Object.create(null),q.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,I(n.options.components,Xt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=B(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=zt(this.options,n),this}}(n),Vt(n),function(n){q.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&u(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Gt),Object.defineProperty(Gt.prototype,"$isServer",{get:on}),Object.defineProperty(Gt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Gt,"FunctionalRenderContext",{value:ht}),Gt.version="2.7.15";var na=b("style,class"),ea=b("input,textarea,option,select,progress"),ta=b("contenteditable,draggable,spellcheck"),aa=b("events,caret,typing,plaintext-only"),ra=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),oa="http://www.w3.org/1999/xlink",ia=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},sa=function(n){return ia(n)?n.slice(6,n.length):""},la=function(n){return null==n||!1===n};function ca(n){for(var e=n.data,t=n,a=n;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(e=da(a.data,e));for(;i(t=t.parent);)t&&t.data&&(e=da(e,t.data));return function(n,e){if(i(n)||i(e))return pa(n,ua(e));return""}(e.staticClass,e.class)}function da(n,e){return{staticClass:pa(n.staticClass,e.staticClass),class:i(n.class)?[n.class,e.class]:e.class}}function pa(n,e){return n?e?n+" "+e:n:e||""}function ua(n){return Array.isArray(n)?function(n){for(var e,t="",a=0,r=n.length;a<r;a++)i(e=ua(n[a]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var ma={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ha=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ga=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),fa=function(n){return ha(n)||ga(n)};var va=Object.create(null);var ba=b("text,number,password,search,email,tel,url");var ya=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(ma[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),xa={create:function(n,e){ka(e)},update:function(n,e){n.data.ref!==e.data.ref&&(ka(n,!0),ka(e))},destroy:function(n){ka(n,!0)}};function ka(n,e){var t=n.data.ref;if(i(t)){var a=n.context,o=n.componentInstance||n.elm,s=e?null:o,l=e?void 0:o;if(c(t))Ce(t,a,[s],a,"template ref function");else{var d=n.data.refInFor,p="string"==typeof t||"number"==typeof t,u=Un(t),m=a.$refs;if(p||u)if(d){var h=p?m[t]:t.value;e?r(h)&&x(h,o):r(h)?h.includes(o)||h.push(o):p?(m[t]=[o],wa(a,t,m[t])):t.value=[o]}else if(p){if(e&&m[t]!==o)return;m[t]=l,wa(a,t,s)}else if(u){if(e&&t.value!==o)return;t.value=s}else 0}}}function wa(n,e,t){var a=n._setupState;a&&w(a,e)&&(Un(a[e])?a[e].value=t:a[e]=t)}var _a=new mn("",{},[]),Ea=["create","activate","update","remove","destroy"];function Ta(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&i(n.data)===i(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,a=i(t=n.data)&&i(t=t.attrs)&&t.type,r=i(t=e.data)&&i(t=t.attrs)&&t.type;return a===r||ba(a)&&ba(r)}(n,e)||s(n.isAsyncPlaceholder)&&o(e.asyncFactory.error))}function Aa(n,e,t){var a,r,o={};for(a=e;a<=t;++a)i(r=n[a].key)&&(o[r]=a);return o}var Ca={create:ja,update:ja,destroy:function(n){ja(n,_a)}};function ja(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,a,r,o=n===_a,i=e===_a,s=Ba(n.data.directives,n.context),l=Ba(e.data.directives,e.context),c=[],d=[];for(t in l)a=s[t],r=l[t],a?(r.oldValue=a.value,r.oldArg=a.arg,Sa(r,"update",e,n),r.def&&r.def.componentUpdated&&d.push(r)):(Sa(r,"bind",e,n),r.def&&r.def.inserted&&c.push(r));if(c.length){var p=function(){for(var t=0;t<c.length;t++)Sa(c[t],"inserted",e,n)};o?Vn(e,"insert",p):p()}d.length&&Vn(e,"postpatch",(function(){for(var t=0;t<d.length;t++)Sa(d[t],"componentUpdated",e,n)}));if(!o)for(t in s)l[t]||Sa(s[t],"unbind",n,n,i)}(n,e)}var za=Object.create(null);function Ba(n,e){var t,a,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++){if((a=n[t]).modifiers||(a.modifiers=za),r[Ia(a)]=a,e._setupState&&e._setupState.__sfc){var o=a.def||Bt(e,"_setupState","v-"+a.name);a.def="function"==typeof o?{bind:o,update:o}:o}a.def=a.def||Bt(e.$options,"directives",a.name)}return r}function Ia(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Sa(n,e,t,a,r){var o=n.def&&n.def[e];if(o)try{o(t.elm,n,t,a,r)}catch(a){Ae(a,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Pa=[xa,Ca];function La(n,e){var t=e.componentOptions;if(!(i(t)&&!1===t.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var a,r,l=e.elm,c=n.data.attrs||{},d=e.data.attrs||{};for(a in(i(d.__ob__)||s(d._v_attr_proxy))&&(d=e.data.attrs=I({},d)),d)r=d[a],c[a]!==r&&$a(l,a,r,e.data.pre);for(a in(W||Q)&&d.value!==c.value&&$a(l,"value",d.value),c)o(d[a])&&(ia(a)?l.removeAttributeNS(oa,sa(a)):ta(a)||l.removeAttribute(a))}}function $a(n,e,t,a){a||n.tagName.indexOf("-")>-1?Da(n,e,t):ra(e)?la(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):ta(e)?n.setAttribute(e,function(n,e){return la(e)||"false"===e?"false":"contenteditable"===n&&aa(e)?e:"true"}(e,t)):ia(e)?la(t)?n.removeAttributeNS(oa,sa(e)):n.setAttributeNS(oa,e,t):Da(n,e,t)}function Da(n,e,t){if(la(t))n.removeAttribute(e);else{if(W&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var a=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",a)};n.addEventListener("input",a),n.__ieph=!0}n.setAttribute(e,t)}}var Oa={create:La,update:La};function Ma(n,e){var t=e.elm,a=e.data,r=n.data;if(!(o(a.staticClass)&&o(a.class)&&(o(r)||o(r.staticClass)&&o(r.class)))){var s=ca(e),l=t._transitionClasses;i(l)&&(s=pa(s,ua(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Ua,qa={create:Ma,update:Ma};function Na(n,e,t){var a=Ua;return function r(){var o=e.apply(null,arguments);null!==o&&Ka(n,r,t,a)}}var Fa=Ie&&!(en&&Number(en[1])<=53);function Ra(n,e,t,a){if(Fa){var r=st,o=e;e=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}Ua.addEventListener(n,e,an?{capture:t,passive:a}:t)}function Ka(n,e,t,a){(a||Ua).removeEventListener(n,e._wrapper||e,t)}function Ha(n,e){if(!o(n.data.on)||!o(e.data.on)){var t=e.data.on||{},a=n.data.on||{};Ua=e.elm||n.elm,function(n){if(i(n.__r)){var e=W?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}i(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Gn(t,a,Ra,Ka,Na,e.context),Ua=void 0}}var Ga,Va={create:Ha,update:Ha,destroy:function(n){return Ha(n,_a)}};function Za(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var t,a,r=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(i(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=I({},c)),l)t in c||(r[t]="");for(t in c){if(a=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),a===l[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=a;var d=o(a)?"":String(a);Ja(r,d)&&(r.value=d)}else if("innerHTML"===t&&ga(r.tagName)&&o(r.innerHTML)){(Ga=Ga||document.createElement("div")).innerHTML="<svg>".concat(a,"</svg>");for(var p=Ga.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;p.firstChild;)r.appendChild(p.firstChild)}else if(a!==l[t])try{r[t]=a}catch(n){}}}}function Ja(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,a=n._vModifiers;if(i(a)){if(a.number)return v(t)!==v(e);if(a.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Wa={create:Za,update:Za},Ya=_((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var a=n.split(t);a.length>1&&(e[a[0].trim()]=a[1].trim())}})),e}));function Qa(n){var e=Xa(n.style);return n.staticStyle?I(n.staticStyle,e):e}function Xa(n){return Array.isArray(n)?S(n):"string"==typeof n?Ya(n):n}var nr,er=/^--/,tr=/\s*!important$/,ar=function(n,e,t){if(er.test(e))n.style.setProperty(e,t);else if(tr.test(t))n.style.setProperty(j(e),t.replace(tr,""),"important");else{var a=or(e);if(Array.isArray(t))for(var r=0,o=t.length;r<o;r++)n.style[a]=t[r];else n.style[a]=t}},rr=["Webkit","Moz","ms"],or=_((function(n){if(nr=nr||document.createElement("div").style,"filter"!==(n=T(n))&&n in nr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<rr.length;t++){var a=rr[t]+e;if(a in nr)return a}}));function ir(n,e){var t=e.data,a=n.data;if(!(o(t.staticStyle)&&o(t.style)&&o(a.staticStyle)&&o(a.style))){var r,s,l=e.elm,c=a.staticStyle,d=a.normalizedStyle||a.style||{},p=c||d,u=Xa(e.data.style)||{};e.data.normalizedStyle=i(u.__ob__)?I({},u):u;var m=function(n,e){var t,a={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Qa(r.data))&&I(a,t);(t=Qa(n.data))&&I(a,t);for(var o=n;o=o.parent;)o.data&&(t=Qa(o.data))&&I(a,t);return a}(e,!0);for(s in p)o(m[s])&&ar(l,s,"");for(s in m)(r=m[s])!==p[s]&&ar(l,s,null==r?"":r)}}var sr={create:ir,update:ir},lr=/\s+/;function cr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(lr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function dr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(lr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),a=" "+e+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function pr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&I(e,ur(n.name||"v")),I(e,n),e}return"string"==typeof n?ur(n):void 0}}var ur=_((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),mr=Z&&!Y,hr="transition",gr="transitionend",fr="animation",vr="animationend";mr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(hr="WebkitTransition",gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(fr="WebkitAnimation",vr="webkitAnimationEnd"));var br=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function yr(n){br((function(){br(n)}))}function xr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),cr(n,e))}function kr(n,e){n._transitionClasses&&x(n._transitionClasses,e),dr(n,e)}function wr(n,e,t){var a=Er(n,e),r=a.type,o=a.timeout,i=a.propCount;if(!r)return t();var s="transition"===r?gr:vr,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),o+1),n.addEventListener(s,d)}var _r=/\b(transform|all)(,|$)/;function Er(n,e){var t,a=window.getComputedStyle(n),r=(a[hr+"Delay"]||"").split(", "),o=(a[hr+"Duration"]||"").split(", "),i=Tr(r,o),s=(a[fr+"Delay"]||"").split(", "),l=(a[fr+"Duration"]||"").split(", "),c=Tr(s,l),d=0,p=0;return"transition"===e?i>0&&(t="transition",d=i,p=o.length):"animation"===e?c>0&&(t="animation",d=c,p=l.length):p=(t=(d=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?o.length:l.length:0,{type:t,timeout:d,propCount:p,hasTransform:"transition"===t&&_r.test(a[hr+"Property"])}}function Tr(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Ar(e)+Ar(n[t])})))}function Ar(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Cr(n,e){var t=n.elm;i(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=pr(n.data.transition);if(!o(a)&&!i(t._enterCb)&&1===t.nodeType){for(var r=a.css,s=a.type,l=a.enterClass,p=a.enterToClass,u=a.enterActiveClass,m=a.appearClass,h=a.appearToClass,g=a.appearActiveClass,f=a.beforeEnter,b=a.enter,y=a.afterEnter,x=a.enterCancelled,k=a.beforeAppear,w=a.appear,_=a.afterAppear,E=a.appearCancelled,T=a.duration,A=We,C=We.$vnode;C&&C.parent;)A=C.context,C=C.parent;var j=!A._isMounted||!n.isRootInsert;if(!j||w||""===w){var z=j&&m?m:l,B=j&&g?g:u,I=j&&h?h:p,S=j&&k||f,P=j&&c(w)?w:b,L=j&&_||y,$=j&&E||x,D=v(d(T)?T.enter:T);0;var O=!1!==r&&!Y,U=Br(P),q=t._enterCb=M((function(){O&&(kr(t,I),kr(t,B)),q.cancelled?(O&&kr(t,z),$&&$(t)):L&&L(t),t._enterCb=null}));n.data.show||Vn(n,"insert",(function(){var e=t.parentNode,a=e&&e._pending&&e._pending[n.key];a&&a.tag===n.tag&&a.elm._leaveCb&&a.elm._leaveCb(),P&&P(t,q)})),S&&S(t),O&&(xr(t,z),xr(t,B),yr((function(){kr(t,z),q.cancelled||(xr(t,I),U||(zr(D)?setTimeout(q,D):wr(t,s,q)))}))),n.data.show&&(e&&e(),P&&P(t,q)),O||U||q()}}}function jr(n,e){var t=n.elm;i(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=pr(n.data.transition);if(o(a)||1!==t.nodeType)return e();if(!i(t._leaveCb)){var r=a.css,s=a.type,l=a.leaveClass,c=a.leaveToClass,p=a.leaveActiveClass,u=a.beforeLeave,m=a.leave,h=a.afterLeave,g=a.leaveCancelled,f=a.delayLeave,b=a.duration,y=!1!==r&&!Y,x=Br(m),k=v(d(b)?b.leave:b);0;var w=t._leaveCb=M((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(kr(t,c),kr(t,p)),w.cancelled?(y&&kr(t,l),g&&g(t)):(e(),h&&h(t)),t._leaveCb=null}));f?f(_):_()}function _(){w.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),u&&u(t),y&&(xr(t,l),xr(t,p),yr((function(){kr(t,l),w.cancelled||(xr(t,c),x||(zr(k)?setTimeout(w,k):wr(t,s,w)))}))),m&&m(t,w),y||x||w())}}function zr(n){return"number"==typeof n&&!isNaN(n)}function Br(n){if(o(n))return!1;var e=n.fns;return i(e)?Br(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Ir(n,e){!0!==e.data.show&&Cr(e)}var Sr=function(n){var e,t,a={},c=n.modules,d=n.nodeOps;for(e=0;e<Ea.length;++e)for(a[Ea[e]]=[],t=0;t<c.length;++t)i(c[t][Ea[e]])&&a[Ea[e]].push(c[t][Ea[e]]);function p(n){var e=d.parentNode(n);i(e)&&d.removeChild(e,n)}function u(n,e,t,r,o,l,c){if(i(n.elm)&&i(l)&&(n=l[c]=fn(n)),n.isRootInsert=!o,!function(n,e,t,r){var o=n.data;if(i(o)){var l=i(n.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(n,!1),i(n.componentInstance))return m(n,e),h(t,n.elm,r),s(l)&&function(n,e,t,r){var o,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,i(o=s.data)&&i(o=o.transition)){for(o=0;o<a.activate.length;++o)a.activate[o](_a,s);e.push(s);break}h(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var p=n.data,u=n.children,f=n.tag;i(f)?(n.elm=n.ns?d.createElementNS(n.ns,f):d.createElement(f,n),y(n),g(n,u,e),i(p)&&v(n,e),h(t,n.elm,r)):s(n.isComment)?(n.elm=d.createComment(n.text),h(t,n.elm,r)):(n.elm=d.createTextNode(n.text),h(t,n.elm,r))}}function m(n,e){i(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(v(n,e),y(n)):(ka(n),e.push(n))}function h(n,e,t){i(n)&&(i(t)?d.parentNode(t)===n&&d.insertBefore(n,e,t):d.appendChild(n,e))}function g(n,e,t){if(r(e)){0;for(var a=0;a<e.length;++a)u(e[a],t,n.elm,null,!0,e,a)}else l(n.text)&&d.appendChild(n.elm,d.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return i(n.tag)}function v(n,t){for(var r=0;r<a.create.length;++r)a.create[r](_a,n);i(e=n.data.hook)&&(i(e.create)&&e.create(_a,n),i(e.insert)&&t.push(n))}function y(n){var e;if(i(e=n.fnScopeId))d.setStyleScope(n.elm,e);else for(var t=n;t;)i(e=t.context)&&i(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e),t=t.parent;i(e=We)&&e!==n.context&&e!==n.fnContext&&i(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e)}function x(n,e,t,a,r,o){for(;a<=r;++a)u(t[a],o,n,e,!1,t,a)}function k(n){var e,t,r=n.data;if(i(r))for(i(e=r.hook)&&i(e=e.destroy)&&e(n),e=0;e<a.destroy.length;++e)a.destroy[e](n);if(i(e=n.children))for(t=0;t<n.children.length;++t)k(n.children[t])}function w(n,e,t){for(;e<=t;++e){var a=n[e];i(a)&&(i(a.tag)?(_(a),k(a)):p(a.elm))}}function _(n,e){if(i(e)||i(n.data)){var t,r=a.remove.length+1;for(i(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,r),i(t=n.componentInstance)&&i(t=t._vnode)&&i(t.data)&&_(t,e),t=0;t<a.remove.length;++t)a.remove[t](n,e);i(t=n.data.hook)&&i(t=t.remove)?t(n,e):e()}else p(n.elm)}function E(n,e,t,a){for(var r=t;r<a;r++){var o=e[r];if(i(o)&&Ta(n,o))return r}}function T(n,e,t,r,l,c){if(n!==e){i(e.elm)&&i(r)&&(e=r[l]=fn(e));var p=e.elm=n.elm;if(s(n.isAsyncPlaceholder))i(e.asyncFactory.resolved)?j(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;i(h)&&i(m=h.hook)&&i(m=m.prepatch)&&m(n,e);var g=n.children,v=e.children;if(i(h)&&f(e)){for(m=0;m<a.update.length;++m)a.update[m](n,e);i(m=h.hook)&&i(m=m.update)&&m(n,e)}o(e.text)?i(g)&&i(v)?g!==v&&function(n,e,t,a,r){var s,l,c,p=0,m=0,h=e.length-1,g=e[0],f=e[h],v=t.length-1,b=t[0],y=t[v],k=!r;for(0;p<=h&&m<=v;)o(g)?g=e[++p]:o(f)?f=e[--h]:Ta(g,b)?(T(g,b,a,t,m),g=e[++p],b=t[++m]):Ta(f,y)?(T(f,y,a,t,v),f=e[--h],y=t[--v]):Ta(g,y)?(T(g,y,a,t,v),k&&d.insertBefore(n,g.elm,d.nextSibling(f.elm)),g=e[++p],y=t[--v]):Ta(f,b)?(T(f,b,a,t,m),k&&d.insertBefore(n,f.elm,g.elm),f=e[--h],b=t[++m]):(o(s)&&(s=Aa(e,p,h)),o(l=i(b.key)?s[b.key]:E(b,e,p,h))?u(b,a,n,g.elm,!1,t,m):Ta(c=e[l],b)?(T(c,b,a,t,m),e[l]=void 0,k&&d.insertBefore(n,c.elm,g.elm)):u(b,a,n,g.elm,!1,t,m),b=t[++m]);p>h?x(n,o(t[v+1])?null:t[v+1].elm,t,m,v,a):m>v&&w(e,p,h)}(p,g,v,t,c):i(v)?(i(n.text)&&d.setTextContent(p,""),x(p,null,v,0,v.length-1,t)):i(g)?w(g,0,g.length-1):i(n.text)&&d.setTextContent(p,""):n.text!==e.text&&d.setTextContent(p,e.text),i(h)&&i(m=h.hook)&&i(m=m.postpatch)&&m(n,e)}}}function A(n,e,t){if(s(t)&&i(n.parent))n.parent.data.pendingInsert=e;else for(var a=0;a<e.length;++a)e[a].data.hook.insert(e[a])}var C=b("attrs,class,staticClass,staticStyle,key");function j(n,e,t,a){var r,o=e.tag,l=e.data,c=e.children;if(a=a||l&&l.pre,e.elm=n,s(e.isComment)&&i(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(i(l)&&(i(r=l.hook)&&i(r=r.init)&&r(e,!0),i(r=e.componentInstance)))return m(e,t),!0;if(i(o)){if(i(c))if(n.hasChildNodes())if(i(r=l)&&i(r=r.domProps)&&i(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var d=!0,p=n.firstChild,u=0;u<c.length;u++){if(!p||!j(p,c[u],t,a)){d=!1;break}p=p.nextSibling}if(!d||p)return!1}else g(e,c,t);if(i(l)){var h=!1;for(var f in l)if(!C(f)){h=!0,v(e,t);break}!h&&l.class&&Fe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!o(e)){var l,c=!1,p=[];if(o(n))c=!0,u(e,p);else{var m=i(n.nodeType);if(!m&&Ta(n,e))T(n,e,p,null,null,r);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&j(n,e,p))return A(e,p,!0),n;l=n,n=new mn(d.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,g=d.parentNode(h);if(u(e,p,h._leaveCb?null:g,d.nextSibling(h)),i(e.parent))for(var v=e.parent,b=f(e);v;){for(var y=0;y<a.destroy.length;++y)a.destroy[y](v);if(v.elm=e.elm,b){for(var x=0;x<a.create.length;++x)a.create[x](_a,v);var _=v.data.hook.insert;if(_.merged)for(var E=_.fns.slice(1),C=0;C<E.length;C++)E[C]()}else ka(v);v=v.parent}i(g)?w([n],0,0):i(n.tag)&&k(n)}}return A(e,p,c),e.elm}i(n)&&k(n)}}({nodeOps:ya,modules:[Oa,qa,Va,Wa,sr,Z?{create:Ir,activate:Ir,remove:function(n,e){!0!==n.data.show?jr(n,e):e()}}:{}].concat(Pa)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&qr(n,"input")}));var Pr={inserted:function(n,e,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?Vn(t,"postpatch",(function(){Pr.componentUpdated(n,e,t)})):Lr(n,e,t.context),n._vOptions=[].map.call(n.options,Or)):("textarea"===t.tag||ba(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Mr),n.addEventListener("compositionend",Ur),n.addEventListener("change",Ur),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Lr(n,e,t.context);var a=n._vOptions,r=n._vOptions=[].map.call(n.options,Or);if(r.some((function(n,e){return!D(n,a[e])})))(n.multiple?e.value.some((function(n){return Dr(n,r)})):e.value!==e.oldValue&&Dr(e.value,r))&&qr(n,"change")}}};function Lr(n,e,t){$r(n,e,t),(W||Q)&&setTimeout((function(){$r(n,e,t)}),0)}function $r(n,e,t){var a=e.value,r=n.multiple;if(!r||Array.isArray(a)){for(var o,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],r)o=O(a,Or(i))>-1,i.selected!==o&&(i.selected=o);else if(D(Or(i),a))return void(n.selectedIndex!==s&&(n.selectedIndex=s));r||(n.selectedIndex=-1)}}function Dr(n,e){return e.every((function(e){return!D(e,n)}))}function Or(n){return"_value"in n?n._value:n.value}function Mr(n){n.target.composing=!0}function Ur(n){n.target.composing&&(n.target.composing=!1,qr(n.target,"input"))}function qr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Nr(n){return!n.componentInstance||n.data&&n.data.transition?n:Nr(n.componentInstance._vnode)}var Fr={model:Pr,show:{bind:function(n,e,t){var a=e.value,r=(t=Nr(t)).data&&t.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;a&&r?(t.data.show=!0,Cr(t,(function(){n.style.display=o}))):n.style.display=a?o:"none"},update:function(n,e,t){var a=e.value;!a!=!e.oldValue&&((t=Nr(t)).data&&t.data.transition?(t.data.show=!0,a?Cr(t,(function(){n.style.display=n.__vOriginalDisplay})):jr(t,(function(){n.style.display="none"}))):n.style.display=a?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,a,r){r||(n.style.display=n.__vOriginalDisplay)}}},Rr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Kr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Kr(Ee(e.children)):n}function Hr(n){var e={},t=n.$options;for(var a in t.propsData)e[a]=n[a];var r=t._parentListeners;for(var a in r)e[T(a)]=r[a];return e}function Gr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Vr=function(n){return n.tag||he(n)},Zr=function(n){return"show"===n.name},Jr={name:"transition",props:Rr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Vr)).length){0;var a=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var o=Kr(r);if(!o)return r;if(this._leaving)return Gr(n,r);var i="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?i+"comment":i+o.tag:l(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var s=(o.data||(o.data={})).transition=Hr(this),c=this._vnode,d=Kr(c);if(o.data.directives&&o.data.directives.some(Zr)&&(o.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(o,d)&&!he(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var p=d.data.transition=I({},s);if("out-in"===a)return this._leaving=!0,Vn(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Gr(n,r);if("in-out"===a){if(he(o))return c;var u,m=function(){u()};Vn(s,"afterEnter",m),Vn(s,"enterCancelled",m),Vn(p,"delayLeave",(function(n){u=n}))}}return r}}},Wr=I({tag:String,moveClass:String},Rr);function Yr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Qr(n){n.data.newPos=n.elm.getBoundingClientRect()}function Xr(n){var e=n.data.pos,t=n.data.newPos,a=e.left-t.left,r=e.top-t.top;if(a||r){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate(".concat(a,"px,").concat(r,"px)"),o.transitionDuration="0s"}}delete Wr.mode;var no={Transition:Jr,TransitionGroup:{props:Wr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,a){var r=Ye(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,a)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,r=this.$slots.default||[],o=this.children=[],i=Hr(this),s=0;s<r.length;s++){if((d=r[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))o.push(d),t[d.key]=d,(d.data||(d.data={})).transition=i;else;}if(a){var l=[],c=[];for(s=0;s<a.length;s++){var d;(d=a[s]).data.transition=i,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=n(e,null,l),this.removed=c}return n(e,null,o)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Yr),n.forEach(Qr),n.forEach(Xr),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,a=t.style;xr(t,e),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(gr,t._moveCb=function n(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(gr,n),t._moveCb=null,kr(t,e))})}})))},methods:{hasMove:function(n,e){if(!mr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){dr(t,n)})),cr(t,e),t.style.display="none",this.$el.appendChild(t);var a=Er(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};function eo(n,e){for(var t in e)n[t]=e[t];return n}Gt.config.mustUseProp=function(n,e,t){return"value"===t&&ea(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Gt.config.isReservedTag=fa,Gt.config.isReservedAttr=na,Gt.config.getTagNamespace=function(n){return ga(n)?"svg":"math"===n?"math":void 0},Gt.config.isUnknownElement=function(n){if(!Z)return!0;if(fa(n))return!1;if(n=n.toLowerCase(),null!=va[n])return va[n];var e=document.createElement(n);return n.indexOf("-")>-1?va[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:va[n]=/HTMLUnknownElement/.test(e.toString())},I(Gt.options.directives,Fr),I(Gt.options.components,no),Gt.prototype.__patch__=Z?Sr:P,Gt.prototype.$mount=function(n,e){return function(n,e,t){var a;n.$el=e,n.$options.render||(n.$options.render=hn),nt(n,"beforeMount"),a=function(){n._update(n._render(),t)},new He(n,a,P,{before:function(){n._isMounted&&!n._isDestroyed&&nt(n,"beforeUpdate")}},!0),t=!1;var r=n._preWatchers;if(r)for(var o=0;o<r.length;o++)r[o].run();return null==n.$vnode&&(n._isMounted=!0,nt(n,"mounted")),n}(this,n=n&&Z?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},Z&&setTimeout((function(){F.devtools&&sn&&sn.emit("init",Gt)}),0);var to=/[!'()*]/g,ao=function(n){return"%"+n.charCodeAt(0).toString(16)},ro=/%2C/g,oo=function(n){return encodeURIComponent(n).replace(to,ao).replace(ro,",")};function io(n){try{return decodeURIComponent(n)}catch(n){0}return n}var so=function(n){return null==n||"object"==typeof n?n:String(n)};function lo(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),a=io(t.shift()),r=t.length>0?io(t.join("=")):null;void 0===e[a]?e[a]=r:Array.isArray(e[a])?e[a].push(r):e[a]=[e[a],r]})),e):e}function co(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return oo(e);if(Array.isArray(t)){var a=[];return t.forEach((function(n){void 0!==n&&(null===n?a.push(oo(e)):a.push(oo(e)+"="+oo(n)))})),a.join("&")}return oo(e)+"="+oo(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var po=/\/?$/;function uo(n,e,t,a){var r=a&&a.options.stringifyQuery,o=e.query||{};try{o=mo(o)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:o,params:e.params||{},fullPath:fo(e,r),matched:n?go(n):[]};return t&&(i.redirectedFrom=fo(t,r)),Object.freeze(i)}function mo(n){if(Array.isArray(n))return n.map(mo);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=mo(n[t]);return e}return n}var ho=uo(null,{path:"/"});function go(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function fo(n,e){var t=n.path,a=n.query;void 0===a&&(a={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||co)(a)+r}function vo(n,e,t){return e===ho?n===e:!!e&&(n.path&&e.path?n.path.replace(po,"")===e.path.replace(po,"")&&(t||n.hash===e.hash&&bo(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&bo(n.query,e.query)&&bo(n.params,e.params))))}function bo(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),a=Object.keys(e).sort();return t.length===a.length&&t.every((function(t,r){var o=n[t];if(a[r]!==t)return!1;var i=e[t];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?bo(o,i):String(o)===String(i)}))}function yo(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var a in t.instances){var r=t.instances[a],o=t.enteredCbs[a];if(r&&o){delete t.enteredCbs[a];for(var i=0;i<o.length;i++)r._isBeingDestroyed||o[i](r)}}}}var xo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,a=e.children,r=e.parent,o=e.data;o.routerView=!0;for(var i=r.$createElement,s=t.name,l=r.$route,c=r._routerViewCache||(r._routerViewCache={}),d=0,p=!1;r&&r._routerRoot!==r;){var u=r.$vnode?r.$vnode.data:{};u.routerView&&d++,u.keepAlive&&r._directInactive&&r._inactive&&(p=!0),r=r.$parent}if(o.routerViewDepth=d,p){var m=c[s],h=m&&m.component;return h?(m.configProps&&ko(h,o,m.route,m.configProps),i(h,o,a)):i()}var g=l.matched[d],f=g&&g.components[s];if(!g||!f)return c[s]=null,i();c[s]={component:f},o.registerRouteInstance=function(n,e){var t=g.instances[s];(e&&t!==n||!e&&t===n)&&(g.instances[s]=e)},(o.hook||(o.hook={})).prepatch=function(n,e){g.instances[s]=e.componentInstance},o.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==g.instances[s]&&(g.instances[s]=n.componentInstance),yo(l)};var v=g.props&&g.props[s];return v&&(eo(c[s],{route:l,configProps:v}),ko(f,o,l,v)),i(f,o,a)}};function ko(n,e,t,a){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,a);if(r){r=e.props=eo({},r);var o=e.attrs=e.attrs||{};for(var i in r)n.props&&i in n.props||(o[i]=r[i],delete r[i])}}function wo(n,e,t){var a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var o=n.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function _o(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var Eo=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},To=Uo,Ao=Io,Co=function(n,e){return Po(Io(n,e),e)},jo=Po,zo=Mo,Bo=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Io(n,e){for(var t,a=[],r=0,o=0,i="",s=e&&e.delimiter||"/";null!=(t=Bo.exec(n));){var l=t[0],c=t[1],d=t.index;if(i+=n.slice(o,d),o=d+l.length,c)i+=c[1];else{var p=n[o],u=t[2],m=t[3],h=t[4],g=t[5],f=t[6],v=t[7];i&&(a.push(i),i="");var b=null!=u&&null!=p&&p!==u,y="+"===f||"*"===f,x="?"===f||"*"===f,k=t[2]||s,w=h||g;a.push({name:m||r++,prefix:u||"",delimiter:k,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:w?$o(w):v?".*":"[^"+Lo(k)+"]+?"})}}return o<n.length&&(i+=n.substr(o)),i&&a.push(i),a}function So(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Po(n,e){for(var t=new Array(n.length),a=0;a<n.length;a++)"object"==typeof n[a]&&(t[a]=new RegExp("^(?:"+n[a].pattern+")$",Oo(e)));return function(e,a){for(var r="",o=e||{},i=(a||{}).pretty?So:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=o[l.name];if(null==d){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Eo(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(c=i(d[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');r+=l.prefix+c}}else r+=l}return r}}function Lo(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function $o(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Do(n,e){return n.keys=e,n}function Oo(n){return n&&n.sensitive?"":"i"}function Mo(n,e,t){Eo(e)||(t=e||t,e=[]);for(var a=(t=t||{}).strict,r=!1!==t.end,o="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)o+=Lo(s);else{var l=Lo(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=Lo(t.delimiter||"/"),p=o.slice(-d.length)===d;return a||(o=(p?o.slice(0,-d.length):o)+"(?:"+d+"(?=$))?"),o+=r?"$":a&&p?"":"(?="+d+"|$)",Do(new RegExp("^"+o,Oo(t)),e)}function Uo(n,e,t){return Eo(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)e.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Do(n,e)}(n,e):Eo(n)?function(n,e,t){for(var a=[],r=0;r<n.length;r++)a.push(Uo(n[r],e,t).source);return Do(new RegExp("(?:"+a.join("|")+")",Oo(t)),e)}(n,e,t):function(n,e,t){return Mo(Io(n,t),e,t)}(n,e,t)}To.parse=Ao,To.compile=Co,To.tokensToFunction=jo,To.tokensToRegExp=zo;var qo=Object.create(null);function No(n,e,t){e=e||{};try{var a=qo[n]||(qo[n]=To.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),a(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Fo(n,e,t,a){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var o=(r=eo({},n)).params;return o&&"object"==typeof o&&(r.params=eo({},o)),r}if(!r.path&&r.params&&e){(r=eo({},r))._normalized=!0;var i=eo(eo({},e.params),r.params);if(e.name)r.name=e.name,r.params=i;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;r.path=No(s,i,e.path)}else 0;return r}var l=function(n){var e="",t="",a=n.indexOf("#");a>=0&&(e=n.slice(a),n=n.slice(0,a));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),c=e&&e.path||"/",d=l.path?wo(l.path,c,t||r.append):c,p=function(n,e,t){void 0===e&&(e={});var a,r=t||lo;try{a=r(n||"")}catch(n){a={}}for(var o in e){var i=e[o];a[o]=Array.isArray(i)?i.map(so):so(i)}return a}(l.query,r.query,a&&a.options.parseQuery),u=r.hash||l.hash;return u&&"#"!==u.charAt(0)&&(u="#"+u),{_normalized:!0,path:d,query:p,hash:u}}var Ro,Ko=function(){},Ho={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,a=this.$route,r=t.resolve(this.to,a,this.append),o=r.location,i=r.route,s=r.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,u=null==d?"router-link-exact-active":d,m=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?u:this.exactActiveClass,g=i.redirectedFrom?uo(null,Fo(i.redirectedFrom),null,t):i;l[h]=vo(a,g,this.exactPath),l[m]=this.exact||this.exactPath?l[h]:function(n,e){return 0===n.path.replace(po,"/").indexOf(e.path.replace(po,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(a,g);var f=l[h]?this.ariaCurrentValue:null,v=function(n){Go(n)&&(e.replace?t.replace(o,Ko):t.push(o,Ko))},b={click:Go};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:i,navigate:v,isActive:l[m],isExactActive:l[h]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?n():n("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":f};else{var k=function n(e){var t;if(e)for(var a=0;a<e.length;a++){if("a"===(t=e[a]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var w=k.data=eo({},k.data);for(var _ in w.on=w.on||{},w.on){var E=w.on[_];_ in b&&(w.on[_]=Array.isArray(E)?E:[E])}for(var T in b)T in w.on?w.on[T].push(b[T]):w.on[T]=v;var A=k.data.attrs=eo({},k.data.attrs);A.href=s,A["aria-current"]=f}else y.on=b}return n(this.tag,y,this.$slots.default)}};function Go(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Vo="undefined"!=typeof window;function Zo(n,e,t,a,r){var o=e||[],i=t||Object.create(null),s=a||Object.create(null);n.forEach((function(n){!function n(e,t,a,r,o,i){var s=r.path,l=r.name;0;var c=r.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return _o(e.path+"/"+n)}(s,o,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var p={path:d,regex:Jo(d,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:i,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var o=i?_o(i+"/"+r.path):void 0;n(e,t,a,r,p,o)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==r.alias)for(var u=Array.isArray(r.alias)?r.alias:[r.alias],m=0;m<u.length;++m){0;var h={path:u[m],children:r.children};n(e,t,a,h,o,p.path||"/")}l&&(a[l]||(a[l]=p))}(o,i,s,n,r)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:i,nameMap:s}}function Jo(n,e){return To(n,[],e)}function Wo(n,e){var t=Zo(n),a=t.pathList,r=t.pathMap,o=t.nameMap;function i(n,t,i){var s=Fo(n,t,!1,e),c=s.name;if(c){var d=o[c];if(!d)return l(null,s);var p=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var u in t.params)!(u in s.params)&&p.indexOf(u)>-1&&(s.params[u]=t.params[u]);return s.path=No(d.path,s.params),l(d,s,i)}if(s.path){s.params={};for(var m=0;m<a.length;m++){var h=a[m],g=r[h];if(Yo(g.regex,s.path,s.params))return l(g,s,i)}}return l(null,s)}function s(n,t){var a=n.redirect,r="function"==typeof a?a(uo(n,t,null,e)):a;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,t);var s=r,c=s.name,d=s.path,p=t.query,u=t.hash,m=t.params;if(p=s.hasOwnProperty("query")?s.query:p,u=s.hasOwnProperty("hash")?s.hash:u,m=s.hasOwnProperty("params")?s.params:m,c){o[c];return i({_normalized:!0,name:c,query:p,hash:u,params:m},void 0,t)}if(d){var h=function(n,e){return wo(n,e.parent?e.parent.path:"/",!0)}(d,n);return i({_normalized:!0,path:No(h,m),query:p,hash:u},void 0,t)}return l(null,t)}function l(n,t,a){return n&&n.redirect?s(n,a||t):n&&n.matchAs?function(n,e,t){var a=i({_normalized:!0,path:No(t,e.params)});if(a){var r=a.matched,o=r[r.length-1];return e.params=a.params,l(o,e)}return l(null,e)}(0,t,n.matchAs):uo(n,t,a,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?o[n]:void 0;Zo([e||n],a,r,o,t),t&&t.alias.length&&Zo(t.alias.map((function(n){return{path:n,children:[e]}})),a,r,o,t)},getRoutes:function(){return a.map((function(n){return r[n]}))},addRoutes:function(n){Zo(n,a,r,o)}}}function Yo(n,e,t){var a=e.match(n);if(!a)return!1;if(!t)return!0;for(var r=1,o=a.length;r<o;++r){var i=n.keys[r-1];i&&(t[i.name||"pathMatch"]="string"==typeof a[r]?io(a[r]):a[r])}return!0}var Qo=Vo&&window.performance&&window.performance.now?window.performance:Date;function Xo(){return Qo.now().toFixed(3)}var ni=Xo();function ei(){return ni}function ti(n){return ni=n}var ai=Object.create(null);function ri(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=eo({},window.history.state);return t.key=ei(),window.history.replaceState(t,"",e),window.addEventListener("popstate",si),function(){window.removeEventListener("popstate",si)}}function oi(n,e,t,a){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var o=function(){var n=ei();if(n)return ai[n]}(),i=r.call(n,e,t,a?o:null);i&&("function"==typeof i.then?i.then((function(n){ui(n,o)})).catch((function(n){0})):ui(i,o))}))}}function ii(){var n=ei();n&&(ai[n]={x:window.pageXOffset,y:window.pageYOffset})}function si(n){ii(),n.state&&n.state.key&&ti(n.state.key)}function li(n){return di(n.x)||di(n.y)}function ci(n){return{x:di(n.x)?n.x:window.pageXOffset,y:di(n.y)?n.y:window.pageYOffset}}function di(n){return"number"==typeof n}var pi=/^#\d/;function ui(n,e){var t,a="object"==typeof n;if(a&&"string"==typeof n.selector){var r=pi.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var o=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),a=n.getBoundingClientRect();return{x:a.left-t.left-e.x,y:a.top-t.top-e.y}}(r,o={x:di((t=o).x)?t.x:0,y:di(t.y)?t.y:0})}else li(n)&&(e=ci(n))}else a&&li(n)&&(e=ci(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var mi,hi=Vo&&((-1===(mi=window.navigator.userAgent).indexOf("Android 2.")&&-1===mi.indexOf("Android 4.0")||-1===mi.indexOf("Mobile Safari")||-1!==mi.indexOf("Chrome")||-1!==mi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function gi(n,e){ii();var t=window.history;try{if(e){var a=eo({},t.state);a.key=ei(),t.replaceState(a,"",n)}else t.pushState({key:ti(Xo())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function fi(n){gi(n,!0)}var vi={redirected:2,aborted:4,cancelled:8,duplicated:16};function bi(n,e){return xi(n,e,vi.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return ki.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function yi(n,e){return xi(n,e,vi.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function xi(n,e,t,a){var r=new Error(a);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var ki=["params","query","hash"];function wi(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function _i(n,e){return wi(n)&&n._isRouter&&(null==e||n.type===e)}function Ei(n,e,t){var a=function(r){r>=n.length?t():n[r]?e(n[r],(function(){a(r+1)})):a(r+1)};a(0)}function Ti(n){return function(e,t,a){var r=!1,o=0,i=null;Ai(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){r=!0,o++;var l,c=zi((function(e){var r;((r=e).__esModule||ji&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Ro.extend(e),t.components[s]=e,--o<=0&&a()})),d=zi((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=wi(n)?n:new Error(e),a(i))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,d)}}})),r||a()}}function Ai(n,e){return Ci(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Ci(n){return Array.prototype.concat.apply([],n)}var ji="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function zi(n){var e=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!e)return e=!0,n.apply(this,t)}}var Bi=function(n,e){this.router=n,this.base=function(n){if(!n)if(Vo){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=ho,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Ii(n,e,t,a){var r=Ai(n,(function(n,a,r,o){var i=function(n,e){"function"!=typeof n&&(n=Ro.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,a,r,o)})):t(i,a,r,o)}));return Ci(a?r.reverse():r)}function Si(n,e){if(e)return function(){return n.apply(e,arguments)}}Bi.prototype.listen=function(n){this.cb=n},Bi.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Bi.prototype.onError=function(n){this.errorCbs.push(n)},Bi.prototype.transitionTo=function(n,e,t){var a,r=this;try{a=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var o=this.current;this.confirmTransition(a,(function(){r.updateRoute(a),e&&e(a),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(a,o)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(a)})))}),(function(n){t&&t(n),n&&!r.ready&&(_i(n,vi.redirected)&&o===ho||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},Bi.prototype.confirmTransition=function(n,e,t){var a=this,r=this.current;this.pending=n;var o,i,s=function(n){!_i(n)&&wi(n)&&(a.errorCbs.length?a.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=r.matched.length-1;if(vo(n,r)&&l===c&&n.matched[l]===r.matched[c])return this.ensureURL(),n.hash&&oi(this.router,r,n,!1),s(((i=xi(o=r,n,vi.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",i));var d=function(n,e){var t,a=Math.max(n.length,e.length);for(t=0;t<a&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=d.updated,u=d.deactivated,m=d.activated,h=[].concat(function(n){return Ii(n,"beforeRouteLeave",Si,!0)}(u),this.router.beforeHooks,function(n){return Ii(n,"beforeRouteUpdate",Si)}(p),m.map((function(n){return n.beforeEnter})),Ti(m)),g=function(e,t){if(a.pending!==n)return s(yi(r,n));try{e(n,r,(function(e){!1===e?(a.ensureURL(!0),s(function(n,e){return xi(n,e,vi.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):wi(e)?(a.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(bi(r,n)),"object"==typeof e&&e.replace?a.replace(e):a.push(e)):t(e)}))}catch(n){s(n)}};Ei(h,g,(function(){Ei(function(n){return Ii(n,"beforeRouteEnter",(function(n,e,t,a){return function(n,e,t){return function(a,r,o){return n(a,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),o(n)}))}}(n,t,a)}))}(m).concat(a.router.resolveHooks),g,(function(){if(a.pending!==n)return s(yi(r,n));a.pending=null,e(n),a.router.app&&a.router.app.$nextTick((function(){yo(n)}))}))}))},Bi.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Bi.prototype.setupListeners=function(){},Bi.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=ho,this.pending=null};var Pi=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Li(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,a=hi&&t;a&&this.listeners.push(ri());var r=function(){var t=n.current,r=Li(n.base);n.current===ho&&r===n._startLocation||n.transitionTo(r,(function(n){a&&oi(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){gi(_o(a.base+n.fullPath)),oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){fi(_o(a.base+n.fullPath)),oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Li(this.base)!==this.current.fullPath){var e=_o(this.base+this.current.fullPath);n?gi(e):fi(e)}},e.prototype.getCurrentLocation=function(){return Li(this.base)},e}(Bi);function Li(n){var e=window.location.pathname,t=e.toLowerCase(),a=n.toLowerCase();return!n||t!==a&&0!==t.indexOf(_o(a+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var $i=function(n){function e(e,t,a){n.call(this,e,t),a&&function(n){var e=Li(n);if(!/^\/#/.test(e))return window.location.replace(_o(n+"/#"+e)),!0}(this.base)||Di()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=hi&&e;t&&this.listeners.push(ri());var a=function(){var e=n.current;Di()&&n.transitionTo(Oi(),(function(a){t&&oi(n.router,a,e,!0),hi||qi(a.fullPath)}))},r=hi?"popstate":"hashchange";window.addEventListener(r,a),this.listeners.push((function(){window.removeEventListener(r,a)}))}},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Ui(n.fullPath),oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){qi(n.fullPath),oi(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Oi()!==e&&(n?Ui(e):qi(e))},e.prototype.getCurrentLocation=function(){return Oi()},e}(Bi);function Di(){var n=Oi();return"/"===n.charAt(0)||(qi("/"+n),!1)}function Oi(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Mi(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Ui(n){hi?gi(Mi(n)):window.location.hash=n}function qi(n){hi?fi(Mi(n)):window.location.replace(Mi(n))}var Ni=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index+1).concat(n),a.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var n=e.current;e.index=t,e.updateRoute(a),e.router.afterHooks.forEach((function(e){e&&e(a,n)}))}),(function(n){_i(n,vi.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Bi),Fi=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Wo(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!hi&&!1!==n.fallback,this.fallback&&(e="hash"),Vo||(e="abstract"),this.mode=e,e){case"history":this.history=new Pi(this,n.base);break;case"hash":this.history=new $i(this,n.base,this.fallback);break;case"abstract":this.history=new Ni(this,n.base);break;default:0}},Ri={currentRoute:{configurable:!0}};Fi.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Ri.currentRoute.get=function(){return this.history&&this.history.current},Fi.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Pi||t instanceof $i){var a=function(n){t.setupListeners(),function(n){var a=t.current,r=e.options.scrollBehavior;hi&&r&&"fullPath"in n&&oi(e,n,a,!1)}(n)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Fi.prototype.beforeEach=function(n){return Hi(this.beforeHooks,n)},Fi.prototype.beforeResolve=function(n){return Hi(this.resolveHooks,n)},Fi.prototype.afterEach=function(n){return Hi(this.afterHooks,n)},Fi.prototype.onReady=function(n,e){this.history.onReady(n,e)},Fi.prototype.onError=function(n){this.history.onError(n)},Fi.prototype.push=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.push(n,e,t)}));this.history.push(n,e,t)},Fi.prototype.replace=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.replace(n,e,t)}));this.history.replace(n,e,t)},Fi.prototype.go=function(n){this.history.go(n)},Fi.prototype.back=function(){this.go(-1)},Fi.prototype.forward=function(){this.go(1)},Fi.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Fi.prototype.resolve=function(n,e,t){var a=Fo(n,e=e||this.history.current,t,this),r=this.match(a,e),o=r.redirectedFrom||r.fullPath;return{location:a,route:r,href:function(n,e,t){var a="hash"===t?"#"+e:e;return n?_o(n+"/"+a):a}(this.history.base,o,this.mode),normalizedTo:a,resolved:r}},Fi.prototype.getRoutes=function(){return this.matcher.getRoutes()},Fi.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==ho&&this.history.transitionTo(this.history.getCurrentLocation())},Fi.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==ho&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Fi.prototype,Ri);var Ki=Fi;function Hi(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Fi.install=function n(e){if(!n.installed||Ro!==e){n.installed=!0,Ro=e;var t=function(n){return void 0!==n},a=function(n,e){var a=n.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",xo),e.component("RouterLink",Ho);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Fi.version="3.6.5",Fi.isNavigationFailure=_i,Fi.NavigationFailureType=vi,Fi.START_LOCATION=ho,Vo&&window.Vue&&window.Vue.use(Fi);t(106);t(24),t(131);var Gi={NotFound:()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,341)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,340))},Vi={"v-ffe10ecc":()=>t.e(10).then(t.bind(null,345)),"v-00559ed1":()=>t.e(13).then(t.bind(null,346)),"v-f4aeb55c":()=>t.e(11).then(t.bind(null,347)),"v-5713ac58":()=>t.e(15).then(t.bind(null,348)),"v-224cdd65":()=>t.e(12).then(t.bind(null,349)),"v-4f1e993d":()=>t.e(17).then(t.bind(null,350)),"v-3211a459":()=>t.e(14).then(t.bind(null,351)),"v-6c04f89d":()=>t.e(18).then(t.bind(null,352)),"v-5f6936bd":()=>t.e(19).then(t.bind(null,353)),"v-6e3f23d2":()=>t.e(21).then(t.bind(null,354)),"v-0315e517":()=>t.e(20).then(t.bind(null,355)),"v-8da3e372":()=>t.e(16).then(t.bind(null,356)),"v-4b21f069":()=>t.e(23).then(t.bind(null,357)),"v-818a057c":()=>t.e(22).then(t.bind(null,358)),"v-46d619bc":()=>t.e(24).then(t.bind(null,359)),"v-f6d91694":()=>t.e(25).then(t.bind(null,360)),"v-0bac056c":()=>t.e(26).then(t.bind(null,361)),"v-c746b608":()=>t.e(27).then(t.bind(null,362)),"v-3e7efa7c":()=>t.e(28).then(t.bind(null,363)),"v-d4d1bfd8":()=>t.e(29).then(t.bind(null,364)),"v-10bf0d48":()=>t.e(31).then(t.bind(null,365)),"v-07f98b7c":()=>t.e(30).then(t.bind(null,366)),"v-c75131f0":()=>t.e(33).then(t.bind(null,367)),"v-b1b00070":()=>t.e(34).then(t.bind(null,368)),"v-34ffc272":()=>t.e(32).then(t.bind(null,369)),"v-487ce94a":()=>t.e(35).then(t.bind(null,370)),"v-c088041a":()=>t.e(36).then(t.bind(null,371)),"v-618df9e0":()=>t.e(37).then(t.bind(null,372)),"v-865be344":()=>t.e(38).then(t.bind(null,373)),"v-67a38b09":()=>t.e(39).then(t.bind(null,374)),"v-e2a3f396":()=>t.e(40).then(t.bind(null,375)),"v-74b855d2":()=>t.e(41).then(t.bind(null,376)),"v-308314f7":()=>t.e(42).then(t.bind(null,377)),"v-73322bb1":()=>t.e(43).then(t.bind(null,378)),"v-9d4cc452":()=>t.e(44).then(t.bind(null,379)),"v-1fc7487e":()=>t.e(45).then(t.bind(null,380)),"v-ba40d9ba":()=>t.e(46).then(t.bind(null,381)),"v-91f44108":()=>t.e(47).then(t.bind(null,382)),"v-786de108":()=>t.e(48).then(t.bind(null,383)),"v-2e8d5982":()=>t.e(49).then(t.bind(null,384)),"v-30b0c6d3":()=>t.e(50).then(t.bind(null,385)),"v-3abe1a3f":()=>t.e(51).then(t.bind(null,386)),"v-65fc7c3b":()=>t.e(52).then(t.bind(null,387)),"v-c811efde":()=>t.e(53).then(t.bind(null,388)),"v-59e6049f":()=>t.e(54).then(t.bind(null,389)),"v-45c84cea":()=>t.e(55).then(t.bind(null,390)),"v-c15738de":()=>t.e(56).then(t.bind(null,391)),"v-108c78ea":()=>t.e(57).then(t.bind(null,392)),"v-53a9dd0c":()=>t.e(59).then(t.bind(null,393)),"v-0f1d9e82":()=>t.e(58).then(t.bind(null,394)),"v-44f8477a":()=>t.e(60).then(t.bind(null,395)),"v-6f0df28a":()=>t.e(61).then(t.bind(null,396)),"v-0774223e":()=>t.e(62).then(t.bind(null,397)),"v-7579abb8":()=>t.e(63).then(t.bind(null,398)),"v-0087f3a4":()=>t.e(64).then(t.bind(null,399)),"v-bce5b6b6":()=>t.e(65).then(t.bind(null,400)),"v-2e32b8d2":()=>t.e(66).then(t.bind(null,401)),"v-6e3667cc":()=>t.e(67).then(t.bind(null,402)),"v-616444d2":()=>t.e(68).then(t.bind(null,403)),"v-9e4d93be":()=>t.e(69).then(t.bind(null,404)),"v-3435f36a":()=>t.e(70).then(t.bind(null,405)),"v-ac040994":()=>t.e(71).then(t.bind(null,406)),"v-38be6448":()=>t.e(72).then(t.bind(null,407)),"v-67a6a4f3":()=>t.e(73).then(t.bind(null,408)),"v-191e087c":()=>t.e(74).then(t.bind(null,409)),"v-654b00f2":()=>t.e(75).then(t.bind(null,410)),"v-6e3a7659":()=>t.e(76).then(t.bind(null,411)),"v-6c07392f":()=>t.e(77).then(t.bind(null,412)),"v-5c84c830":()=>t.e(78).then(t.bind(null,413)),"v-717289f4":()=>t.e(79).then(t.bind(null,414)),"v-289fd3bc":()=>t.e(80).then(t.bind(null,415)),"v-7a48598d":()=>t.e(81).then(t.bind(null,416)),"v-7e6738a8":()=>t.e(82).then(t.bind(null,417)),"v-08cd15fa":()=>t.e(83).then(t.bind(null,418)),"v-c59b6078":()=>t.e(84).then(t.bind(null,419)),"v-69c7b3ed":()=>t.e(85).then(t.bind(null,420)),"v-678a9398":()=>t.e(86).then(t.bind(null,421)),"v-6754c807":()=>t.e(87).then(t.bind(null,422)),"v-3403cb1c":()=>t.e(88).then(t.bind(null,423)),"v-c3570448":()=>t.e(89).then(t.bind(null,424)),"v-6142e01a":()=>t.e(90).then(t.bind(null,425)),"v-4a0f2628":()=>t.e(91).then(t.bind(null,426)),"v-116e9d56":()=>t.e(92).then(t.bind(null,427)),"v-425a7c43":()=>t.e(8).then(t.bind(null,428)),"v-85cdc402":()=>t.e(93).then(t.bind(null,429)),"v-20c66778":()=>t.e(94).then(t.bind(null,430)),"v-347412c3":()=>t.e(95).then(t.bind(null,431)),"v-20406dd8":()=>t.e(96).then(t.bind(null,432)),"v-fa68a6e2":()=>t.e(97).then(t.bind(null,433)),"v-bd961204":()=>t.e(98).then(t.bind(null,434)),"v-1d02cf76":()=>t.e(99).then(t.bind(null,435)),"v-26739e84":()=>t.e(100).then(t.bind(null,436)),"v-3f609ca4":()=>t.e(101).then(t.bind(null,437)),"v-1dc48608":()=>t.e(102).then(t.bind(null,438)),"v-df719e6a":()=>t.e(103).then(t.bind(null,439)),"v-1e52aa64":()=>t.e(104).then(t.bind(null,440)),"v-d001d1e2":()=>t.e(105).then(t.bind(null,441)),"v-032c551a":()=>t.e(106).then(t.bind(null,442)),"v-7d7f2128":()=>t.e(107).then(t.bind(null,443)),"v-fbdbe1c2":()=>t.e(108).then(t.bind(null,444)),"v-4277f43b":()=>t.e(109).then(t.bind(null,445)),"v-5fd2c458":()=>t.e(110).then(t.bind(null,446)),"v-b51556ae":()=>t.e(9).then(t.bind(null,447)),"v-26106136":()=>t.e(111).then(t.bind(null,448)),"v-303a93b8":()=>t.e(112).then(t.bind(null,449)),"v-43f05170":()=>t.e(113).then(t.bind(null,450))};function Zi(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Ji=/-(\w)/g,Wi=Zi(n=>n.replace(Ji,(n,e)=>e?e.toUpperCase():"")),Yi=/\B([A-Z])/g,Qi=Zi(n=>n.replace(Yi,"-$1").toLowerCase()),Xi=Zi(n=>n.charAt(0).toUpperCase()+n.slice(1));function ns(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(Xi(Wi(e))):n(Xi(e))||n(Qi(e))}const es=Object.assign({},Gi,Vi),ts=n=>es[n],as=n=>Vi[n],rs=n=>Gi[n],os=n=>Gt.component(n);function is(n){return ns(as,n)}function ss(n){return ns(rs,n)}function ls(n){return ns(ts,n)}function cs(n){return ns(os,n)}function ds(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!cs(n)&&ls(n)){const e=await ls(n)();Gt.component(n,e.default)}}))}function ps(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var us=t(92),ms=t.n(us),hs=t(93),gs=t.n(hs),fs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${gs()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=bs(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ys(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return ms()([{name:"description",content:this.$description}],n,this.siteMeta,xs)},updateCanonicalLink(){vs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",bs(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ys(null,this.currentMetaTags),vs()}};function vs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function bs(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ys(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function xs(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var ks=t(50),ws={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(ks)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+t;for(let n=0;n<e.length;n++){const o=e[n],i=e[n+1],s=0===n&&0===t||t>=o.parentElement.offsetTop+10&&(!i||t<i.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(o.hash)){const t=o;if(r===a)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},_s=t(23),Es=t.n(_s),Ts={mounted(){Es.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Gt.component(n.name)||Es.a.start(),t()}),this.$router.afterEach(()=>{Es.a.done(),this.isSidebarOpen=!1})}};t(239),t(240);class As{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Cs={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new As).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var a=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&a.firstChild?a.insertBefore(r,a.firstChild):a.appendChild(r),r.styleSheet?r.styleSheet.cssText=n:r.appendChild(document.createTextNode(n))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var js={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},zs={},Bs=function(n){return'<div id="app">\n'.concat(n,"\n</div>")},Is=function(n){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[n]?window.$VUEPRESS_DEMO_BLOCK[n]:js[n]},Ss=function n(e,t,a){var r=document.createElement(e);return t&&Object.keys(t).forEach((function(n){if(n.indexOf("data"))r[n]=t[n];else{var e=n.replace("data","");r.dataset[e]=t[n]}})),a&&a.forEach((function(e){var t=e.tag,a=e.attrs,o=e.children;r.appendChild(n(t,a,o))})),r},Ps=function(n,e,t){var a,r=(a=n.querySelectorAll(".".concat(e)),Array.prototype.slice.call(a));return 1!==r.length||t?r:r[0]},Ls=function(n,e){var t,a,r=n.match(/<style>([\s\S]+)<\/style>/),o=n.match(/<template>([\s\S]+)<\/template>/),i=n.match(/<script>([\s\S]+)<\/script>/),s={css:r&&r[1].replace(/^\n|\n$/g,""),html:o&&o[1].replace(/^\n|\n$/g,""),js:i&&i[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};s.htmlTpl=Bs(s.html),s.jsTpl=(t=s.js,a=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(a,"\n})")),s.script=function(n,e){var t=n.split(/export\s+default/),a="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),r=window.Babel?window.Babel.transform(a,{presets:["es2015"]}).code:a,o=[eval][0](r);return o.template=e,o}(s.js,s.html);var l=Is("vue");return s.jsLib.unshift(l),s},$s=function(n,e){var t,a=n.match(/<style>([\s\S]+)<\/style>/),r=n.match(/<html>([\s\S]+)<\/html>/),o=n.match(/<script>([\s\S]+)<\/script>/),i={css:a&&a[1].replace(/^\n|\n$/g,""),html:r&&r[1].replace(/^\n|\n$/g,""),js:o&&o[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};return i.htmlTpl=i.html,i.jsTpl=i.js,i.script=(t=i.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),i},Ds=function(n){return n=n.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),n+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function Os(){var n=Ps(document,"vuepress-plugin-demo-block__wrapper",!0);n.length?n.forEach((function(n){if("true"!==n.dataset.created){n.style.display="block";var e=Ps(n,"vuepress-plugin-demo-block__code"),t=Ps(n,"vuepress-plugin-demo-block__display"),a=Ps(n,"vuepress-plugin-demo-block__footer"),r=Ps(t,"vuepress-plugin-demo-block__app"),o=decodeURIComponent(n.dataset.code),i=decodeURIComponent(n.dataset.config),s=decodeURIComponent(n.dataset.type);i=i?JSON.parse(i):{};var l=e.querySelector("div").clientHeight,c="react"===s?function(n,e){var t=(0,window.Babel.transform)(n,{presets:["es2015","react"]}).code,a="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),r=new Function("return ".concat(a))(),o={js:r,css:r.__style__||"",jsLib:e.jsLib||[],cssLib:e.cssLib||[],jsTpl:Ds(n),htmlTpl:Bs("")},i=Is("react"),s=Is("reactDOM");return o.jsLib.unshift(i,s),o}(o,i):"vanilla"===s?$s(o,i):Ls(o,i),d=Ss("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(a.appendChild(d),d.addEventListener("click",Ms.bind(null,d,l,e,a)),Is("jsfiddle")&&a.appendChild(function(n){var e=n.css,t=n.htmlTpl,a=n.jsTpl,r=n.jsLib,o=n.cssLib,i=r.concat(o).concat(Is("cssLib")).concat(Is("jsLib")).join(",");return Ss("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:e}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:a}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:i}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(c)),Is("codepen")&&a.appendChild(function(n){var e=n.css,t=n.htmlTpl,a=n.jsTpl,r=n.jsLib,o=n.cssLib,i=JSON.stringify({css:e,html:t,js:a,js_external:r.concat(Is("jsLib")).join(";"),css_external:o.concat(Is("cssLib")).join(";"),layout:Is("codepenLayout"),js_pre_processor:Is("codepenJsProcessor"),editors:Is("codepenEditors")});return Ss("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:i}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(c)),void 0!==i.horizontal?i.horizontal:Is("horizontal")){n.classList.add("vuepress-plugin-demo-block__horizontal");var p=e.firstChild.cloneNode(!0);p.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(p)}if(c.css&&function(n){if(!zs[n]){var e=Ss("style",{innerHTML:n});document.body.appendChild(e),zs[n]=!0}}(c.css),"react"===s)ReactDOM.render(React.createElement(c.js),r);else if("vue"===s){var u=(new(Vue.extend(c.script))).$mount();r.appendChild(u.$el)}else"vanilla"===s&&(r.innerHTML=c.html,new Function("return (function(){".concat(c.script,"})()"))());n.dataset.created="true"}})):setTimeout((function(n){Os()}),300)}function Ms(n,e,t,a){var r="1"!==n.dataset.isExpand;t.style.height=r?"".concat(e,"px"):0,r?a.classList.add("vuepress-plugin-demo-block__show-link"):a.classList.remove("vuepress-plugin-demo-block__show-link"),n.dataset.isExpand=r?"1":"0"}var Us=[fs,ws,Ts,Cs,{mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},Os()},updated:function(){Os()}}],qs={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return ps("layout",n),Gt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Ns=t(7),Fs=Object(Ns.a)(qs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(Fs,"mixins",Us);const Rs=[{name:"v-ffe10ecc",path:"/ops/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-ffe10ecc").then(t)}},{path:"/ops/index.html",redirect:"/ops/"},{path:"/00.目录页/01.运维.html",redirect:"/ops/"},{name:"v-00559ed1",path:"/more/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-00559ed1").then(t)}},{path:"/more/index.html",redirect:"/more/"},{path:"/00.目录页/04.更多.html",redirect:"/more/"},{name:"v-f4aeb55c",path:"/dev/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-f4aeb55c").then(t)}},{path:"/dev/index.html",redirect:"/dev/"},{path:"/00.目录页/02.编程.html",redirect:"/dev/"},{name:"v-5713ac58",path:"/shoucang/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-5713ac58").then(t)}},{path:"/shoucang/index.html",redirect:"/shoucang/"},{path:"/00.目录页/06.收藏.html",redirect:"/shoucang/"},{name:"v-224cdd65",path:"/technology/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-224cdd65").then(t)}},{path:"/technology/index.html",redirect:"/technology/"},{path:"/00.目录页/03.技术.html",redirect:"/technology/"},{name:"v-4f1e993d",path:"/archives/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-4f1e993d").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-3211a459",path:"/database/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3211a459").then(t)}},{path:"/database/index.html",redirect:"/database/"},{path:"/00.目录页/05.数据库.html",redirect:"/database/"},{name:"v-6c04f89d",path:"/categories/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6c04f89d").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-5f6936bd",path:"/tags/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-5f6936bd").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-6e3f23d2",path:"/guiji/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6e3f23d2").then(t)}},{path:"/guiji/index.html",redirect:"/guiji/"},{path:"/@pages/轨迹..html",redirect:"/guiji/"},{name:"v-0315e517",path:"/tltest/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-0315e517").then(t)}},{path:"/tltest/index.html",redirect:"/tltest/"},{path:"/@pages/时间线测试.html",redirect:"/tltest/"},{name:"v-8da3e372",path:"/about/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-8da3e372").then(t)}},{path:"/about/index.html",redirect:"/about/"},{path:"/05.关于/01.关于.html",redirect:"/about/"},{name:"v-4b21f069",path:"/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-4b21f069").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-818a057c",path:"/pages/cd8bde/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-818a057c").then(t)}},{path:"/pages/cd8bde/index.html",redirect:"/pages/cd8bde/"},{path:"/_posts/随笔/拥抱生活，拥抱快乐.html",redirect:"/pages/cd8bde/"},{name:"v-46d619bc",path:"/gitlab/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-46d619bc").then(t)}},{path:"/gitlab/index.html",redirect:"/gitlab/"},{path:"/二级目录/技术/01.Gitlab.html",redirect:"/gitlab/"},{name:"v-f6d91694",path:"/jenkins/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-f6d91694").then(t)}},{path:"/jenkins/index.html",redirect:"/jenkins/"},{path:"/二级目录/技术/02.Jenkins.html",redirect:"/jenkins/"},{name:"v-0bac056c",path:"/maven/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-0bac056c").then(t)}},{path:"/maven/index.html",redirect:"/maven/"},{path:"/二级目录/技术/03.Maven.html",redirect:"/maven/"},{name:"v-c746b608",path:"/harbor/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c746b608").then(t)}},{path:"/harbor/index.html",redirect:"/harbor/"},{path:"/二级目录/技术/04.Harbor.html",redirect:"/harbor/"},{name:"v-3e7efa7c",path:"/html/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3e7efa7c").then(t)}},{path:"/html/index.html",redirect:"/html/"},{path:"/二级目录/技术/05.HTML.html",redirect:"/html/"},{name:"v-d4d1bfd8",path:"/css/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-d4d1bfd8").then(t)}},{path:"/css/index.html",redirect:"/css/"},{path:"/二级目录/技术/06.CSS.html",redirect:"/css/"},{name:"v-10bf0d48",path:"/mysql/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-10bf0d48").then(t)}},{path:"/mysql/index.html",redirect:"/mysql/"},{path:"/二级目录/数据库/01.Mysql.html",redirect:"/mysql/"},{name:"v-07f98b7c",path:"/nodejs/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-07f98b7c").then(t)}},{path:"/nodejs/index.html",redirect:"/nodejs/"},{path:"/二级目录/技术/07.Nodejs.html",redirect:"/nodejs/"},{name:"v-c75131f0",path:"/mongodb/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c75131f0").then(t)}},{path:"/mongodb/index.html",redirect:"/mongodb/"},{path:"/二级目录/数据库/03.MongoDB.html",redirect:"/mongodb/"},{name:"v-b1b00070",path:"/redis/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-b1b00070").then(t)}},{path:"/redis/index.html",redirect:"/redis/"},{path:"/二级目录/数据库/04.Redis.html",redirect:"/redis/"},{name:"v-34ffc272",path:"/oracle/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-34ffc272").then(t)}},{path:"/oracle/index.html",redirect:"/oracle/"},{path:"/二级目录/数据库/02.Oracle.html",redirect:"/oracle/"},{name:"v-487ce94a",path:"/dm8/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-487ce94a").then(t)}},{path:"/dm8/index.html",redirect:"/dm8/"},{path:"/二级目录/数据库/05.达梦.html",redirect:"/dm8/"},{name:"v-c088041a",path:"/tec-doc/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c088041a").then(t)}},{path:"/tec-doc/index.html",redirect:"/tec-doc/"},{path:"/二级目录/更多/01.技术文档.html",redirect:"/tec-doc/"},{name:"v-618df9e0",path:"/xysy/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-618df9e0").then(t)}},{path:"/xysy/index.html",redirect:"/xysy/"},{path:"/二级目录/更多/02.闲言碎语.html",redirect:"/xysy/"},{name:"v-865be344",path:"/syjq/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-865be344").then(t)}},{path:"/syjq/index.html",redirect:"/syjq/"},{path:"/二级目录/更多/03.实用技巧.html",redirect:"/syjq/"},{name:"v-67a38b09",path:"/learning/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-67a38b09").then(t)}},{path:"/learning/index.html",redirect:"/learning/"},{path:"/二级目录/更多/04.学习.html",redirect:"/learning/"},{name:"v-e2a3f396",path:"/share/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-e2a3f396").then(t)}},{path:"/share/index.html",redirect:"/share/"},{path:"/二级目录/更多/05.资源分享.html",redirect:"/share/"},{name:"v-74b855d2",path:"/python/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-74b855d2").then(t)}},{path:"/python/index.html",redirect:"/python/"},{path:"/二级目录/编程/01.Python.html",redirect:"/python/"},{name:"v-308314f7",path:"/java/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-308314f7").then(t)}},{path:"/java/index.html",redirect:"/java/"},{path:"/二级目录/编程/02.Java.html",redirect:"/java/"},{name:"v-73322bb1",path:"/shell/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-73322bb1").then(t)}},{path:"/shell/index.html",redirect:"/shell/"},{path:"/二级目录/编程/03.Shell.html",redirect:"/shell/"},{name:"v-9d4cc452",path:"/javascript/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-9d4cc452").then(t)}},{path:"/javascript/index.html",redirect:"/javascript/"},{path:"/二级目录/编程/04.Javascript.html",redirect:"/javascript/"},{name:"v-1fc7487e",path:"/vue/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-1fc7487e").then(t)}},{path:"/vue/index.html",redirect:"/vue/"},{path:"/二级目录/编程/05.Vue.html",redirect:"/vue/"},{name:"v-ba40d9ba",path:"/linux/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-ba40d9ba").then(t)}},{path:"/linux/index.html",redirect:"/linux/"},{path:"/二级目录/运维/01.Linux.html",redirect:"/linux/"},{name:"v-91f44108",path:"/linux/centos/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-91f44108").then(t)}},{path:"/linux/centos/index.html",redirect:"/linux/centos/"},{path:"/二级目录/运维/01.Linux/01.Centos.html",redirect:"/linux/centos/"},{name:"v-786de108",path:"/linux/ubuntu/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-786de108").then(t)}},{path:"/linux/ubuntu/index.html",redirect:"/linux/ubuntu/"},{path:"/二级目录/运维/01.Linux/02.Ubuntu.html",redirect:"/linux/ubuntu/"},{name:"v-2e8d5982",path:"/docker/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-2e8d5982").then(t)}},{path:"/docker/index.html",redirect:"/docker/"},{path:"/二级目录/运维/02.Docker.html",redirect:"/docker/"},{name:"v-30b0c6d3",path:"/nginx/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-30b0c6d3").then(t)}},{path:"/nginx/index.html",redirect:"/nginx/"},{path:"/二级目录/运维/03.Nginx.html",redirect:"/nginx/"},{name:"v-3abe1a3f",path:"/kubernetes/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3abe1a3f").then(t)}},{path:"/kubernetes/index.html",redirect:"/kubernetes/"},{path:"/二级目录/运维/04.Kubernetes.html",redirect:"/kubernetes/"},{name:"v-65fc7c3b",path:"/elk/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-65fc7c3b").then(t)}},{path:"/elk/index.html",redirect:"/elk/"},{path:"/二级目录/运维/05.ELK.html",redirect:"/elk/"},{name:"v-c811efde",path:"/ansible/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c811efde").then(t)}},{path:"/ansible/index.html",redirect:"/ansible/"},{path:"/二级目录/运维/06.Ansible.html",redirect:"/ansible/"},{name:"v-59e6049f",path:"/zabbix/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-59e6049f").then(t)}},{path:"/zabbix/index.html",redirect:"/zabbix/"},{path:"/二级目录/运维/07.Zabbix.html",redirect:"/zabbix/"},{name:"v-45c84cea",path:"/pages/2aa3c8/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-45c84cea").then(t)}},{path:"/pages/2aa3c8/index.html",redirect:"/pages/2aa3c8/"},{path:"/技术/01.Gitlab/01.Docker安装Gitlab.html",redirect:"/pages/2aa3c8/"},{name:"v-c15738de",path:"/pages/28c2d5/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c15738de").then(t)}},{path:"/pages/28c2d5/index.html",redirect:"/pages/28c2d5/"},{path:"/技术/07.Nodejs/01.使用Nvm配置多Nodejs环境.html",redirect:"/pages/28c2d5/"},{name:"v-108c78ea",path:"/pages/d4c693/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-108c78ea").then(t)}},{path:"/pages/d4c693/index.html",redirect:"/pages/d4c693/"},{path:"/收藏/01.收藏站点.html",redirect:"/pages/d4c693/"},{name:"v-53a9dd0c",path:"/pages/8f25b7/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-53a9dd0c").then(t)}},{path:"/pages/8f25b7/index.html",redirect:"/pages/8f25b7/"},{path:"/数据库/01.Mysql/01.Mysql的安装和初始化.html",redirect:"/pages/8f25b7/"},{name:"v-0f1d9e82",path:"/pages/99d8f6/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-0f1d9e82").then(t)}},{path:"/pages/99d8f6/index.html",redirect:"/pages/99d8f6/"},{path:"/收藏/往事回首之2018年.html",redirect:"/pages/99d8f6/"},{name:"v-44f8477a",path:"/pages/aa966f/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-44f8477a").then(t)}},{path:"/pages/aa966f/index.html",redirect:"/pages/aa966f/"},{path:"/数据库/01.Mysql/02.Mysql的一些常用函数.html",redirect:"/pages/aa966f/"},{name:"v-6f0df28a",path:"/pages/4e6bdd/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6f0df28a").then(t)}},{path:"/pages/4e6bdd/index.html",redirect:"/pages/4e6bdd/"},{path:"/数据库/01.Mysql/03.记录Mysql中一些常见操作.html",redirect:"/pages/4e6bdd/"},{name:"v-0774223e",path:"/pages/dc4c36/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-0774223e").then(t)}},{path:"/pages/dc4c36/index.html",redirect:"/pages/dc4c36/"},{path:"/数据库/02.Oracle/01.用Docker安装oracle11g.html",redirect:"/pages/dc4c36/"},{name:"v-7579abb8",path:"/pages/12246b/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-7579abb8").then(t)}},{path:"/pages/12246b/index.html",redirect:"/pages/12246b/"},{path:"/数据库/02.Oracle/02.Oracle 存储过程基本语法及其使用.html",redirect:"/pages/12246b/"},{name:"v-0087f3a4",path:"/pages/af984e/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-0087f3a4").then(t)}},{path:"/pages/af984e/index.html",redirect:"/pages/af984e/"},{path:"/数据库/02.Oracle/03.oracle数据库的逻辑备份与恢复.html",redirect:"/pages/af984e/"},{name:"v-bce5b6b6",path:"/pages/4fe983/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-bce5b6b6").then(t)}},{path:"/pages/4fe983/index.html",redirect:"/pages/4fe983/"},{path:"/数据库/05.达梦/01.搭建达梦数据库.html",redirect:"/pages/4fe983/"},{name:"v-2e32b8d2",path:"/pages/c2f35a/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-2e32b8d2").then(t)}},{path:"/pages/c2f35a/index.html",redirect:"/pages/c2f35a/"},{path:"/数据库/05.达梦/02.达梦数据库的基本使用.html",redirect:"/pages/c2f35a/"},{name:"v-6e3667cc",path:"/pages/9a7ee40fc232253e/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6e3667cc").then(t)}},{path:"/pages/9a7ee40fc232253e/index.html",redirect:"/pages/9a7ee40fc232253e/"},{path:"/更多/01.技术文档/01.Git使用手册.html",redirect:"/pages/9a7ee40fc232253e/"},{name:"v-616444d2",path:"/pages/ad247c4332211551/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-616444d2").then(t)}},{path:"/pages/ad247c4332211551/index.html",redirect:"/pages/ad247c4332211551/"},{path:"/更多/01.技术文档/02.Markdown使用教程.html",redirect:"/pages/ad247c4332211551/"},{name:"v-9e4d93be",path:"/pages/61f2f95fd7da14fd/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-9e4d93be").then(t)}},{path:"/pages/61f2f95fd7da14fd/index.html",redirect:"/pages/61f2f95fd7da14fd/"},{path:"/更多/01.技术文档/03.npm常用命令.html",redirect:"/pages/61f2f95fd7da14fd/"},{name:"v-3435f36a",path:"/pages/dec4f3f00e71a312/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3435f36a").then(t)}},{path:"/pages/dec4f3f00e71a312/index.html",redirect:"/pages/dec4f3f00e71a312/"},{path:"/更多/01.技术文档/10.npm packageJson属性详解.html",redirect:"/pages/dec4f3f00e71a312/"},{name:"v-ac040994",path:"/pages/4e8444e2d534d14f/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-ac040994").then(t)}},{path:"/pages/4e8444e2d534d14f/index.html",redirect:"/pages/4e8444e2d534d14f/"},{path:"/更多/01.技术文档/15.yaml语言教程.html",redirect:"/pages/4e8444e2d534d14f/"},{name:"v-38be6448",path:"/pages/922650/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-38be6448").then(t)}},{path:"/pages/922650/index.html",redirect:"/pages/922650/"},{path:"/更多/01.技术文档/20.Git修改分支名.html",redirect:"/pages/922650/"},{name:"v-67a6a4f3",path:"/pages/d5f5a3/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-67a6a4f3").then(t)}},{path:"/pages/d5f5a3/index.html",redirect:"/pages/d5f5a3/"},{path:"/更多/02.闲言碎语/01.2023.html",redirect:"/pages/d5f5a3/"},{name:"v-191e087c",path:"/pages/baaa02/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-191e087c").then(t)}},{path:"/pages/baaa02/index.html",redirect:"/pages/baaa02/"},{path:"/更多/03.实用技巧/01.2分钟规则.html",redirect:"/pages/baaa02/"},{name:"v-654b00f2",path:"/pages/f2a556/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-654b00f2").then(t)}},{path:"/pages/f2a556/index.html",redirect:"/pages/f2a556/"},{path:"/更多/04.学习/00.费曼学习法.html",redirect:"/pages/f2a556/"},{name:"v-6e3a7659",path:"/pages/e60c81/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6e3a7659").then(t)}},{path:"/pages/e60c81/index.html",redirect:"/pages/e60c81/"},{path:"/更多/04.学习/01.笔记方法.html",redirect:"/pages/e60c81/"},{name:"v-6c07392f",path:"/pages/a8692ab3bdcb4588/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6c07392f").then(t)}},{path:"/pages/a8692ab3bdcb4588/index.html",redirect:"/pages/a8692ab3bdcb4588/"},{path:"/更多/04.学习/02.提高学习效率的策略.html",redirect:"/pages/a8692ab3bdcb4588/"},{name:"v-5c84c830",path:"/pages/996822b2a2ca6e3b/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-5c84c830").then(t)}},{path:"/pages/996822b2a2ca6e3b/index.html",redirect:"/pages/996822b2a2ca6e3b/"},{path:"/更多/04.学习/03.提高记忆的技巧.html",redirect:"/pages/996822b2a2ca6e3b/"},{name:"v-717289f4",path:"/pages/c3f302a03c8daf79/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-717289f4").then(t)}},{path:"/pages/c3f302a03c8daf79/index.html",redirect:"/pages/c3f302a03c8daf79/"},{path:"/更多/04.学习/04.自律小建议.html",redirect:"/pages/c3f302a03c8daf79/"},{name:"v-289fd3bc",path:"/pages/9ba2b8fb13de1957/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-289fd3bc").then(t)}},{path:"/pages/9ba2b8fb13de1957/index.html",redirect:"/pages/9ba2b8fb13de1957/"},{path:"/更多/04.学习/05.处理问题的思路.html",redirect:"/pages/9ba2b8fb13de1957/"},{name:"v-7a48598d",path:"/pages/ce818a/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-7a48598d").then(t)}},{path:"/pages/ce818a/index.html",redirect:"/pages/ce818a/"},{path:"/更多/04.学习/10.搜索引擎使用技巧.html",redirect:"/pages/ce818a/"},{name:"v-7e6738a8",path:"/pages/f9c772/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-7e6738a8").then(t)}},{path:"/pages/f9c772/index.html",redirect:"/pages/f9c772/"},{path:"/更多/05.资源分享/windows软件分享.html",redirect:"/pages/f9c772/"},{name:"v-08cd15fa",path:"/pages/ebee4f/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-08cd15fa").then(t)}},{path:"/pages/ebee4f/index.html",redirect:"/pages/ebee4f/"},{path:"/更多/05.资源分享/电子书分享.html",redirect:"/pages/ebee4f/"},{name:"v-c59b6078",path:"/pages/4b8622/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c59b6078").then(t)}},{path:"/pages/4b8622/index.html",redirect:"/pages/4b8622/"},{path:"/编程/01.Python/02.Python中使用Anoconda.html",redirect:"/pages/4b8622/"},{name:"v-69c7b3ed",path:"/pages/b2bcaa/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-69c7b3ed").then(t)}},{path:"/pages/b2bcaa/index.html",redirect:"/pages/b2bcaa/"},{path:"/编程/01.Python/03.python中几种常见数据结构的使用.html",redirect:"/pages/b2bcaa/"},{name:"v-678a9398",path:"/pages/eeda61/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-678a9398").then(t)}},{path:"/pages/eeda61/index.html",redirect:"/pages/eeda61/"},{path:"/编程/01.Python/04.学习python中的多线程.html",redirect:"/pages/eeda61/"},{name:"v-6754c807",path:"/pages/6bd99a/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6754c807").then(t)}},{path:"/pages/6bd99a/index.html",redirect:"/pages/6bd99a/"},{path:"/编程/03.Shell/01.Shell学习笔记.html",redirect:"/pages/6bd99a/"},{name:"v-3403cb1c",path:"/pages/84cf23/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3403cb1c").then(t)}},{path:"/pages/84cf23/index.html",redirect:"/pages/84cf23/"},{path:"/编程/03.Shell/02.Shell中的条件判断.html",redirect:"/pages/84cf23/"},{name:"v-c3570448",path:"/pages/554077/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-c3570448").then(t)}},{path:"/pages/554077/index.html",redirect:"/pages/554077/"},{path:"/编程/03.Shell/03.shell脚本中set命令的使用.html",redirect:"/pages/554077/"},{name:"v-6142e01a",path:"/pages/e3a119/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-6142e01a").then(t)}},{path:"/pages/e3a119/index.html",redirect:"/pages/e3a119/"},{path:"/编程/03.Shell/04.一些shell练习题.html",redirect:"/pages/e3a119/"},{name:"v-4a0f2628",path:"/pages/9fa080/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-4a0f2628").then(t)}},{path:"/pages/9fa080/index.html",redirect:"/pages/9fa080/"},{path:"/运维/00.关于运维工程师.html",redirect:"/pages/9fa080/"},{name:"v-116e9d56",path:"/pages/f3e444/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-116e9d56").then(t)}},{path:"/pages/f3e444/index.html",redirect:"/pages/f3e444/"},{path:"/运维/01.Linux/01.Centos/01.centos包管理相关.html",redirect:"/pages/f3e444/"},{name:"v-425a7c43",path:"/pages/b14489/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-425a7c43").then(t)}},{path:"/pages/b14489/index.html",redirect:"/pages/b14489/"},{path:"/运维/01.Linux/01.Centos/02.Centos7配置yum源.html",redirect:"/pages/b14489/"},{name:"v-85cdc402",path:"/pages/fbf33b/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-85cdc402").then(t)}},{path:"/pages/fbf33b/index.html",redirect:"/pages/fbf33b/"},{path:"/运维/01.Linux/02.Ubuntu/01.ubuntu包管理相关.html",redirect:"/pages/fbf33b/"},{name:"v-20c66778",path:"/pages/ce9c59/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-20c66778").then(t)}},{path:"/pages/ce9c59/index.html",redirect:"/pages/ce9c59/"},{path:"/运维/01.Linux/03.linux环境下管理任务的进程、端口.html",redirect:"/pages/ce9c59/"},{name:"v-347412c3",path:"/pages/7f59e5/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-347412c3").then(t)}},{path:"/pages/7f59e5/index.html",redirect:"/pages/7f59e5/"},{path:"/运维/01.Linux/04.linux环境下四种查找命令的区别.html",redirect:"/pages/7f59e5/"},{name:"v-20406dd8",path:"/pages/80ce65/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-20406dd8").then(t)}},{path:"/pages/80ce65/index.html",redirect:"/pages/80ce65/"},{path:"/运维/01.Linux/05.linux 中sed、awk、grep和正则表达式的用法.html",redirect:"/pages/80ce65/"},{name:"v-fa68a6e2",path:"/pages/43ceba/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-fa68a6e2").then(t)}},{path:"/pages/43ceba/index.html",redirect:"/pages/43ceba/"},{path:"/运维/01.Linux/06.Linux利用cron定期执行任务.html",redirect:"/pages/43ceba/"},{name:"v-bd961204",path:"/pages/7a8215/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-bd961204").then(t)}},{path:"/pages/7a8215/index.html",redirect:"/pages/7a8215/"},{path:"/运维/01.Linux/07.Linux环境下的磁盘扩展和磁盘清理.html",redirect:"/pages/7a8215/"},{name:"v-1d02cf76",path:"/pages/7678af/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-1d02cf76").then(t)}},{path:"/pages/7678af/index.html",redirect:"/pages/7678af/"},{path:"/运维/01.Linux/10.linux利用tar和openssl命令实现文件加密、解密.html",redirect:"/pages/7678af/"},{name:"v-26739e84",path:"/pages/be753f/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-26739e84").then(t)}},{path:"/pages/be753f/index.html",redirect:"/pages/be753f/"},{path:"/运维/01.Linux/11.通过iptables限制连接数.html",redirect:"/pages/be753f/"},{name:"v-3f609ca4",path:"/pages/77b45b/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-3f609ca4").then(t)}},{path:"/pages/77b45b/index.html",redirect:"/pages/77b45b/"},{path:"/运维/02.Docker/01.两种方式安装Docker.html",redirect:"/pages/77b45b/"},{name:"v-1dc48608",path:"/pages/af0c2d/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-1dc48608").then(t)}},{path:"/pages/af0c2d/index.html",redirect:"/pages/af0c2d/"},{path:"/运维/02.Docker/02.docker问题记录.html",redirect:"/pages/af0c2d/"},{name:"v-df719e6a",path:"/pages/5f33ac/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-df719e6a").then(t)}},{path:"/pages/5f33ac/index.html",redirect:"/pages/5f33ac/"},{path:"/运维/02.Docker/03.安装Docker-Compose.html",redirect:"/pages/5f33ac/"},{name:"v-1e52aa64",path:"/pages/0fad9e/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-1e52aa64").then(t)}},{path:"/pages/0fad9e/index.html",redirect:"/pages/0fad9e/"},{path:"/运维/02.Docker/05.通过Docker运行跨平台的容器.html",redirect:"/pages/0fad9e/"},{name:"v-d001d1e2",path:"/pages/b3a787/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-d001d1e2").then(t)}},{path:"/pages/b3a787/index.html",redirect:"/pages/b3a787/"},{path:"/运维/02.Docker/06.Docker根目录迁移.html",redirect:"/pages/b3a787/"},{name:"v-032c551a",path:"/pages/fa15b2/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-032c551a").then(t)}},{path:"/pages/fa15b2/index.html",redirect:"/pages/fa15b2/"},{path:"/运维/03.Nginx/01.Nginx的基本使用.html",redirect:"/pages/fa15b2/"},{name:"v-7d7f2128",path:"/pages/f4274c/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-7d7f2128").then(t)}},{path:"/pages/f4274c/index.html",redirect:"/pages/f4274c/"},{path:"/运维/03.Nginx/02.整理一些Nginx的常见问题及解惑.html",redirect:"/pages/f4274c/"},{name:"v-fbdbe1c2",path:"/pages/eeaf64/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-fbdbe1c2").then(t)}},{path:"/pages/eeaf64/index.html",redirect:"/pages/eeaf64/"},{path:"/运维/03.Nginx/09.nginx通过四层代理实现端口转发.html",redirect:"/pages/eeaf64/"},{name:"v-4277f43b",path:"/pages/18b551/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-4277f43b").then(t)}},{path:"/pages/18b551/index.html",redirect:"/pages/18b551/"},{path:"/运维/03.Nginx/10.http状态码详解.html",redirect:"/pages/18b551/"},{name:"v-5fd2c458",path:"/pages/4cc7bb/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-5fd2c458").then(t)}},{path:"/pages/4cc7bb/index.html",redirect:"/pages/4cc7bb/"},{path:"/运维/04.Kubernetes/01.使用minikube安装k8s单机版.html",redirect:"/pages/4cc7bb/"},{name:"v-b51556ae",path:"/pages/2fd687/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-b51556ae").then(t)}},{path:"/pages/2fd687/index.html",redirect:"/pages/2fd687/"},{path:"/运维/05.ELK/03.ElasticSearch进行索引、文档管理.html",redirect:"/pages/2fd687/"},{name:"v-26106136",path:"/pages/47f919/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-26106136").then(t)}},{path:"/pages/47f919/index.html",redirect:"/pages/47f919/"},{path:"/运维/05.ELK/02.单节点版ELK日志服务搭建.html",redirect:"/pages/47f919/"},{name:"v-303a93b8",path:"/pages/599861/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-303a93b8").then(t)}},{path:"/pages/599861/index.html",redirect:"/pages/599861/"},{path:"/运维/05.ELK/10.学习目标.html",redirect:"/pages/599861/"},{name:"v-43f05170",path:"/pages/3604d0/",component:Fs,beforeEnter:(n,e,t)=>{ds("Layout","v-43f05170").then(t)}},{path:"/pages/3604d0/index.html",redirect:"/pages/3604d0/"},{path:"/运维/07.Zabbix/05.Zabbix 忘记登录密码如何找回.html",redirect:"/pages/3604d0/"},{path:"*",component:Fs}],Ks={title:"",description:"",base:"/",headTags:[["link",{rel:"icon",href:"/img/logo-dxzh3.png"}],["link",{rel:"stylesheet",href:"//at.alicdn.com/t/font_3114978_qe0b39no76.css"}],["meta",{name:"keywords",content:"个人技术博客,运维,开发,技术文档,学习,面试,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"}],["meta",{name:"baidu-site-verification",content:"7F55weZDDc"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"运维",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维",imgUrl:"/img/more.png",description:"记录运维相关内容"}},title:"运维",date:"2020-03-11T21:50:56.000Z",permalink:"/ops/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/01.%E8%BF%90%E7%BB%B4.html",relativePath:"00.目录页/01.运维.md",key:"v-ffe10ecc",path:"/ops/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"更多",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多",imgUrl:"/img/more.png",description:"学习、面试、在线工具等更多文章和页面"}},title:"更多",date:"2020-03-11T21:50:56.000Z",permalink:"/more/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/04.%E6%9B%B4%E5%A4%9A.html",relativePath:"00.目录页/04.更多.md",key:"v-00559ed1",path:"/more/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"编程",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程",imgUrl:"/img/more.png",description:"记录关于编程相关的内容"}},title:"编程",date:"2020-03-11T21:50:56.000Z",permalink:"/dev/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/02.%E7%BC%96%E7%A8%8B.html",relativePath:"00.目录页/02.编程.md",key:"v-f4aeb55c",path:"/dev/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"收藏",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"收藏",imgUrl:"/img/more.png",description:"分享一些收藏的内容"}},title:"收藏",date:"2020-03-11T21:50:56.000Z",permalink:"/shoucang/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/06.%E6%94%B6%E8%97%8F.html",relativePath:"00.目录页/06.收藏.md",key:"v-5713ac58",path:"/shoucang/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"技术",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术",imgUrl:"/img/other.png",description:"技术文档、教程、技巧、总结等文章"}},title:"技术",date:"2020-03-11T21:50:55.000Z",permalink:"/technology/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/03.%E6%8A%80%E6%9C%AF.html",relativePath:"00.目录页/03.技术.md",key:"v-224cdd65",path:"/technology/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-4f1e993d",path:"/archives/",lastUpdated:"2023/11/29 19:29:28",lastUpdatedTimestamp:1701257368e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"数据库",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库",imgUrl:"/img/more.png",description:"记录数据库相关内容"}},title:"数据库",date:"2020-03-11T21:50:56.000Z",permalink:"/database/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/05.%E6%95%B0%E6%8D%AE%E5%BA%93.html",relativePath:"00.目录页/05.数据库.md",key:"v-3211a459",path:"/database/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-6c04f89d",path:"/categories/",lastUpdated:"2023/11/29 19:29:28",lastUpdatedTimestamp:1701257368e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-5f6936bd",path:"/tags/",lastUpdated:"2023/11/29 19:29:28",lastUpdatedTimestamp:1701257368e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"人生轨迹",frontmatter:{timeLinePage:!0,title:"人生轨迹",permalink:"/guiji/",article:!1},regularPath:"/@pages/%E8%BD%A8%E8%BF%B9..html",relativePath:"@pages/轨迹..md",key:"v-6e3f23d2",path:"/guiji/",lastUpdated:"2023/12/10 19:43:25",lastUpdatedTimestamp:1702208605e3,headersStr:null,content:'{ "2014年": { "date": "2014年", "desc": "我考上了一所离家很远的大学，读了一个叫做\'电子科学与技术\'的专业。" }, "2015年": { "date": "2015年", "desc": "我终于拥有属于自己的第一台笔记本电脑,开始对计算机技术产生兴趣" }, "2016年": { "date": "2016年", "desc": "我自学PS、PR等技术，开始接触到编程。" }, "2017年": { "date": "2017年", "desc": "自学了更多编程相关的内容，开始参加实习" }, "2018年": { "date": "2018年", "link": "/pages/99d8f6/", "desc": "大学毕业，开始流浪" } }',normalizedContent:'{ "2014年": { "date": "2014年", "desc": "我考上了一所离家很远的大学，读了一个叫做\'电子科学与技术\'的专业。" }, "2015年": { "date": "2015年", "desc": "我终于拥有属于自己的第一台笔记本电脑,开始对计算机技术产生兴趣" }, "2016年": { "date": "2016年", "desc": "我自学ps、pr等技术，开始接触到编程。" }, "2017年": { "date": "2017年", "desc": "自学了更多编程相关的内容，开始参加实习" }, "2018年": { "date": "2018年", "link": "/pages/99d8f6/", "desc": "大学毕业，开始流浪" } }',charsets:{cjk:!0}},{title:"时间线测试",frontmatter:{timeLinePage:!0,title:"时间线测试",permalink:"/tltest/",article:!1},regularPath:"/@pages/%E6%97%B6%E9%97%B4%E7%BA%BF%E6%B5%8B%E8%AF%95.html",relativePath:"@pages/时间线测试.md",key:"v-0315e517",path:"/tltest/",lastUpdated:"2023/12/10 19:43:25",lastUpdatedTimestamp:1702208605e3,headersStr:null,content:'{ "2012年10月": { "date": "2022年10月", "subTitle": "这是一条小标题", "desc": "当前，我国发展面临的形势错综复杂，国际政治经济环境不利因素增多，国内周期性和结构性矛盾叠加。" }, "2022年12月": { "date": "2022年12月", "subTitle": "abcssd", "desc": "Neque sunt voluptatibus repellat pariatur ut enim. Eveniet rerum suscipit eveniet amet dignissimos. Doloremque et distinctio quod molestiae ut." }, "2023年06月": { "date": "2023年06月", "subTitle": "", "desc": "“顶住外部压力、克服内部困难”“我国经济回升向好”“全面建设社会主义现代化国家迈出坚实步伐”……中央政治局会议这样总结今年经济运行情况。" }, "222sss3": { "date": "hello", "subTitle": "这是一条小标题", "desc": ""\n\n},\n"222sdaeass3": {\n    "date": "",\n    "subTitle": "这是一条小标题",\n    "desc": "复杂严峻的形势下，今年的经济运行和经济工作成绩来之不易，充分印证了党中央对形势判断和相关决策的正确性预见性。"\n},\n"222sdaeadss3": {\n    "date": "",\n    "subTitle": "",\n    "desc": "复杂严峻的形势下，今年的经济运行和经济工作成绩来之不易，充分印证了党中央对形势判断和相关决策的正确性预见性。"\n}\n\n\n}',normalizedContent:'{ "2012年10月": { "date": "2022年10月", "subtitle": "这是一条小标题", "desc": "当前，我国发展面临的形势错综复杂，国际政治经济环境不利因素增多，国内周期性和结构性矛盾叠加。" }, "2022年12月": { "date": "2022年12月", "subtitle": "abcssd", "desc": "neque sunt voluptatibus repellat pariatur ut enim. eveniet rerum suscipit eveniet amet dignissimos. doloremque et distinctio quod molestiae ut." }, "2023年06月": { "date": "2023年06月", "subtitle": "", "desc": "“顶住外部压力、克服内部困难”“我国经济回升向好”“全面建设社会主义现代化国家迈出坚实步伐”……中央政治局会议这样总结今年经济运行情况。" }, "222sss3": { "date": "hello", "subtitle": "这是一条小标题", "desc": ""\n\n},\n"222sdaeass3": {\n    "date": "",\n    "subtitle": "这是一条小标题",\n    "desc": "复杂严峻的形势下，今年的经济运行和经济工作成绩来之不易，充分印证了党中央对形势判断和相关决策的正确性预见性。"\n},\n"222sdaeadss3": {\n    "date": "",\n    "subtitle": "",\n    "desc": "复杂严峻的形势下，今年的经济运行和经济工作成绩来之不易，充分印证了党中央对形势判断和相关决策的正确性预见性。"\n}\n\n\n}',charsets:{cjk:!0}},{title:"关于",frontmatter:{title:"关于",date:"2023-08-02T01:14:10.000Z",permalink:"/about/",categories:["关于"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/05.%E5%85%B3%E4%BA%8E/01.%E5%85%B3%E4%BA%8E.html",relativePath:"05.关于/01.关于.md",key:"v-8da3e372",path:"/about/",headers:[{level:2,title:"关于博主",slug:"关于博主",normalizedTitle:"关于博主",charIndex:2},{level:2,title:"人生历程",slug:"人生历程",normalizedTitle:"人生历程",charIndex:260},{level:2,title:"✉️ 联系",slug:"联系",normalizedTitle:"✉️ 联系",charIndex:1563}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"关于博主 人生历程 ✉️ 联系",content:"# 关于博主\n\n一名打算投身运维岗位的95后男生，普通本科毕业，工作经验引用一个老套但贴切的词来介绍，大概是“运维界的小学生”。\n\n * 性格\n   \n   * 失败是常态，虽然有时会沮丧彷徨，但是一直很乐观。\n   \n   * 正直真诚善良，生活中较为沉默寡言，但沟通能力尚可，因此总能认识结交到一些很好的伙伴。\n\n * 认知\n   \n   * 了解得越多，才发觉自己知道的其实很少。\n   \n   * 永远尊重技术，热衷于了解新技术，且不限于技术。\n\n * 想法\n   \n   * 处于平凡，但不甘于平凡。\n\n\n# 人生历程\n\n * 2014年\n   \n   我考上了一所离家很远的大学，读了一个叫做“电子科学与技术”的专业。\n\n * 2015年\n   \n   我终于拥有属于自己的第一台笔记本电脑，从学习装windows系统开始，到逐渐了解word/excel/ppt等工具的使用，掌握了一些基本的电脑知识，开始对计算机技术产生兴趣。\n\n * 2016年\n   \n   我自学了PS、PR。这一年学校开设了C语言相关的课程，我开始接触到编程。课程外看了一些编程相关的书籍：编程语言入门书籍、数据结构、算法导论等。对编程有了一些认识，也能编写一些简单的程序，但此时并没有更长远的职业规划，没想过以后要从事的工作，更多地是在折腾。\n\n * 2017年\n   \n   自学了更多编程相关的内容，包括Mysql数据库、web框架、java多线程、java虚拟机还有类库等，也学习了C#；这一年参与了学校安排的实习，进入了某家央企，公司很不错，可惜岗位非计算机方向，个人也并不太感兴趣，待了半年时间就离职了。\n\n * 2018年\n   \n   毕业就业时选择了java开发职位，可惜自己实力不够强，也缺少相关的工作经验，一段时间内都没有找到满意的java开发工作，而后因一些客观的压力，选择了一份与开发无关的工作———运营。\n\n * 2019年\n   \n   上份工作离职了，由于当时运营工作做得还可以，有成绩产出，也得到同事领导认可，间接导致了自己的盲目自信，相信自己会在运营方面有所作为。离职后然后一直考虑运营工作。\n   \n   这一时候也遭遇了人生的低谷：在某次入职后，本来已经激情满满地计划开展后续的运营工作，不料却在试用一段时间后被公司以没有根据的理由恶意辞退。与该公司周旋许久，拿到自己应得的酬劳后，又陷入了重复不断地找工作的状态。\n\n * 2020年\n   \n   兜兜转转进了一家规模尚可的公司，结果入职后才发现是大坑。本来谈好的运营工作，莫名变成了销售工作，还有各种离谱的压迫制度，让我十分煎熬，不久后选择了离职。然后又开始了找工作的状态。这一年也随大流报考了公务员，但由于没有太多准备，一切都很仓促，结果可想而知。\n\n * 2021年\n   \n   接踵的失败令我备受打击，我的状态很差劲，从开始的激情满怀，到后面开始对找工作产生恐惧、排斥。我很长时间都没有再找工作，沮丧包围着我。\n   \n   再后来，因为一些事，我从失落的状态走出来，重新面对自己，审视自己。我做了有别于之前的职业选择———运维/技术支持。较为幸运的是，这次我很快就找到了相关的工作。\n\n * 2022-2023年\n   \n   工作后，我很快适应了这份工作的节奏，接触了多个项目，并在项目中学习成长。从开始对项目不太熟悉，到慢慢成为项目中的核心成员。\n   \n   这一阶段，我对于技术知识的理解更深刻了，重新找回了自信。拾起了早先丢弃的一些技能，并扩展了自己的技术栈，自学了Python、Linux、Shell、Docker、k8s等技能，并致力于将它们用在项目中。\n\n * 现在和以后\n   \n   犹未可知，尽请期待！\n\n\n# ✉️ 联系\n\n * Email: wky2017@foxmail.com",normalizedContent:"# 关于博主\n\n一名打算投身运维岗位的95后男生，普通本科毕业，工作经验引用一个老套但贴切的词来介绍，大概是“运维界的小学生”。\n\n * 性格\n   \n   * 失败是常态，虽然有时会沮丧彷徨，但是一直很乐观。\n   \n   * 正直真诚善良，生活中较为沉默寡言，但沟通能力尚可，因此总能认识结交到一些很好的伙伴。\n\n * 认知\n   \n   * 了解得越多，才发觉自己知道的其实很少。\n   \n   * 永远尊重技术，热衷于了解新技术，且不限于技术。\n\n * 想法\n   \n   * 处于平凡，但不甘于平凡。\n\n\n# 人生历程\n\n * 2014年\n   \n   我考上了一所离家很远的大学，读了一个叫做“电子科学与技术”的专业。\n\n * 2015年\n   \n   我终于拥有属于自己的第一台笔记本电脑，从学习装windows系统开始，到逐渐了解word/excel/ppt等工具的使用，掌握了一些基本的电脑知识，开始对计算机技术产生兴趣。\n\n * 2016年\n   \n   我自学了ps、pr。这一年学校开设了c语言相关的课程，我开始接触到编程。课程外看了一些编程相关的书籍：编程语言入门书籍、数据结构、算法导论等。对编程有了一些认识，也能编写一些简单的程序，但此时并没有更长远的职业规划，没想过以后要从事的工作，更多地是在折腾。\n\n * 2017年\n   \n   自学了更多编程相关的内容，包括mysql数据库、web框架、java多线程、java虚拟机还有类库等，也学习了c#；这一年参与了学校安排的实习，进入了某家央企，公司很不错，可惜岗位非计算机方向，个人也并不太感兴趣，待了半年时间就离职了。\n\n * 2018年\n   \n   毕业就业时选择了java开发职位，可惜自己实力不够强，也缺少相关的工作经验，一段时间内都没有找到满意的java开发工作，而后因一些客观的压力，选择了一份与开发无关的工作———运营。\n\n * 2019年\n   \n   上份工作离职了，由于当时运营工作做得还可以，有成绩产出，也得到同事领导认可，间接导致了自己的盲目自信，相信自己会在运营方面有所作为。离职后然后一直考虑运营工作。\n   \n   这一时候也遭遇了人生的低谷：在某次入职后，本来已经激情满满地计划开展后续的运营工作，不料却在试用一段时间后被公司以没有根据的理由恶意辞退。与该公司周旋许久，拿到自己应得的酬劳后，又陷入了重复不断地找工作的状态。\n\n * 2020年\n   \n   兜兜转转进了一家规模尚可的公司，结果入职后才发现是大坑。本来谈好的运营工作，莫名变成了销售工作，还有各种离谱的压迫制度，让我十分煎熬，不久后选择了离职。然后又开始了找工作的状态。这一年也随大流报考了公务员，但由于没有太多准备，一切都很仓促，结果可想而知。\n\n * 2021年\n   \n   接踵的失败令我备受打击，我的状态很差劲，从开始的激情满怀，到后面开始对找工作产生恐惧、排斥。我很长时间都没有再找工作，沮丧包围着我。\n   \n   再后来，因为一些事，我从失落的状态走出来，重新面对自己，审视自己。我做了有别于之前的职业选择———运维/技术支持。较为幸运的是，这次我很快就找到了相关的工作。\n\n * 2022-2023年\n   \n   工作后，我很快适应了这份工作的节奏，接触了多个项目，并在项目中学习成长。从开始对项目不太熟悉，到慢慢成为项目中的核心成员。\n   \n   这一阶段，我对于技术知识的理解更深刻了，重新找回了自信。拾起了早先丢弃的一些技能，并扩展了自己的技术栈，自学了python、linux、shell、docker、k8s等技能，并致力于将它们用在项目中。\n\n * 现在和以后\n   \n   犹未可知，尽请期待！\n\n\n# ✉️ 联系\n\n * email: wky2017@foxmail.com",charsets:{cjk:!0}},{title:"Home",frontmatter:{home:!0,heroText:"永远期待更好的明天",tagline:"心若有所向往，何惧道阻且长",bannerBg:"/img/dm03.png",features:[{title:"运维",details:"学习&&记录Docker/k8s/elk等技术",link:"/ops/"},{title:"数据库",details:"学习&&记录数据库相关的知识",link:"/database/"},{title:"更多",details:"技术文档、教程、技巧、总结等文章",link:"/more/"}]},regularPath:"/",relativePath:"index.md",key:"v-4b21f069",path:"/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"拥抱生活，拥抱快乐",frontmatter:{title:"拥抱生活，拥抱快乐",date:"2020-06-26T20:40:38.000Z",permalink:"/pages/cd8bde/",sidebar:"auto",categories:["随笔"],tags:["鸡汤"],author:{name:"xugaoyi",link:null}},regularPath:"/_posts/%E9%9A%8F%E7%AC%94/%E6%8B%A5%E6%8A%B1%E7%94%9F%E6%B4%BB%EF%BC%8C%E6%8B%A5%E6%8A%B1%E5%BF%AB%E4%B9%90.html",relativePath:"_posts/随笔/拥抱生活，拥抱快乐.md",key:"v-818a057c",path:"/pages/cd8bde/",excerpt:"<p>生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。</p>\n",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。\n\n当你怀疑人生没有意义时，难道怀疑本身不值得怀疑吗？\n\n不要任由你内心的虚无感蔓延，我们需要去拥抱真实的生活。\n\n所有真实的快乐，都离不开艰辛的努力，无论是金榜题名的快乐，还是事业成功的喜悦，甚至包括洞房花烛的激动。所有真实的快乐，都需要长久的铺垫与努力，没有辛勤的汗水，快乐也就不再真实。\n\n如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。因此，对于年轻人而言，一个重要的功课就是学会去节制欲望。\n\n所有通过捷径所带来的快乐，都是廉价的，以至于所有追求都变得毫无意义，人生就了无生趣。我们需要在每天真实的努力中去拥抱生活，追寻真实的快乐。\n\n\n\n> 文章摘录自:B站视频《罗翔说刑法》，链接https://b23.tv/K8ulrE",normalizedContent:"生活在后现代的今天，很多人都有一种虚无感，认为人生没有意义。但是，人生不可能没有意义，因为当你认为没有意义的时候，一定有一个与之相对应的概念叫有意义。\n\n当你怀疑人生没有意义时，难道怀疑本身不值得怀疑吗？\n\n不要任由你内心的虚无感蔓延，我们需要去拥抱真实的生活。\n\n所有真实的快乐，都离不开艰辛的努力，无论是金榜题名的快乐，还是事业成功的喜悦，甚至包括洞房花烛的激动。所有真实的快乐，都需要长久的铺垫与努力，没有辛勤的汗水，快乐也就不再真实。\n\n如果快乐触手可及，这种廉价的快乐也就不值得珍惜，随时都可能抛弃。因此，对于年轻人而言，一个重要的功课就是学会去节制欲望。\n\n所有通过捷径所带来的快乐，都是廉价的，以至于所有追求都变得毫无意义，人生就了无生趣。我们需要在每天真实的努力中去拥抱生活，追寻真实的快乐。\n\n\n\n> 文章摘录自:b站视频《罗翔说刑法》，链接https://b23.tv/k8ulre",charsets:{cjk:!0}},{title:"Gitlab",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/01.Gitlab",imgUrl:"/img/more.png",description:"记录Gitlab的学习和使用"}},title:"Gitlab",date:"2020-03-11T21:50:56.000Z",permalink:"/gitlab/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/01.Gitlab.html",relativePath:"二级目录/技术/01.Gitlab.md",key:"v-46d619bc",path:"/gitlab/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Jenkins",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/02.Jenkins",imgUrl:"/img/more.png",description:"记录Jenkins的学习和使用"}},title:"Jenkins",date:"2020-03-11T21:50:56.000Z",permalink:"/jenkins/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/02.Jenkins.html",relativePath:"二级目录/技术/02.Jenkins.md",key:"v-f6d91694",path:"/jenkins/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Maven",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/03.Maven",imgUrl:"/img/more.png",description:"记录Maven的学习和使用"}},title:"Maven",date:"2020-03-11T21:50:56.000Z",permalink:"/maven/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/03.Maven.html",relativePath:"二级目录/技术/03.Maven.md",key:"v-0bac056c",path:"/maven/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Harbor",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/04.Harbor",imgUrl:"/img/more.png",description:"记录Harbor的学习和使用"}},title:"Harbor",date:"2020-03-11T21:50:56.000Z",permalink:"/harbor/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/04.Harbor.html",relativePath:"二级目录/技术/04.Harbor.md",key:"v-c746b608",path:"/harbor/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"HTML",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/05.HTML",imgUrl:"/img/more.png",description:"记录HTML的学习和使用"}},title:"HTML",date:"2020-03-11T21:50:56.000Z",permalink:"/html/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/05.HTML.html",relativePath:"二级目录/技术/05.HTML.md",key:"v-3e7efa7c",path:"/html/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"CSS",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/06.css",imgUrl:"/img/more.png",description:"记录CSS的学习和使用"}},title:"CSS",date:"2020-03-11T21:50:56.000Z",permalink:"/css/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/06.CSS.html",relativePath:"二级目录/技术/06.CSS.md",key:"v-d4d1bfd8",path:"/css/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Mysql",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库/01.Mysql",imgUrl:"/img/more.png",description:"记录Mysql的学习和使用"}},title:"Mysql",date:"2020-03-11T21:50:56.000Z",permalink:"/mysql/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%95%B0%E6%8D%AE%E5%BA%93/01.Mysql.html",relativePath:"二级目录/数据库/01.Mysql.md",key:"v-10bf0d48",path:"/mysql/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Nodejs",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"技术/07.Nodejs",imgUrl:"/img/more.png",description:"记录Nodejs的学习和使用"}},title:"Nodejs",date:"2020-03-11T21:50:56.000Z",permalink:"/nodejs/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%8A%80%E6%9C%AF/07.Nodejs.html",relativePath:"二级目录/技术/07.Nodejs.md",key:"v-07f98b7c",path:"/nodejs/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"MongoDB",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库/03.MongoDB",imgUrl:"/img/more.png",description:"记录MongoDB的学习和使用"}},title:"MongoDB",date:"2020-03-11T21:50:56.000Z",permalink:"/mongodb/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%95%B0%E6%8D%AE%E5%BA%93/03.MongoDB.html",relativePath:"二级目录/数据库/03.MongoDB.md",key:"v-c75131f0",path:"/mongodb/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Redis",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库/04.Redis",imgUrl:"/img/more.png",description:"记录Redis的学习和使用"}},title:"Redis",date:"2020-03-11T21:50:56.000Z",permalink:"/redis/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%95%B0%E6%8D%AE%E5%BA%93/04.Redis.html",relativePath:"二级目录/数据库/04.Redis.md",key:"v-b1b00070",path:"/redis/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Oracle",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库/02.Oracle",imgUrl:"/img/more.png",description:"记录Oracle的学习和使用"}},title:"Oracle",date:"2020-03-11T21:50:56.000Z",permalink:"/oracle/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%95%B0%E6%8D%AE%E5%BA%93/02.Oracle.html",relativePath:"二级目录/数据库/02.Oracle.md",key:"v-34ffc272",path:"/oracle/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"国产达梦数据库",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"数据库/05.达梦",imgUrl:"/img/more.png",description:"记录达梦数据库的学习和使用"}},title:"国产达梦数据库",date:"2020-03-11T21:50:56.000Z",permalink:"/dm8/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%95%B0%E6%8D%AE%E5%BA%93/05.%E8%BE%BE%E6%A2%A6.html",relativePath:"二级目录/数据库/05.达梦.md",key:"v-487ce94a",path:"/dm8/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"技术文档",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多/01.技术文档",imgUrl:"/img/more.png",description:"一些技术文档"}},title:"技术文档",date:"2020-03-11T21:50:56.000Z",permalink:"/tec-doc/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3.html",relativePath:"二级目录/更多/01.技术文档.md",key:"v-c088041a",path:"/tec-doc/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"闲言碎语",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多/02.闲言碎语",imgUrl:"/img/more.png",description:"随便说些什么"}},title:"闲言碎语",date:"2020-03-11T21:50:56.000Z",permalink:"/xysy/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%9B%B4%E5%A4%9A/02.%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD.html",relativePath:"二级目录/更多/02.闲言碎语.md",key:"v-618df9e0",path:"/xysy/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"实用技巧",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多/03.实用技巧",imgUrl:"/img/more.png",description:"一些有用的技巧"}},title:"实用技巧",date:"2020-03-11T21:50:56.000Z",permalink:"/syjq/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%9B%B4%E5%A4%9A/03.%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7.html",relativePath:"二级目录/更多/03.实用技巧.md",key:"v-865be344",path:"/syjq/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"学习",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多/04.学习",imgUrl:"/img/more.png",description:"一些关于学习的方法、文章等"}},title:"学习",date:"2020-03-11T21:50:56.000Z",permalink:"/learning/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0.html",relativePath:"二级目录/更多/04.学习.md",key:"v-67a38b09",path:"/learning/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"资源分享",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"更多/05.资源分享",imgUrl:"/img/more.png",description:"分享一些有用、好玩的资源"}},title:"资源分享",date:"2020-03-11T21:50:56.000Z",permalink:"/share/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"dxzh",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E6%9B%B4%E5%A4%9A/05.%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB.html",relativePath:"二级目录/更多/05.资源分享.md",key:"v-e2a3f396",path:"/share/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Python",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程/01.Python",imgUrl:"/img/more.png",description:"记录Python的学习和使用"}},title:"Python",date:"2020-03-11T21:50:56.000Z",permalink:"/python/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E7%BC%96%E7%A8%8B/01.Python.html",relativePath:"二级目录/编程/01.Python.md",key:"v-74b855d2",path:"/python/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Java",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程/02.Java",imgUrl:"/img/more.png",description:"记录java的学习和使用"}},title:"Java",date:"2020-03-11T21:50:56.000Z",permalink:"/java/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E7%BC%96%E7%A8%8B/02.Java.html",relativePath:"二级目录/编程/02.Java.md",key:"v-308314f7",path:"/java/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Shell",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程/03.Shell",imgUrl:"/img/more.png",description:"记录shell的学习和使用"}},title:"Shell",date:"2020-03-11T21:50:56.000Z",permalink:"/shell/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E7%BC%96%E7%A8%8B/03.Shell.html",relativePath:"二级目录/编程/03.Shell.md",key:"v-73322bb1",path:"/shell/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Javascript",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程/04.Javascript",imgUrl:"/img/more.png",description:"记录Javascript的学习和使用"}},title:"Javascript",date:"2020-03-11T21:50:56.000Z",permalink:"/javascript/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E7%BC%96%E7%A8%8B/04.Javascript.html",relativePath:"二级目录/编程/04.Javascript.md",key:"v-9d4cc452",path:"/javascript/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Vue",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"编程/04.Vue",imgUrl:"/img/more.png",description:"记录Vue的学习和使用"}},title:"Vue",date:"2020-03-11T21:50:56.000Z",permalink:"/vue/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E7%BC%96%E7%A8%8B/05.Vue.html",relativePath:"二级目录/编程/05.Vue.md",key:"v-1fc7487e",path:"/vue/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Linux",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/01.Linux",imgUrl:"/img/more.png",description:"记录Linux的学习和使用"}},title:"Linux",date:"2020-03-11T21:50:56.000Z",permalink:"/linux/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/01.Linux.html",relativePath:"二级目录/运维/01.Linux.md",key:"v-ba40d9ba",path:"/linux/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Centos",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/Linux/11.Centos",imgUrl:"/img/more.png",description:"一些Centos的相关知识"}},title:"Centos",date:"2020-03-11T21:50:56.000Z",permalink:"/linux/centos/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/01.Linux/01.Centos.html",relativePath:"二级目录/运维/01.Linux/01.Centos.md",key:"v-91f44108",path:"/linux/centos/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Ubuntu",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/01.Linux/02.Ubuntu",imgUrl:"/img/more.png",description:"一些Ubuntu的相关知识"}},title:"Ubuntu",date:"2020-03-11T21:50:56.000Z",permalink:"/linux/ubuntu/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/01.Linux/02.Ubuntu.html",relativePath:"二级目录/运维/01.Linux/02.Ubuntu.md",key:"v-786de108",path:"/linux/ubuntu/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Docker",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/02.Docker",imgUrl:"/img/more.png",description:"记录docker的学习和使用"}},title:"Docker",date:"2020-03-11T21:50:56.000Z",permalink:"/docker/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/02.Docker.html",relativePath:"二级目录/运维/02.Docker.md",key:"v-2e8d5982",path:"/docker/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Nginx",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/03.Nginx",imgUrl:"/img/more.png",description:"记录Nginx的学习和使用"}},title:"Nginx",date:"2020-03-11T21:50:56.000Z",permalink:"/nginx/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/03.Nginx.html",relativePath:"二级目录/运维/03.Nginx.md",key:"v-30b0c6d3",path:"/nginx/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Kubernetes",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/04.Kubernetes",imgUrl:"/img/more.png",description:"记录Kubernetes的学习和使用"}},title:"Kubernetes",date:"2020-03-11T21:50:56.000Z",permalink:"/kubernetes/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/04.Kubernetes.html",relativePath:"二级目录/运维/04.Kubernetes.md",key:"v-3abe1a3f",path:"/kubernetes/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Elasticsearch、Logstash和Kibana",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/05.ELK",imgUrl:"/img/more.png",description:"记录Elasticsearch、Logstash、Kibana的学习和使用"}},title:"Elasticsearch、Logstash和Kibana",date:"2020-03-11T21:50:56.000Z",permalink:"/elk/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/05.ELK.html",relativePath:"二级目录/运维/05.ELK.md",key:"v-65fc7c3b",path:"/elk/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Ansible",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/06.Ansible",imgUrl:"/img/more.png",description:"记录Ansible的学习和使用"}},title:"Ansible",date:"2020-03-11T21:50:56.000Z",permalink:"/ansible/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/06.Ansible.html",relativePath:"二级目录/运维/06.Ansible.md",key:"v-c811efde",path:"/ansible/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Zabbix",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"运维/07.Zabbix",imgUrl:"/img/more.png",description:"记录Zabbix的学习和使用"}},title:"Zabbix",date:"2020-03-11T21:50:56.000Z",permalink:"/zabbix/",sidebar:!1,article:!1,comment:!1,editLink:!1,author:{name:"xugaoyi",link:null}},regularPath:"/%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/%E8%BF%90%E7%BB%B4/07.Zabbix.html",relativePath:"二级目录/运维/07.Zabbix.md",key:"v-59e6049f",path:"/zabbix/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Docker安装Gitlab",frontmatter:{title:"Docker安装Gitlab",date:"2022-09-27T03:22:47.000Z",permalink:"/pages/2aa3c8/",categories:["技术","Gitlab"],tags:["Docker","服务搭建","Gitlab"],author:{name:"dxzh",link:null}},regularPath:"/%E6%8A%80%E6%9C%AF/01.Gitlab/01.Docker%E5%AE%89%E8%A3%85Gitlab.html",relativePath:"技术/01.Gitlab/01.Docker安装Gitlab.md",key:"v-45c84cea",path:"/pages/2aa3c8/",headers:[{level:2,title:"安装gitlab",slug:"安装gitlab",normalizedTitle:"安装gitlab",charIndex:2},{level:3,title:"gitlab问题整理",slug:"gitlab问题整理",normalizedTitle:"gitlab问题整理",charIndex:1650}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"安装gitlab gitlab问题整理",content:"# 安装gitlab\n\n 1. 查找gitlab镜像\n\ndocker search gitlab\n\n 2. 拉去gitlab镜像\n\ndocker pull gitlab/gitlab-ce\n\n 3. 创建并启动gitlab容器\n\n# 启动容器\ndocker run \\\n -d  \\\n -p 9980:80 \\\n -p 9922:22 \\\n -v /home/gitlab/etc:/etc/gitlab  \\\n -v /home/gitlab/log:/var/log/gitlab \\\n -v /home/gitlab/opt:/var/opt/gitlab \\\n --restart always \\\n --privileged=true \\\n --name gitlab \\\n gitlab/gitlab-ce\n \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n参数说明：\n(1) -p 9980:80(将容器内80端口映射至宿主机9980端口，这是访问gitlab的端口)\n(2) -p 9922:22(将容器内22端口映射至宿主机9922端口，这是访问ssh的端口)\n(3) -v /home/gitlab/etc:/etc/gitlab(挂载gitlab的配置文件)\n(4) -v /home/gitlab/log:/var/log/gitlab(挂载gitlab的日志文件)\n(5) -v /home/gitlab/opt:/var/opt/gitlab(挂载gitlab的数据)\n\n 4. 修改gitlab配置文件 由于gitlab是docker容器，默认配置无法访问到gitlab.所以我们必须要再对配置文件进行修改，才能正常访问gitlab.以下是修改配置文件的说明\n\n(1)进入到docker容器内部\ndocker exec -it gitlab /bin/bash\n\n(2)编辑配置文件\nvim /home/software/gitlab/etc/gitlab.rb\n\n(3)文件末尾处加入下面配置信息\n\n#gitlab访问地址(即宿主机ip)，可以写域名。如果端口不写的话默认为80端口\nexternal_url 'http://192.168.124.194'\n\n#ssh主机ip\ngitlab_rails['gitlab_ssh_host'] = '192.168.124.194'\n\n#ssh连接端口\ngitlab_rails['gitlab_shell_ssh_port'] = 9922\n \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n(4)# 让配置生效\ngitlab-ctl reconfigure\n\n等待配置完成后，即可用浏览器访问宿主机ip访问gitlab.\n\n 5. 修改root密码 第一次访问gitlab,会提示修改密码。故而我们需要再进入到gitlab容器中对root密码进行更改。\n\n# 进入到容器gitlab中\ndocker exec -it gitlab /bin/bash\n\n# 在容器内部输入命令进入到gitlab Rails控制台：\n# 此步骤会有延迟，需要等待数秒控制台版本信息打印出来后再进行后续操作\nsudo gitlab-rails console\n\n# 依次在控制台输入下面的命令\nuser = User.where(id: 1).first\nuser.password = '新密码'\n\n# 确认密码(可省略)\nuser.password_confirmation = '新密码'\n\n# 保存、退出\nuser.save!\nexit\n\n# 重新配置GitLab以使更改生效：\nsudo gitlab-ctl reconfigure\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n接着配置生效后，重新用浏览器访问登陆即可。\n\n\n# gitlab问题整理\n\n 1. gitlab页面响应慢/超时\n    解决方法：查看内存是否不够，考虑加大内存以及调整交换分区(swap)\n    参考链接：https://blog.csdn.net/Abraxs/article/details/105532362",normalizedContent:"# 安装gitlab\n\n 1. 查找gitlab镜像\n\ndocker search gitlab\n\n 2. 拉去gitlab镜像\n\ndocker pull gitlab/gitlab-ce\n\n 3. 创建并启动gitlab容器\n\n# 启动容器\ndocker run \\\n -d  \\\n -p 9980:80 \\\n -p 9922:22 \\\n -v /home/gitlab/etc:/etc/gitlab  \\\n -v /home/gitlab/log:/var/log/gitlab \\\n -v /home/gitlab/opt:/var/opt/gitlab \\\n --restart always \\\n --privileged=true \\\n --name gitlab \\\n gitlab/gitlab-ce\n \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n参数说明：\n(1) -p 9980:80(将容器内80端口映射至宿主机9980端口，这是访问gitlab的端口)\n(2) -p 9922:22(将容器内22端口映射至宿主机9922端口，这是访问ssh的端口)\n(3) -v /home/gitlab/etc:/etc/gitlab(挂载gitlab的配置文件)\n(4) -v /home/gitlab/log:/var/log/gitlab(挂载gitlab的日志文件)\n(5) -v /home/gitlab/opt:/var/opt/gitlab(挂载gitlab的数据)\n\n 4. 修改gitlab配置文件 由于gitlab是docker容器，默认配置无法访问到gitlab.所以我们必须要再对配置文件进行修改，才能正常访问gitlab.以下是修改配置文件的说明\n\n(1)进入到docker容器内部\ndocker exec -it gitlab /bin/bash\n\n(2)编辑配置文件\nvim /home/software/gitlab/etc/gitlab.rb\n\n(3)文件末尾处加入下面配置信息\n\n#gitlab访问地址(即宿主机ip)，可以写域名。如果端口不写的话默认为80端口\nexternal_url 'http://192.168.124.194'\n\n#ssh主机ip\ngitlab_rails['gitlab_ssh_host'] = '192.168.124.194'\n\n#ssh连接端口\ngitlab_rails['gitlab_shell_ssh_port'] = 9922\n \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n(4)# 让配置生效\ngitlab-ctl reconfigure\n\n等待配置完成后，即可用浏览器访问宿主机ip访问gitlab.\n\n 5. 修改root密码 第一次访问gitlab,会提示修改密码。故而我们需要再进入到gitlab容器中对root密码进行更改。\n\n# 进入到容器gitlab中\ndocker exec -it gitlab /bin/bash\n\n# 在容器内部输入命令进入到gitlab rails控制台：\n# 此步骤会有延迟，需要等待数秒控制台版本信息打印出来后再进行后续操作\nsudo gitlab-rails console\n\n# 依次在控制台输入下面的命令\nuser = user.where(id: 1).first\nuser.password = '新密码'\n\n# 确认密码(可省略)\nuser.password_confirmation = '新密码'\n\n# 保存、退出\nuser.save!\nexit\n\n# 重新配置gitlab以使更改生效：\nsudo gitlab-ctl reconfigure\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n接着配置生效后，重新用浏览器访问登陆即可。\n\n\n# gitlab问题整理\n\n 1. gitlab页面响应慢/超时\n    解决方法：查看内存是否不够，考虑加大内存以及调整交换分区(swap)\n    参考链接：https://blog.csdn.net/abraxs/article/details/105532362",charsets:{cjk:!0}},{title:"使用Nvm配置多Nodejs环境",frontmatter:{title:"使用Nvm配置多Nodejs环境",date:"2021-11-26T05:12:25.000Z",permalink:"/pages/28c2d5/",categories:["技术","Nodejs"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E6%8A%80%E6%9C%AF/07.Nodejs/01.%E4%BD%BF%E7%94%A8Nvm%E9%85%8D%E7%BD%AE%E5%A4%9ANodejs%E7%8E%AF%E5%A2%83.html",relativePath:"技术/07.Nodejs/01.使用Nvm配置多Nodejs环境.md",key:"v-c15738de",path:"/pages/28c2d5/",headers:[{level:2,title:"nvm（Node Version Manager）管理工具",slug:"nvm-node-version-manager-管理工具",normalizedTitle:"nvm（node version manager）管理工具",charIndex:24},{level:2,title:"在 Centos7 上安装 nvm 和 Node.js",slug:"在-centos7-上安装-nvm-和-node-js",normalizedTitle:"在 centos7 上安装 nvm 和 node.js",charIndex:364},{level:3,title:"1. 下载并安装 nvm：",slug:"_1-下载并安装-nvm",normalizedTitle:"1. 下载并安装 nvm：",charIndex:396},{level:3,title:"2. 配置环境变量",slug:"_2-配置环境变量",normalizedTitle:"2. 配置环境变量",charIndex:546},{level:3,title:"3. 重新打开终端窗口，运行以下命令以验证 nvm 是否正确安装：",slug:"_3-重新打开终端窗口-运行以下命令以验证-nvm-是否正确安装",normalizedTitle:"3. 重新打开终端窗口，运行以下命令以验证 nvm 是否正确安装：",charIndex:627},{level:3,title:"4.验证nvm版本",slug:"_4-验证nvm版本",normalizedTitle:"4.验证nvm版本",charIndex:712},{level:3,title:"5.在线查看Nodejs所有版本",slug:"_5-在线查看nodejs所有版本",normalizedTitle:"5.在线查看nodejs所有版本",charIndex:768},{level:3,title:"6.安装所需的 Node.js版本",slug:"_6-安装所需的-node-js版本",normalizedTitle:"6.安装所需的 node.js版本",charIndex:831},{level:3,title:"查看安装的 Node.js版本",slug:"查看安装的-node-js版本",normalizedTitle:"查看安装的 node.js版本",charIndex:942},{level:3,title:"切换到指定Node.js版本上",slug:"切换到指定node-js版本上",normalizedTitle:"切换到指定node.js版本上",charIndex:1025}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"nvm（Node Version Manager）管理工具 在 Centos7 上安装 nvm 和 Node.js 1. 下载并安装 nvm： 2. 配置环境变量 3. 重新打开终端窗口，运行以下命令以验证 nvm 是否正确安装： 4.验证nvm版本 5.在线查看Nodejs所有版本 6.安装所需的 Node.js版本 查看安装的 Node.js版本 切换到指定Node.js版本上",content:'# 使用Nvm配置多Node.js环境\n\n\n# nvm（Node Version Manager）管理工具\n\n * nvm是什么？ nvm是一个用于管理多个 Node.js 版本的工具。它可以让你在同一台机器上安装和切换不同版本的 Node.js，而不会相互干扰。\n\n * nvm可以做什么？ 使用 nvm，你可以轻松地安装、切换和删除 Node.js 版本。你可以在同一台机器上同时安装多个版本的 Node.js，并且可以在项目中使用不同的 Node.js 版本，以确保项目的兼容性和稳定性。例如，你可以在一台机器上同时安装 Node.js 10.x、Node.js 12.x 和 Node.js 14.x 版本。然后，你可以使用 nvm 命令来切换到不同的版本，以便在不同的项目中使用不同的 Node.js 版本。\n\n\n# 在 Centos7 上安装 nvm 和 Node.js\n\n\n# 1. 下载并安装 nvm：\n\nwget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz\n\ntar -xf nvm-0.39.3.tar\n\nmv nvm-0.39.3 /root/.nvm\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 配置环境变量\n\necho ". ~/.nvm/nvm.sh" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n\n\n# 3. 重新打开终端窗口，运行以下命令以验证 nvm 是否正确安装：\n\n[root@localhost ~]# command -v nvm\nnvm\n\n\n1\n2\n\n\n\n# 4.验证nvm版本\n\n[root@localhost ~]# nvm -v\n0.39.3\n\n\n1\n2\n\n\n\n# 5.在线查看Nodejs所有版本\n\n[root@localhost ~]# nvm list-remote\n\n\n1\n\n\n\n# 6.安装所需的 Node.js版本\n\n[root@localhost ~]# nvm install 16.17.1\n[root@localhost ~]# nvm install v14.18.0\n\n\n1\n2\n\n\n\n# 查看安装的 Node.js版本\n\n[root@localhost ~]# nvm ls\n    v14.18.0\n    v16.17.1\n\n\n1\n2\n3\n\n\n\n# 切换到指定Node.js版本上\n\n[root@localhost ~]# nvm use v14.18.0\nNow using node v14.18.0 (npm v6.14.15)\n\n[root@localhost ~]# node -v\nv14.18.0\n\n[root@localhost ~]# npm -v\n6.14.15\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',normalizedContent:'# 使用nvm配置多node.js环境\n\n\n# nvm（node version manager）管理工具\n\n * nvm是什么？ nvm是一个用于管理多个 node.js 版本的工具。它可以让你在同一台机器上安装和切换不同版本的 node.js，而不会相互干扰。\n\n * nvm可以做什么？ 使用 nvm，你可以轻松地安装、切换和删除 node.js 版本。你可以在同一台机器上同时安装多个版本的 node.js，并且可以在项目中使用不同的 node.js 版本，以确保项目的兼容性和稳定性。例如，你可以在一台机器上同时安装 node.js 10.x、node.js 12.x 和 node.js 14.x 版本。然后，你可以使用 nvm 命令来切换到不同的版本，以便在不同的项目中使用不同的 node.js 版本。\n\n\n# 在 centos7 上安装 nvm 和 node.js\n\n\n# 1. 下载并安装 nvm：\n\nwget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.3.tar.gz\n\ntar -xf nvm-0.39.3.tar\n\nmv nvm-0.39.3 /root/.nvm\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2. 配置环境变量\n\necho ". ~/.nvm/nvm.sh" >> /etc/profile\nsource /etc/profile\n\n\n1\n2\n\n\n\n# 3. 重新打开终端窗口，运行以下命令以验证 nvm 是否正确安装：\n\n[root@localhost ~]# command -v nvm\nnvm\n\n\n1\n2\n\n\n\n# 4.验证nvm版本\n\n[root@localhost ~]# nvm -v\n0.39.3\n\n\n1\n2\n\n\n\n# 5.在线查看nodejs所有版本\n\n[root@localhost ~]# nvm list-remote\n\n\n1\n\n\n\n# 6.安装所需的 node.js版本\n\n[root@localhost ~]# nvm install 16.17.1\n[root@localhost ~]# nvm install v14.18.0\n\n\n1\n2\n\n\n\n# 查看安装的 node.js版本\n\n[root@localhost ~]# nvm ls\n    v14.18.0\n    v16.17.1\n\n\n1\n2\n3\n\n\n\n# 切换到指定node.js版本上\n\n[root@localhost ~]# nvm use v14.18.0\nnow using node v14.18.0 (npm v6.14.15)\n\n[root@localhost ~]# node -v\nv14.18.0\n\n[root@localhost ~]# npm -v\n6.14.15\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n',charsets:{cjk:!0}},{title:"实用站点",frontmatter:{title:"实用站点",date:"2023-10-07T04:48:31.000Z",permalink:"/pages/d4c693/",categories:["收藏"],tags:["导航"],author:{name:"dxzh",link:null}},regularPath:"/%E6%94%B6%E8%97%8F/01.%E6%94%B6%E8%97%8F%E7%AB%99%E7%82%B9.html",relativePath:"收藏/01.收藏站点.md",key:"v-108c78ea",path:"/pages/d4c693/",headers:[{level:2,title:"内容搜索",slug:"内容搜索",normalizedTitle:"内容搜索",charIndex:2},{level:3,title:"综合搜索",slug:"综合搜索",normalizedTitle:"综合搜索",charIndex:11},{level:3,title:"垂直搜索",slug:"垂直搜索",normalizedTitle:"垂直搜索",charIndex:813},{level:2,title:"热门社区",slug:"热门社区",normalizedTitle:"热门社区",charIndex:2068},{level:2,title:"云端开发",slug:"云端开发",normalizedTitle:"云端开发",charIndex:4120},{level:2,title:"代码托管",slug:"代码托管",normalizedTitle:"代码托管",charIndex:4431},{level:2,title:"AI相关",slug:"ai相关",normalizedTitle:"ai相关",charIndex:5172},{level:3,title:"通用大模型",slug:"通用大模型",normalizedTitle:"通用大模型",charIndex:5181},{level:3,title:"AI 编程",slug:"ai-编程",normalizedTitle:"ai 编程",charIndex:6500},{level:3,title:"AI绘画",slug:"ai绘画",normalizedTitle:"ai绘画",charIndex:7313},{level:3,title:"其它工具",slug:"其它工具",normalizedTitle:"其它工具",charIndex:8126},{level:4,title:"免费",slug:"免费",normalizedTitle:"免费",charIndex:4157},{level:4,title:"付费",slug:"付费",normalizedTitle:"付费",charIndex:9586},{level:2,title:"实用工具",slug:"实用工具",normalizedTitle:"实用工具",charIndex:10577},{level:2,title:"镜像资源",slug:"镜像资源",normalizedTitle:"镜像资源",charIndex:12103},{level:2,title:"前端技术",slug:"前端技术",normalizedTitle:"前端技术",charIndex:14276},{level:2,title:"后端技术",slug:"后端技术",normalizedTitle:"后端技术",charIndex:15310},{level:2,title:"图片图标",slug:"图片图标",normalizedTitle:"图片图标",charIndex:15655},{level:2,title:"办公工具",slug:"办公工具",normalizedTitle:"办公工具",charIndex:17039},{level:3,title:"文档处理",slug:"文档处理",normalizedTitle:"文档处理",charIndex:17048},{level:3,title:"图表制作",slug:"图表制作",normalizedTitle:"图表制作",charIndex:17526},{level:2,title:"网站搭建",slug:"网站搭建",normalizedTitle:"网站搭建",charIndex:17779},{level:3,title:"云服务器",slug:"云服务器",normalizedTitle:"云服务器",charIndex:17788},{level:3,title:"域名注册",slug:"域名注册",normalizedTitle:"域名注册",charIndex:18581},{level:3,title:"站长工具",slug:"站长工具",normalizedTitle:"站长工具",charIndex:19684},{level:2,title:"浏览器插件",slug:"浏览器插件",normalizedTitle:"浏览器插件",charIndex:20194},{level:2,title:"媒体处理",slug:"媒体处理",normalizedTitle:"媒体处理",charIndex:21060},{level:2,title:"电子图书",slug:"电子图书",normalizedTitle:"电子图书",charIndex:21373}],lastUpdated:"2023/12/10 19:43:25",lastUpdatedTimestamp:1702208605e3,headersStr:"内容搜索 综合搜索 垂直搜索 热门社区 云端开发 代码托管 AI相关 通用大模型 AI 编程 AI绘画 其它工具 免费 付费 实用工具 镜像资源 前端技术 后端技术 图片图标 办公工具 文档处理 图表制作 网站搭建 云服务器 域名注册 站长工具 浏览器插件 媒体处理 电子图书",content:"# 内容搜索\n\n\n# 综合搜索\n\nGoogle\n\n全球第一的搜索引擎，让它带你看更大的世界\n\nBing\n\n微软推出的搜索引擎，体验胜过百度\n\nYandex\n\n俄罗斯第一、全球第五的搜索引擎\n\n- name: Google\n  desc: 全球第一的搜索引擎，让它带你看更大的世界\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.google.com/\n  bgColor: '#f9f9f9' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#ff000094' # 可选，默认 var(--textColor)\n  \n- name: Bing\n  desc: 微软推出的搜索引擎，体验胜过百度\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.bing.com/\n  bgColor: '#f9f9f9' \n  textColor: '#6854A1' \n  \n- name: Yandex\n  desc: 俄罗斯第一、全球第五的搜索引擎\n  #avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://yandex.com/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 垂直搜索\n\n开发者搜索\n\n百度针对开发者推出的垂类搜索引擎\n\nMaven Repo\n\nMaven 仓库检索, 非常好用\n\nNpmjs\n\nnpm 仓库检索\n\nLinux命令搜索\n\nLinux命令整合仓库，每一条命令都配有中文对照手册、详解\n\nDocker Hub\n\n官方docker仓库，用于查找搜索docker镜像\n\n- name: 开发者搜索\n  desc: 百度针对开发者推出的垂类搜索引擎\n  #avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://kaifa.baidu.com/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n- name: Maven Repo\n  desc: Maven 仓库检索, 非常好用\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://mvnrepository.com/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n- name: Npmjs\n  desc: npm 仓库检索\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.npmjs.com/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n- name: Linux命令搜索\n  desc: Linux命令整合仓库，每一条命令都配有中文对照手册、详解\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://wangchujiang.com/linux-command/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n- name: Docker Hub\n  desc: 官方docker仓库，用于查找搜索docker镜像\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://hub.docker.com/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# 热门社区\n\n博客园\n\n开发者的网上家园\n\n掘金\n\n掘金是一个帮助开发者成长的社区，是一个面向互联网技术人的内容分享平台\n\nCSDN\n\n中国专业IT社区CSDN\n\nStackoverflow\n\n全球最大的技术问答网站\n\nHugging Face\n\n知名的AI开源社区，社区有大量的AI模型工具和在线演示的ai项目\n\nSegmentfault\n\n中国领先的开发者技术社区\n\nLinux公社\n\nLinux系统门户网站\n\n51CTO\n\n中国领先的IT技术网站\n\n- name: 博客园\n  desc: 开发者的网上家园\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: http://www.cnblogs.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n  \n- name: 掘金\n  desc: 掘金是一个帮助开发者成长的社区，是一个面向互联网技术人的内容分享平台\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://juejin.im/\n  bgColor: 'rgb(171 203 253 / 79%)' \n  textColor: 'rgb(255 255 255)' \n\n- name: CSDN\n  desc: 中国专业IT社区CSDN\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: http://www.csdn.net/\n  bgColor: 'rgb(255 224 250)' \n  textColor: 'rgb(179 104 172)' \n  \n- name: Stackoverflow\n  desc: 全球最大的技术问答网站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://stackoverflow.com/\n  bgColor: 'rgb(255 181 128 / 84%)' \n  textColor: 'rgb(18 18 18)' \n\n- name: Hugging Face\n  desc: 知名的AI开源社区，社区有大量的AI模型工具和在线演示的ai项目\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://huggingface.co/\n  bgColor: 'White' \n  textColor: '#6854A1' \n\n- name: Segmentfault\n  desc: 中国领先的开发者技术社区\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://segmentfault.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n\n- name: Linux公社\n  desc: Linux系统门户网站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.linuxidc.com/Linuxit/\n  bgColor: 'White' \n  textColor: '#6854A1' \n\n- name: 51CTO\n  desc: 中国领先的IT技术网站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.51cto.com/\n  bgColor: 'White' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 云端开发\n\nColab\n\nGoogle提供的一种云端Python开发环境,免费的云计算资源,编写和执行Python代码\n\n- name: Colab\n  desc: Google提供的一种云端Python开发环境,免费的云计算资源,编写和执行Python代码\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://colab.research.google.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 代码托管\n\nGithub\n\n全球最大的代码托管平台,程序员必备网站\n\nGitee\n\n开源中国旗下的代码托管平台：码云\n\nGitlab\n\n一个强大的版本控制和协作平台，可以用它搭建自己的git服务\n\n- name: Github\n  desc: 全球最大的代码托管平台,程序员必备网站\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://github.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n  \n- name: Gitee\n  desc: 开源中国旗下的代码托管平台：码云\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://gitee.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Gitlab\n  desc: 一个强大的版本控制和协作平台，可以用它搭建自己的git服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://gitlab.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# AI相关\n\n\n# 通用大模型\n\nChatGPT\n\nChatGPT官方站点\n\nClaude\n\nAnthropic开发的人工智能,chatgpt的竞争者\n\nBard\n\nGoogle家的生成式对话模型,对标ChatGPT\n\n文心一格\n\n百度文心一格官网\n\n通义千问\n\n阿里巴巴大语言模型聊天机器人\n\n- name: ChatGPT\n  desc: ChatGPT官方站点\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://chat.openai.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n\n- name: Claude\n  desc: Anthropic开发的人工智能,chatgpt的竞争者\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.anthropic.com/\n  bgColor: '#f9f9f9' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#ff000094' # 可选，默认 var(--textColor)\n\n- name: Bard\n  desc: Google家的生成式对话模型,对标ChatGPT\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://bard.google.com/\n  bgColor: '#f9f9f9' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#ff000094' # 可选，默认 var(--textColor)\n\n\n- name: 文心一格\n  desc: 百度文心一格官网\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://yige.baidu.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 通义千问\n  desc: 阿里巴巴大语言模型聊天机器人\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://tongyi.aliyun.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# AI 编程\n\nCodeWhisperer\n\n亚马逊推出的免费AI编程助手\n\nCodeium\n\n免费的AI编程工具，智能生成和补全代码\n\nCody\n\n免费AI编程工具，代码补全、上下文解释和编程语言翻译转换\n\n\n- name: CodeWhisperer\n  desc: 亚马逊推出的免费AI编程助手\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://aws.amazon.com/codewhisperer/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Codeium\n  desc: 免费的AI编程工具，智能生成和补全代码\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.codeium.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Cody\n  desc: 免费AI编程工具，代码补全、上下文解释和编程语言翻译转换\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.codeium.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# AI绘画\n\nStable Diffusion\n\n开源免费的AI绘画工具--官方站\n\nMidjourney\n\n知名AI绘画工具--官方站\n\nDALL·E2\n\nOpenai实验室开发的文本生成图像系统\n\n\n- name: Stable Diffusion\n  desc: 开源免费的AI绘画工具--官方站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://stability.ai/stable-diffusion/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Midjourney\n  desc: 知名AI绘画工具--官方站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.midjourney.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: DALL·E2\n  desc: Openai实验室开发的文本生成图像系统\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://openai.com/dall-e-2\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 其它工具\n\n# 免费\n\nDesignify\n\nAI图像背景扣除、增强等\n\n网易见外工作台\n\n智能转写翻译服务\n\nTTSMaker\n\n免费文本转语音工具\n\nBgRemover\n\nAI在线图片去底工具\n\nBgSub\n\nAI在线图片去底工具\n\nBigjpg\n\nAI图片无损放大\n\n\n- name: Designify\n  desc: AI图像背景扣除、增强等\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.designify.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 网易见外工作台\n  desc: 智能转写翻译服务\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://jianwai.youdao.com/index/0\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: TTSMaker\n  desc: 免费文本转语音工具\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://ttsmaker.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: BgRemover\n  desc: AI在线图片去底工具\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: http://www.aigei.com/bgremover/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: BgSub\n  desc: AI在线图片去底工具\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://bgsub.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Bigjpg\n  desc: AI图片无损放大\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://bigjpg.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n# 付费\n\n佐糖\n\nAI抠图、图像增强等--须注册付费\n\nvmake\n\nAI抠图、图像增强等--须注册付费\n\n清图\n\nAI图像处理、文字转语音/语音合成\n\nChatExcel\n\n用于 Excel 的自动 AI 工具\n\n- name: 佐糖\n  desc: AI抠图、图像增强等--须注册付费\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://picwish.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n  \n- name: vmake\n  desc: AI抠图、图像增强等--须注册付费\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://vmake.ai/zh-CN\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 清图\n  desc: AI图像处理、文字转语音/语音合成\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://qingtu.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: ChatExcel\n  desc: 用于 Excel 的自动 AI 工具\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://chatexcel.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 实用工具\n\n菜鸟工具\n\n菜鸟教程提供的工具集\n\n在线工具\n\n程序员的工具箱\n\n脚本之家\n\n脚本之家旗下的工具箱\n\n编程狮在线工具\n\nW3Cschool旗下的工具箱\n\ncloudconvert\n\n在线转化压缩包、字体、图片、视频、电子书\n\nTOOLFK\n\n最强工具人在线工具箱\n\n- name: 菜鸟工具\n  desc: 菜鸟教程提供的工具集\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://c.runoob.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n  \n- name: 在线工具\n  desc: 程序员的工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://tool.lu//\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 脚本之家\n  desc: 脚本之家旗下的工具箱\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: http://tools.jb51.net/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n  \n- name: 编程狮在线工具\n  desc: W3Cschool旗下的工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://123.w3cschool.cn/webtools/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: cloudconvert\n  desc: 在线转化压缩包、字体、图片、视频、电子书\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://cloudconvert.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: TOOLFK\n  desc: 最强工具人在线工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.toolfk.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 镜像资源\n\n阿里云镜像站\n\n阿里云开源软件镜像站\n\n清华大学镜像站\n\n清华大学开源软件镜像站\n\n腾讯云镜像站\n\n腾讯云开源软件镜像站\n\n中科大镜像站\n\n中国科学技术大学开源软件镜像站\n\n华为云镜像站\n\n华为云开源软件镜像站\n\n网易镜像站\n\n网易开源软件镜像站\n\n微软中国镜像站\n\nazure开源软件镜像站\n\n浙江大学镜像站\n\n浙江大学开源软件镜像站\n\n兰州大学镜像站\n\n兰州大学开源软件镜像站\n\n- name: 阿里云镜像站\n  desc: 阿里云开源软件镜像站\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://developer.aliyun.com/mirror/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 清华大学镜像站\n  desc: 清华大学开源软件镜像站\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://mirrors.tuna.tsinghua.edu.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 腾讯云镜像站\n  desc: 腾讯云开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirrors.cloud.tencent.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 中科大镜像站\n  desc: 中国科学技术大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirrors.ustc.edu.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 华为云镜像站\n  desc: 华为云开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirrors.huaweicloud.com/home\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 网易镜像站\n  desc: 网易开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirrors.163.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 微软中国镜像站\n  desc: azure开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirror.azure.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 浙江大学镜像站\n  desc: 浙江大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirrors.zju.edu.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: 兰州大学镜像站\n  desc: 兰州大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://mirror.lzu.edu.cn/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n\n\n\n# 前端技术\n\nBootstrap\n\n简洁、直观、强悍的前端开发框架，让web开发更迅速、简单\n\nVUE\n\n渐进式JavaScript 框架\n\nNPM\n\nNodeJS 包管理文档\n\nReact\n\n用于构建用户界面的 JavaScript 库\n\n- name: Bootstrap\n  desc: 简洁、直观、强悍的前端开发框架，让web开发更迅速、简单\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.bootcss.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: VUE\n  desc: 渐进式JavaScript 框架\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://cn.vuejs.org/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: NPM\n  desc: NodeJS 包管理文档\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.npmjs.cn/\n  bgColor: '#f9f9f9' \n  textColor: 'rgb(179 104 172)' \n\n- name: React\n  desc: 用于构建用户界面的 JavaScript 库\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://react.docschina.org/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 后端技术\n\nMyBatis\n\n一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。\n\n\n- name: MyBatis\n  desc: 一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://mybatis.org/mybatis-3/zh/index.html\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 图片图标\n\nPicdiet\n\n一款在线批量压缩图片神器，\n\nFont Awesome\n\n一套绝佳的图标字体库和CSS框架\n\nPhotopea\n\n网页版本 Photoshop，非常强大\n\nSquoosh\n\n谷歌出品在线免费图片压缩工具神器\n\nCSS Icon\n\n所有的 icon 都是纯 css 画的 缺点：icon 不够多\n\n- name: Picdiet\n  desc: 一款在线批量压缩图片神器，\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.picdiet.com/zh-cn\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: Font Awesome\n  desc: 一套绝佳的图标字体库和CSS框架\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://fontawesome.dashgame.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: Photopea\n  desc: 网页版本 Photoshop，非常强大\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://www.photopea.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: Squoosh\n  desc: 谷歌出品在线免费图片压缩工具神器\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://squoosh.app/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name: CSS Icon\n  desc: 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://cssicon.space/#/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 办公工具\n\n\n# 文档处理\n\n白描OCR\n\n白描OCR网页版，图片文字提取、PDF转文字\n\ni Love PDF\n\nPDF文件在线处理工具\n\n- name: 白描OCR\n  desc: 白描OCR网页版，图片文字提取、PDF转文字\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://web.baimiaoapp.com/\n  bgColor: 'rgb(230 255 224)' \n  textColor: 'rgb(136 179 104)'\n\n- name: i Love PDF\n  desc: PDF文件在线处理工具\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.ilovepdf.com/zh-cn\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 图表制作\n\nFlourish\n\n免费的数据可视化图表工具\n\n\n- name: Flourish\n  desc: 免费的数据可视化图表工具\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://flourish.studio/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 网站搭建\n\n\n# 云服务器\n\n阿里云\n\n阿里巴巴提供的云服务\n\n腾讯云\n\n腾讯提供的云服务\n\n华为云\n\n华为提供的云服务\n\n- name: 阿里云\n  desc: 阿里巴巴提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.aliyun.com\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: 腾讯云\n  desc: 腾讯提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://cloud.tencent.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: 华为云\n  desc: 华为提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://activity.huaweicloud.com\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 域名注册\n\n万网\n\n阿里云旗下的域名注册服务提供商\n\nGoDaddy万网\n\n国外域名注册服务商\n\nNameSilo\n\n国外域名注册服务商\n\nNamecheap\n\n国外域名注册服务商\n\n- name: 万网\n  desc: 阿里云旗下的域名注册服务提供商\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://wanwang.aliyun.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: GoDaddy万网\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.godaddy.com/zh-sg\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: NameSilo\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.namesilo.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: Namecheap\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.namecheap.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 站长工具\n\n站长工具\n\n站长的得力助手\n\nDNS检测\n\n全球 DNS 节点查询网\n\n- name: 站长工具\n  desc: 站长的得力助手\n  #avatar: https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/user/20211029181901.png\n  link: https://tool.chinaz.com/\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1' \n\n- name:  DNS检测\n  desc: 全球 DNS 节点查询网\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.whatsmydns.net/\n  bgColor: '#f9f9f9' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#ff000094' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 浏览器插件\n\nUserScript.Zone\n\n油猴脚本搜索、安装\n\nGreasyFork\n\n油猴脚本搜索、安装\n\ncrx4chrome\n\nchrome浏览器插件搜索下载\n\n- name: UserScript.Zone\n  desc: 油猴脚本搜索、安装\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.userscript.zone/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n- name: GreasyFork\n  desc: 油猴脚本搜索、安装\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://greasyfork.org/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n- name: crx4chrome\n  desc: chrome浏览器插件搜索下载\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://www.crx4chrome.com/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 媒体处理\n\nConvert\n\n文件格式转换器,视频,音频,pdf工具,字体,电子书,图像\n\n- name: Convert\n  desc: 文件格式转换器,视频,音频,pdf工具,字体,电子书,图像\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://convert.io/cn/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 电子图书\n\nZlibrary\n\n全球最大的数字图书馆，电子书查找、下载\n\n- name: Zlibrary\n  desc: 全球最大的数字图书馆，电子书查找、下载\n  #avatar: https://z3.ax1x.com/2021/09/30/4oKMVI.jpg\n  link: https://zh.z-library.se/\n  bgColor: '#FFB6C1' # 可选，默认 var(--bodyBg)。颜色值有 # 号时请添加单引号\n  textColor: '#621529' # 可选，默认 var(--textColor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# 内容搜索\n\n\n# 综合搜索\n\ngoogle\n\n全球第一的搜索引擎，让它带你看更大的世界\n\nbing\n\n微软推出的搜索引擎，体验胜过百度\n\nyandex\n\n俄罗斯第一、全球第五的搜索引擎\n\n- name: google\n  desc: 全球第一的搜索引擎，让它带你看更大的世界\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.google.com/\n  bgcolor: '#f9f9f9' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#ff000094' # 可选，默认 var(--textcolor)\n  \n- name: bing\n  desc: 微软推出的搜索引擎，体验胜过百度\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.bing.com/\n  bgcolor: '#f9f9f9' \n  textcolor: '#6854a1' \n  \n- name: yandex\n  desc: 俄罗斯第一、全球第五的搜索引擎\n  #avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://yandex.com/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 垂直搜索\n\n开发者搜索\n\n百度针对开发者推出的垂类搜索引擎\n\nmaven repo\n\nmaven 仓库检索, 非常好用\n\nnpmjs\n\nnpm 仓库检索\n\nlinux命令搜索\n\nlinux命令整合仓库，每一条命令都配有中文对照手册、详解\n\ndocker hub\n\n官方docker仓库，用于查找搜索docker镜像\n\n- name: 开发者搜索\n  desc: 百度针对开发者推出的垂类搜索引擎\n  #avatar: https://cdn.staticaly.com/gh/xugaoyi/image_store@master/blog/20200103123203.jpg\n  link: https://kaifa.baidu.com/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n- name: maven repo\n  desc: maven 仓库检索, 非常好用\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://mvnrepository.com/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n- name: npmjs\n  desc: npm 仓库检索\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.npmjs.com/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n- name: linux命令搜索\n  desc: linux命令整合仓库，每一条命令都配有中文对照手册、详解\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://wangchujiang.com/linux-command/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n- name: docker hub\n  desc: 官方docker仓库，用于查找搜索docker镜像\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://hub.docker.com/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# 热门社区\n\n博客园\n\n开发者的网上家园\n\n掘金\n\n掘金是一个帮助开发者成长的社区，是一个面向互联网技术人的内容分享平台\n\ncsdn\n\n中国专业it社区csdn\n\nstackoverflow\n\n全球最大的技术问答网站\n\nhugging face\n\n知名的ai开源社区，社区有大量的ai模型工具和在线演示的ai项目\n\nsegmentfault\n\n中国领先的开发者技术社区\n\nlinux公社\n\nlinux系统门户网站\n\n51cto\n\n中国领先的it技术网站\n\n- name: 博客园\n  desc: 开发者的网上家园\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: http://www.cnblogs.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n  \n- name: 掘金\n  desc: 掘金是一个帮助开发者成长的社区，是一个面向互联网技术人的内容分享平台\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://juejin.im/\n  bgcolor: 'rgb(171 203 253 / 79%)' \n  textcolor: 'rgb(255 255 255)' \n\n- name: csdn\n  desc: 中国专业it社区csdn\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: http://www.csdn.net/\n  bgcolor: 'rgb(255 224 250)' \n  textcolor: 'rgb(179 104 172)' \n  \n- name: stackoverflow\n  desc: 全球最大的技术问答网站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://stackoverflow.com/\n  bgcolor: 'rgb(255 181 128 / 84%)' \n  textcolor: 'rgb(18 18 18)' \n\n- name: hugging face\n  desc: 知名的ai开源社区，社区有大量的ai模型工具和在线演示的ai项目\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://huggingface.co/\n  bgcolor: 'white' \n  textcolor: '#6854a1' \n\n- name: segmentfault\n  desc: 中国领先的开发者技术社区\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://segmentfault.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n\n- name: linux公社\n  desc: linux系统门户网站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.linuxidc.com/linuxit/\n  bgcolor: 'white' \n  textcolor: '#6854a1' \n\n- name: 51cto\n  desc: 中国领先的it技术网站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.51cto.com/\n  bgcolor: 'white' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n\n# 云端开发\n\ncolab\n\ngoogle提供的一种云端python开发环境,免费的云计算资源,编写和执行python代码\n\n- name: colab\n  desc: google提供的一种云端python开发环境,免费的云计算资源,编写和执行python代码\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://colab.research.google.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 代码托管\n\ngithub\n\n全球最大的代码托管平台,程序员必备网站\n\ngitee\n\n开源中国旗下的代码托管平台：码云\n\ngitlab\n\n一个强大的版本控制和协作平台，可以用它搭建自己的git服务\n\n- name: github\n  desc: 全球最大的代码托管平台,程序员必备网站\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://github.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n  \n- name: gitee\n  desc: 开源中国旗下的代码托管平台：码云\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://gitee.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: gitlab\n  desc: 一个强大的版本控制和协作平台，可以用它搭建自己的git服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://gitlab.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# ai相关\n\n\n# 通用大模型\n\nchatgpt\n\nchatgpt官方站点\n\nclaude\n\nanthropic开发的人工智能,chatgpt的竞争者\n\nbard\n\ngoogle家的生成式对话模型,对标chatgpt\n\n文心一格\n\n百度文心一格官网\n\n通义千问\n\n阿里巴巴大语言模型聊天机器人\n\n- name: chatgpt\n  desc: chatgpt官方站点\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://chat.openai.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n\n- name: claude\n  desc: anthropic开发的人工智能,chatgpt的竞争者\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.anthropic.com/\n  bgcolor: '#f9f9f9' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#ff000094' # 可选，默认 var(--textcolor)\n\n- name: bard\n  desc: google家的生成式对话模型,对标chatgpt\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://bard.google.com/\n  bgcolor: '#f9f9f9' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#ff000094' # 可选，默认 var(--textcolor)\n\n\n- name: 文心一格\n  desc: 百度文心一格官网\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://yige.baidu.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 通义千问\n  desc: 阿里巴巴大语言模型聊天机器人\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://tongyi.aliyun.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# ai 编程\n\ncodewhisperer\n\n亚马逊推出的免费ai编程助手\n\ncodeium\n\n免费的ai编程工具，智能生成和补全代码\n\ncody\n\n免费ai编程工具，代码补全、上下文解释和编程语言翻译转换\n\n\n- name: codewhisperer\n  desc: 亚马逊推出的免费ai编程助手\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://aws.amazon.com/codewhisperer/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: codeium\n  desc: 免费的ai编程工具，智能生成和补全代码\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.codeium.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: cody\n  desc: 免费ai编程工具，代码补全、上下文解释和编程语言翻译转换\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.codeium.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# ai绘画\n\nstable diffusion\n\n开源免费的ai绘画工具--官方站\n\nmidjourney\n\n知名ai绘画工具--官方站\n\ndall·e2\n\nopenai实验室开发的文本生成图像系统\n\n\n- name: stable diffusion\n  desc: 开源免费的ai绘画工具--官方站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://stability.ai/stable-diffusion/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: midjourney\n  desc: 知名ai绘画工具--官方站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.midjourney.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: dall·e2\n  desc: openai实验室开发的文本生成图像系统\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://openai.com/dall-e-2\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 其它工具\n\n# 免费\n\ndesignify\n\nai图像背景扣除、增强等\n\n网易见外工作台\n\n智能转写翻译服务\n\nttsmaker\n\n免费文本转语音工具\n\nbgremover\n\nai在线图片去底工具\n\nbgsub\n\nai在线图片去底工具\n\nbigjpg\n\nai图片无损放大\n\n\n- name: designify\n  desc: ai图像背景扣除、增强等\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.designify.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 网易见外工作台\n  desc: 智能转写翻译服务\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://jianwai.youdao.com/index/0\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: ttsmaker\n  desc: 免费文本转语音工具\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://ttsmaker.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: bgremover\n  desc: ai在线图片去底工具\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: http://www.aigei.com/bgremover/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: bgsub\n  desc: ai在线图片去底工具\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://bgsub.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: bigjpg\n  desc: ai图片无损放大\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://bigjpg.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n# 付费\n\n佐糖\n\nai抠图、图像增强等--须注册付费\n\nvmake\n\nai抠图、图像增强等--须注册付费\n\n清图\n\nai图像处理、文字转语音/语音合成\n\nchatexcel\n\n用于 excel 的自动 ai 工具\n\n- name: 佐糖\n  desc: ai抠图、图像增强等--须注册付费\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://picwish.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n  \n- name: vmake\n  desc: ai抠图、图像增强等--须注册付费\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://vmake.ai/zh-cn\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 清图\n  desc: ai图像处理、文字转语音/语音合成\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://qingtu.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: chatexcel\n  desc: 用于 excel 的自动 ai 工具\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://chatexcel.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 实用工具\n\n菜鸟工具\n\n菜鸟教程提供的工具集\n\n在线工具\n\n程序员的工具箱\n\n脚本之家\n\n脚本之家旗下的工具箱\n\n编程狮在线工具\n\nw3cschool旗下的工具箱\n\ncloudconvert\n\n在线转化压缩包、字体、图片、视频、电子书\n\ntoolfk\n\n最强工具人在线工具箱\n\n- name: 菜鸟工具\n  desc: 菜鸟教程提供的工具集\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://c.runoob.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n  \n- name: 在线工具\n  desc: 程序员的工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://tool.lu//\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 脚本之家\n  desc: 脚本之家旗下的工具箱\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: http://tools.jb51.net/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n  \n- name: 编程狮在线工具\n  desc: w3cschool旗下的工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://123.w3cschool.cn/webtools/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: cloudconvert\n  desc: 在线转化压缩包、字体、图片、视频、电子书\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://cloudconvert.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: toolfk\n  desc: 最强工具人在线工具箱\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.toolfk.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 镜像资源\n\n阿里云镜像站\n\n阿里云开源软件镜像站\n\n清华大学镜像站\n\n清华大学开源软件镜像站\n\n腾讯云镜像站\n\n腾讯云开源软件镜像站\n\n中科大镜像站\n\n中国科学技术大学开源软件镜像站\n\n华为云镜像站\n\n华为云开源软件镜像站\n\n网易镜像站\n\n网易开源软件镜像站\n\n微软中国镜像站\n\nazure开源软件镜像站\n\n浙江大学镜像站\n\n浙江大学开源软件镜像站\n\n兰州大学镜像站\n\n兰州大学开源软件镜像站\n\n- name: 阿里云镜像站\n  desc: 阿里云开源软件镜像站\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://developer.aliyun.com/mirror/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 清华大学镜像站\n  desc: 清华大学开源软件镜像站\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://mirrors.tuna.tsinghua.edu.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 腾讯云镜像站\n  desc: 腾讯云开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirrors.cloud.tencent.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 中科大镜像站\n  desc: 中国科学技术大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirrors.ustc.edu.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 华为云镜像站\n  desc: 华为云开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirrors.huaweicloud.com/home\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 网易镜像站\n  desc: 网易开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirrors.163.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 微软中国镜像站\n  desc: azure开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirror.azure.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 浙江大学镜像站\n  desc: 浙江大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirrors.zju.edu.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: 兰州大学镜像站\n  desc: 兰州大学开源软件镜像站\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://mirror.lzu.edu.cn/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n\n\n\n# 前端技术\n\nbootstrap\n\n简洁、直观、强悍的前端开发框架，让web开发更迅速、简单\n\nvue\n\n渐进式javascript 框架\n\nnpm\n\nnodejs 包管理文档\n\nreact\n\n用于构建用户界面的 javascript 库\n\n- name: bootstrap\n  desc: 简洁、直观、强悍的前端开发框架，让web开发更迅速、简单\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.bootcss.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: vue\n  desc: 渐进式javascript 框架\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://cn.vuejs.org/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: npm\n  desc: nodejs 包管理文档\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.npmjs.cn/\n  bgcolor: '#f9f9f9' \n  textcolor: 'rgb(179 104 172)' \n\n- name: react\n  desc: 用于构建用户界面的 javascript 库\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://react.docschina.org/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 后端技术\n\nmybatis\n\n一款优秀的持久层框架，它支持定制化 sql、存储过程以及高级映射。\n\n\n- name: mybatis\n  desc: 一款优秀的持久层框架，它支持定制化 sql、存储过程以及高级映射。\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://mybatis.org/mybatis-3/zh/index.html\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 图片图标\n\npicdiet\n\n一款在线批量压缩图片神器，\n\nfont awesome\n\n一套绝佳的图标字体库和css框架\n\nphotopea\n\n网页版本 photoshop，非常强大\n\nsquoosh\n\n谷歌出品在线免费图片压缩工具神器\n\ncss icon\n\n所有的 icon 都是纯 css 画的 缺点：icon 不够多\n\n- name: picdiet\n  desc: 一款在线批量压缩图片神器，\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.picdiet.com/zh-cn\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: font awesome\n  desc: 一套绝佳的图标字体库和css框架\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://fontawesome.dashgame.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: photopea\n  desc: 网页版本 photoshop，非常强大\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://www.photopea.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: squoosh\n  desc: 谷歌出品在线免费图片压缩工具神器\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://squoosh.app/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name: css icon\n  desc: 所有的 icon 都是纯 css 画的 缺点：icon 不够多\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://cssicon.space/#/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# 办公工具\n\n\n# 文档处理\n\n白描ocr\n\n白描ocr网页版，图片文字提取、pdf转文字\n\ni love pdf\n\npdf文件在线处理工具\n\n- name: 白描ocr\n  desc: 白描ocr网页版，图片文字提取、pdf转文字\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://web.baimiaoapp.com/\n  bgcolor: 'rgb(230 255 224)' \n  textcolor: 'rgb(136 179 104)'\n\n- name: i love pdf\n  desc: pdf文件在线处理工具\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.ilovepdf.com/zh-cn\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 图表制作\n\nflourish\n\n免费的数据可视化图表工具\n\n\n- name: flourish\n  desc: 免费的数据可视化图表工具\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://flourish.studio/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 网站搭建\n\n\n# 云服务器\n\n阿里云\n\n阿里巴巴提供的云服务\n\n腾讯云\n\n腾讯提供的云服务\n\n华为云\n\n华为提供的云服务\n\n- name: 阿里云\n  desc: 阿里巴巴提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.aliyun.com\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: 腾讯云\n  desc: 腾讯提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://cloud.tencent.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: 华为云\n  desc: 华为提供的云服务\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://activity.huaweicloud.com\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 域名注册\n\n万网\n\n阿里云旗下的域名注册服务提供商\n\ngodaddy万网\n\n国外域名注册服务商\n\nnamesilo\n\n国外域名注册服务商\n\nnamecheap\n\n国外域名注册服务商\n\n- name: 万网\n  desc: 阿里云旗下的域名注册服务提供商\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://wanwang.aliyun.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: godaddy万网\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.godaddy.com/zh-sg\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: namesilo\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.namesilo.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: namecheap\n  desc: 国外域名注册服务商\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.namecheap.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n\n# 站长工具\n\n站长工具\n\n站长的得力助手\n\ndns检测\n\n全球 dns 节点查询网\n\n- name: 站长工具\n  desc: 站长的得力助手\n  #avatar: https://cdn.jsdelivr.net/gh/kele-bingtang/static/user/20211029181901.png\n  link: https://tool.chinaz.com/\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1' \n\n- name:  dns检测\n  desc: 全球 dns 节点查询网\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.whatsmydns.net/\n  bgcolor: '#f9f9f9' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#ff000094' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 浏览器插件\n\nuserscript.zone\n\n油猴脚本搜索、安装\n\ngreasyfork\n\n油猴脚本搜索、安装\n\ncrx4chrome\n\nchrome浏览器插件搜索下载\n\n- name: userscript.zone\n  desc: 油猴脚本搜索、安装\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.userscript.zone/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n- name: greasyfork\n  desc: 油猴脚本搜索、安装\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://greasyfork.org/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n- name: crx4chrome\n  desc: chrome浏览器插件搜索下载\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://www.crx4chrome.com/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# 媒体处理\n\nconvert\n\n文件格式转换器,视频,音频,pdf工具,字体,电子书,图像\n\n- name: convert\n  desc: 文件格式转换器,视频,音频,pdf工具,字体,电子书,图像\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://convert.io/cn/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 电子图书\n\nzlibrary\n\n全球最大的数字图书馆，电子书查找、下载\n\n- name: zlibrary\n  desc: 全球最大的数字图书馆，电子书查找、下载\n  #avatar: https://z3.ax1x.com/2021/09/30/4okmvi.jpg\n  link: https://zh.z-library.se/\n  bgcolor: '#ffb6c1' # 可选，默认 var(--bodybg)。颜色值有 # 号时请添加单引号\n  textcolor: '#621529' # 可选，默认 var(--textcolor)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0}},{title:"Linux环境安装Mysql",frontmatter:{title:"Linux环境安装Mysql",date:"2023-03-18T15:47:34.000Z",permalink:"/pages/8f25b7/",categories:["数据库","Mysql"],tags:["Linux","Mysql"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/01.Mysql/01.Mysql%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html",relativePath:"数据库/01.Mysql/01.Mysql的安装和初始化.md",key:"v-53a9dd0c",path:"/pages/8f25b7/",headers:[{level:2,title:"普通安装",slug:"普通安装",normalizedTitle:"普通安装",charIndex:2},{level:3,title:"开始下载Mysql",slug:"开始下载mysql",normalizedTitle:"开始下载mysql",charIndex:11},{level:3,title:"查看安装情况",slug:"查看安装情况",normalizedTitle:"查看安装情况",charIndex:49},{level:3,title:"上传、解压",slug:"上传、解压",normalizedTitle:"上传、解压",charIndex:222},{level:3,title:"修改、移动目录",slug:"修改、移动目录",normalizedTitle:"修改、移动目录",charIndex:291},{level:3,title:"创建用户组",slug:"创建用户组",normalizedTitle:"创建用户组",charIndex:394},{level:3,title:"创建数据目录并赋予权限",slug:"创建数据目录并赋予权限",normalizedTitle:"创建数据目录并赋予权限",charIndex:625},{level:3,title:"初始化数据库",slug:"初始化数据库",normalizedTitle:"初始化数据库",charIndex:798},{level:4,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:808},{level:3,title:"systemctl 管理服务",slug:"systemctl-管理服务",normalizedTitle:"systemctl 管理服务",charIndex:1690},{level:3,title:"设置环境变量",slug:"设置环境变量",normalizedTitle:"设置环境变量",charIndex:2381},{level:2,title:"docker 镜像方式安装",slug:"docker-镜像方式安装",normalizedTitle:"docker 镜像方式安装",charIndex:2606},{level:2,title:"安装后使用",slug:"安装后使用",normalizedTitle:"安装后使用",charIndex:3393},{level:3,title:"登录并修改密码",slug:"登录并修改密码",normalizedTitle:"登录并修改密码",charIndex:3403},{level:3,title:"配置远程连接",slug:"配置远程连接",normalizedTitle:"配置远程连接",charIndex:3554}],lastUpdated:"2023/12/6 20:22:26",lastUpdatedTimestamp:1701865346e3,headersStr:"普通安装 开始下载Mysql 查看安装情况 上传、解压 修改、移动目录 创建用户组 创建数据目录并赋予权限 初始化数据库 修改配置 systemctl 管理服务 设置环境变量 docker 镜像方式安装 安装后使用 登录并修改密码 配置远程连接",content:"# 普通安装\n\n\n# 开始下载Mysql\n\n官网下载地址\n\n选择合适的版本，下载即可\n\n\n\n\n# 查看安装情况\n\n * 查看mysql是否已安装\n\nrpm -qa | grep mysql\n\n\n1\n\n * CentOs 7 会有默认的 mariadb 数据库，和 MySQL 有冲突，所以需要进行卸载\n\nrpm -qa | grep mariadb \nyum remove mariadb-libs.x86_64 \n\n\n\n1\n2\n3\n\n\n\n# 上传、解压\n\ntar -zxvf mysql-5.7.35-linux-glibc2.12-x86_64.tar.gz\n\n\n1\n\n\n\n# 修改、移动目录\n\n修改解压后的目录名，并移动到指定目录\n\nmv ./mysql-5.7.35-linux-glibc2.12-x86_64 /usr/local/mysql-5.7.35\n\n\n1\n\n\n\n# 创建用户组\n\n如果已经创建 MySQL 组和用户，无需这一步，没有则创建\n\ncat /etc/group | grep mysql\ncat /etc/passwd | grep mysql\n \n#创建用户组\ngroupadd mysql  \n \n#创建用户，并添加该用户到组中\nuseradd -g mysql mysql\n \n#设置密码\npasswd mysql\n# 输入自定义密码\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 创建数据目录并赋予权限\n\n进入 MySQL 目录并创建 data 目录，其中 data 目录存放数据相关的数据。\n\n * 创建目录\n\ncd /usr/local/mysql-5.7.35\nmkdir data\n\n\n1\n2\n\n * 授权\n\nchown -R mysql.mysql /usr/local/mysql-5.7.35\n\n\n1\n\n\n\n# 初始化数据库\n\n# 修改配置\n\n * 编辑 /etc/my.conf 文件\n\nvim /etc/my.conf\n\n\n1\n\n * 添加如下配置\n\n[mysqld]\n# 设置 3306 端口\nport=3306\n# 设置 mysql 的安装目录\nbasedir=/usr/local/mysql-5.7.35\n# 设置mysql数据库的数据的存放目录\ndatadir=/usr/local/mysql/data\n# 允许最大连接数\nmax_connections=10000\n# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统\nmax_connect_errors=10\n# 服务端使用的字符集默认为 UTF8\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置 mysql 客户端默认字符集\ndefault-character-set=utf8\n[client]\n# 设置 mysql 客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n需要修改的内容是第 5 行和第 7 行：basedir 填写自己的 MySQL 根目录，datadir填写数据 data 目录路径，其他不变。\n\n * 进行初始化操作，并记住初始化密码，登录需要\n\n首先进入 MySQL 根目录下的 bin 目录，里面有个 mysqld 命令，拿来初始化\n\ncd /usr/local/mysql-5.7.35/bin\n./mysqld --initialize\n\n\n1\n2\n\n\n记住初始化密码\n\n\n\n\n# systemctl 管理服务\n\n * 创建 systemctl 管理 MySQL 的配置文件：\n\nvim /usr/lib/systemd/system/mysqld.service\n\n\n1\n\n\n填入下面的内容\n\n[Unit]\nDescription=MySQL Server\nDocumentation=man:mysqld(8)\nDocumentation=http://dev.mysql.com/doc/refman/en/using-systemd.html\nAfter=network.target\nAfter=syslog.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nUser=mysql\nGroup=mysql\nExecStart=/usr/local/mysql-5.7.35/bin/mysqld --defaults-file=/etc/my.cnf\nLimitNOFILE = 5000\n#Restart=on-failure\n#RestartPreventExitStatus=1\n#PrivateTmp=false\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n然后重载配置文件,执行:\n\nsystemctl daemon-reload\n\n\n1\n\n * 启动mysql服务\n\nsystemctl start mysqld\n\n\n\n1\n2\n\n * 设置开机自启\n\nsystemctl enable mysqld\n\n\n1\n\n\n\n# 设置环境变量\n\n每次登录 MySQL 都需要 bin 目录下的 mysql 命令。配置好环境变量，无论在哪里，都可以直接输入 mysql 进行登录。\n\nvi /etc/profile\n\n\n\n1\n2\n\n\n去到最后一行，添加如下内容：MySQL 根目录下的 bin 目录\n\nexport PATH=$PATH:/usr/local/mysql-5.7.35/bin\n\n\n1\n\n\n重新载入文件\n\nsource /etc/profile \n\n\n1\n\n\n\n# docker 镜像方式安装\n\n 1. 查看docker运行状态，如未启动请先启动\n\nsystemctl status docker\n\n\n1\n\n 2. 下载/加载mysql镜像\n\n环境允许的情况下，联网下载镜像，否则载入下载后的镜像\n\n * 下载镜像\n\nsudo docker pull mysql:8.0.30\n\n\n1\n\n * 加载\n\n# 载入命令\nsudo docker load < docker_arm_mysql8.0.30.tar\n\n\n1\n2\n\n * 最后，查看镜像信息\n\nsudo docker images | grep mysql\n\n\n1\n\n 3. 在宿主机提前创建mysql相关目录，用以做docker容器的挂载目录(目录仅供参考，可自定义目录)\n\n(1)创建配置文件目录\n\nmkdir -p /usr/local/mysql8_docker/conf\n\n\n1\n\n\n(2)创建数据文件目录\n\nmkdir -p /usr/local/mysql8_docker/data\n\n\n1\n\n\n(3)创建日志文件目录\n\nmkdir -p /usr/local/mysql8_docker/log\n\n\n1\n\n 4. 创建mysql容器并启动\n\nsudo docker run --name mysql8 -p 3306:3306 \\ \n-v /usr/local/mysql8_docker/log:/var/log/mysql \\\n-v /usr/local/mysql8_docker/data:/var/lib/mysql \\\n-v /usr/local/mysql8_docker/conf:/etc/mysql\n-e MYSQL_ROOT_PASSWORD=a123456\n-d arm64v8/mysql:8.0.30\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 安装后使用\n\n\n# 登录并修改密码\n\n * 登录 MySQL\n\n#执行后输入密码\nmysql -uroot -p \n\n\n1\n2\n\n * 修改密码\n\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码';\n\n\n1\n\n\n\n# 配置远程连接\n\n配置远程连接后，可以让其他地方能连接到该 MySQL 服务器。\n\n 1. 登陆Mysql。\n\n 2. 切换到 MySQL 数据库，并配置远程连接，并刷新重启：\n\nuse mysql\nupdate user set host ='%' where user='root';\nFLUSH PRIVILEGES;\n\n\n1\n2\n3\n",normalizedContent:"# 普通安装\n\n\n# 开始下载mysql\n\n官网下载地址\n\n选择合适的版本，下载即可\n\n\n\n\n# 查看安装情况\n\n * 查看mysql是否已安装\n\nrpm -qa | grep mysql\n\n\n1\n\n * centos 7 会有默认的 mariadb 数据库，和 mysql 有冲突，所以需要进行卸载\n\nrpm -qa | grep mariadb \nyum remove mariadb-libs.x86_64 \n\n\n\n1\n2\n3\n\n\n\n# 上传、解压\n\ntar -zxvf mysql-5.7.35-linux-glibc2.12-x86_64.tar.gz\n\n\n1\n\n\n\n# 修改、移动目录\n\n修改解压后的目录名，并移动到指定目录\n\nmv ./mysql-5.7.35-linux-glibc2.12-x86_64 /usr/local/mysql-5.7.35\n\n\n1\n\n\n\n# 创建用户组\n\n如果已经创建 mysql 组和用户，无需这一步，没有则创建\n\ncat /etc/group | grep mysql\ncat /etc/passwd | grep mysql\n \n#创建用户组\ngroupadd mysql  \n \n#创建用户，并添加该用户到组中\nuseradd -g mysql mysql\n \n#设置密码\npasswd mysql\n# 输入自定义密码\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 创建数据目录并赋予权限\n\n进入 mysql 目录并创建 data 目录，其中 data 目录存放数据相关的数据。\n\n * 创建目录\n\ncd /usr/local/mysql-5.7.35\nmkdir data\n\n\n1\n2\n\n * 授权\n\nchown -r mysql.mysql /usr/local/mysql-5.7.35\n\n\n1\n\n\n\n# 初始化数据库\n\n# 修改配置\n\n * 编辑 /etc/my.conf 文件\n\nvim /etc/my.conf\n\n\n1\n\n * 添加如下配置\n\n[mysqld]\n# 设置 3306 端口\nport=3306\n# 设置 mysql 的安装目录\nbasedir=/usr/local/mysql-5.7.35\n# 设置mysql数据库的数据的存放目录\ndatadir=/usr/local/mysql/data\n# 允许最大连接数\nmax_connections=10000\n# 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统\nmax_connect_errors=10\n# 服务端使用的字符集默认为 utf8\ncharacter-set-server=utf8\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=innodb\n# 默认使用“mysql_native_password”插件认证\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置 mysql 客户端默认字符集\ndefault-character-set=utf8\n[client]\n# 设置 mysql 客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n需要修改的内容是第 5 行和第 7 行：basedir 填写自己的 mysql 根目录，datadir填写数据 data 目录路径，其他不变。\n\n * 进行初始化操作，并记住初始化密码，登录需要\n\n首先进入 mysql 根目录下的 bin 目录，里面有个 mysqld 命令，拿来初始化\n\ncd /usr/local/mysql-5.7.35/bin\n./mysqld --initialize\n\n\n1\n2\n\n\n记住初始化密码\n\n\n\n\n# systemctl 管理服务\n\n * 创建 systemctl 管理 mysql 的配置文件：\n\nvim /usr/lib/systemd/system/mysqld.service\n\n\n1\n\n\n填入下面的内容\n\n[unit]\ndescription=mysql server\ndocumentation=man:mysqld(8)\ndocumentation=http://dev.mysql.com/doc/refman/en/using-systemd.html\nafter=network.target\nafter=syslog.target\n\n[install]\nwantedby=multi-user.target\n\n[service]\nuser=mysql\ngroup=mysql\nexecstart=/usr/local/mysql-5.7.35/bin/mysqld --defaults-file=/etc/my.cnf\nlimitnofile = 5000\n#restart=on-failure\n#restartpreventexitstatus=1\n#privatetmp=false\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n然后重载配置文件,执行:\n\nsystemctl daemon-reload\n\n\n1\n\n * 启动mysql服务\n\nsystemctl start mysqld\n\n\n\n1\n2\n\n * 设置开机自启\n\nsystemctl enable mysqld\n\n\n1\n\n\n\n# 设置环境变量\n\n每次登录 mysql 都需要 bin 目录下的 mysql 命令。配置好环境变量，无论在哪里，都可以直接输入 mysql 进行登录。\n\nvi /etc/profile\n\n\n\n1\n2\n\n\n去到最后一行，添加如下内容：mysql 根目录下的 bin 目录\n\nexport path=$path:/usr/local/mysql-5.7.35/bin\n\n\n1\n\n\n重新载入文件\n\nsource /etc/profile \n\n\n1\n\n\n\n# docker 镜像方式安装\n\n 1. 查看docker运行状态，如未启动请先启动\n\nsystemctl status docker\n\n\n1\n\n 2. 下载/加载mysql镜像\n\n环境允许的情况下，联网下载镜像，否则载入下载后的镜像\n\n * 下载镜像\n\nsudo docker pull mysql:8.0.30\n\n\n1\n\n * 加载\n\n# 载入命令\nsudo docker load < docker_arm_mysql8.0.30.tar\n\n\n1\n2\n\n * 最后，查看镜像信息\n\nsudo docker images | grep mysql\n\n\n1\n\n 3. 在宿主机提前创建mysql相关目录，用以做docker容器的挂载目录(目录仅供参考，可自定义目录)\n\n(1)创建配置文件目录\n\nmkdir -p /usr/local/mysql8_docker/conf\n\n\n1\n\n\n(2)创建数据文件目录\n\nmkdir -p /usr/local/mysql8_docker/data\n\n\n1\n\n\n(3)创建日志文件目录\n\nmkdir -p /usr/local/mysql8_docker/log\n\n\n1\n\n 4. 创建mysql容器并启动\n\nsudo docker run --name mysql8 -p 3306:3306 \\ \n-v /usr/local/mysql8_docker/log:/var/log/mysql \\\n-v /usr/local/mysql8_docker/data:/var/lib/mysql \\\n-v /usr/local/mysql8_docker/conf:/etc/mysql\n-e mysql_root_password=a123456\n-d arm64v8/mysql:8.0.30\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 安装后使用\n\n\n# 登录并修改密码\n\n * 登录 mysql\n\n#执行后输入密码\nmysql -uroot -p \n\n\n1\n2\n\n * 修改密码\n\nalter user 'root'@'localhost' identified with mysql_native_password by '新密码';\n\n\n1\n\n\n\n# 配置远程连接\n\n配置远程连接后，可以让其他地方能连接到该 mysql 服务器。\n\n 1. 登陆mysql。\n\n 2. 切换到 mysql 数据库，并配置远程连接，并刷新重启：\n\nuse mysql\nupdate user set host ='%' where user='root';\nflush privileges;\n\n\n1\n2\n3\n",charsets:{cjk:!0}},{title:"往事回首之2018年",frontmatter:{title:"往事回首之2018年",date:"2021-03-18T04:52:22.000Z",permalink:"/pages/99d8f6/",categories:[null],tags:[null],author:{name:"dxzh",link:null},search:!1,article:!1},regularPath:"/%E6%94%B6%E8%97%8F/%E5%BE%80%E4%BA%8B%E5%9B%9E%E9%A6%96%E4%B9%8B2018%E5%B9%B4.html",relativePath:"收藏/往事回首之2018年.md",key:"v-0f1d9e82",path:"/pages/99d8f6/",headers:[{level:2,title:"往事回忆之2018",slug:"往事回忆之2018",normalizedTitle:"往事回忆之2018",charIndex:2},{level:3,title:"毕业季",slug:"毕业季",normalizedTitle:"毕业季",charIndex:87},{level:3,title:"离校",slug:"离校",normalizedTitle:"离校",charIndex:436},{level:3,title:"找工作",slug:"找工作",normalizedTitle:"找工作",charIndex:451},{level:3,title:"再做选择",slug:"再做选择",normalizedTitle:"再做选择",charIndex:2219},{level:3,title:"工作之后",slug:"工作之后",normalizedTitle:"工作之后",charIndex:3051}],lastUpdated:"2023/12/10 06:20:53",lastUpdatedTimestamp:1702160453e3,headersStr:"往事回忆之2018 毕业季 离校 找工作 再做选择 工作之后",content:'# 往事回忆之2018\n\n2021年3月，刷了会儿朋友圈，一些记忆涌上心头，禁不住回忆下往事。\n\n2018年，似乎只是一个普通的年份，但它对我而言是非常重要的一年。\n\n\n# 毕业季\n\n这一年，是我在大学的第四个年头，将要经历必将经历的“毕业季”。它承载着离别，也意味着开始。\n\n那时候，校园里的我能切身感受并经历到各种复杂交织的情绪：欢呼，沮丧，憧憬，恐惧....于我而言，可能其中憧憬的情绪更甚些。\n\n毕业一天天靠近，\n\n我准备好了吗？\n\n我时常这么问自己\n\n应该吧！\n\n我这么回应。\n\n开始的时候，总是很匆忙。 准备论文开题，搜集论文资料，然后应付接踵而来的会议，再就是论文编写和做毕业设计。反复修改过后，接着查重和答辩。\n\n在论文查重、答辩各种流程走完了以后，终于开始组织拍毕业照了。\n\n大概5月底，穿上并不合身但符合身份的学士服，在校园里精心摆弄姿势与表情，准备与几年的同窗情谊道个别。 跟着与朋友们聊天吃饭，互诉衷肠。\n\n总之，开心也开心，难过也难过。\n\n\n# 离校\n\n6月份的时候，准备离校找工作了。 那时的我在小城市待久了，无比向往大城市的生活，且对于大城市的认知是很粗浅和盲目的，眼中的大城市一切都很美好，繁华热闹的都市、遍地可寻的机会，以及丰富多彩的生活，根本没注意到缺点？又或者是我而选择性地忽略了大城市的缺点。 于是我和室友、学校里面的朋友们道别之后，只身一人拖着不多不少的行李，满怀期待地来到了向往已久的大城市————广州。当时脑中有两个去向：广州和深圳，之所以选择广州，还是有缘由的，大四上半年我参加了实习工作，那时在珠海的某家央企的制造厂里做类似助理工程师的工作，期间公司组织过来广州游玩，对于广州的印象相当不错，实在很喜欢，这也间接影响了我的选择。\n\n来到广州以后，一切都很陌生，这里没有亲朋好友，一切都是重新开始的模样。然后当时的我带着不多的盘缠住上了日租的青年旅馆，记不清多少钱一天了，大概是一天二三十块。 青旅坐落在老旧的居民楼，但好在位置不算太偏，附近百来米有公交站，步行至地铁口大概10来分钟， 我所住的青旅实际是由两室一厅改造的，空间不大，床位的陈设跟宿舍差不多，不过麻雀虽小五脏俱全，基本的用品都比较齐全，室外还有个围起来的小花园。 青旅里面住了好多人，有男生也有女生，基本都是二三十岁的年纪。他们中有些人是过来玩耍的，有的人跟我一样是过来找工作的，也有人已经工作了没有到外面租房，选择常住在这里的。\n\n人来人往，我在这里住了挺长的时间，青旅里面看到新面孔的到来和老面孔的离开是很平常的事情，我在这里相对而言也并不活泼好动，所以认识的人不多，不过有时也会凑凑热闹，参与青旅内部组织的活动，其实就是凑钱大家买菜做饭，然后交流蹭饭哈哈哈。\n\n在青旅住的那段日子，不得不提的是一个人就是“牛哥”。 他是这家青旅的老板，也是我来广州后认识的第一个人，年纪跟我相仿，却有着不少精彩的经历。 他一位非常善良且热情的湖南人，做事认真细致又富有创造力，青旅里面大大小小的事他都会参与，小到铺床叠被，大到房屋设计改造，虽然他并不是实际的房主，但却很乐意花时间和金钱去改造青旅的住房环境（如卫生清理、青旅内外部设计、家具家电购买等）。 除了青旅时常有的聚餐，牛哥还带着我们跑步、兜风以及逛车展等，让那段日子不至于枯燥煎熬。 总而言之，那段时间由于牛哥的存在，当时在青旅里面我住得还比较开心。 后来，我搬离了青旅那天，牛哥还帮我整理行李、搬行李等。虽然已经好久了，但我们至今还偶有联系。\n\n\n# 找工作\n\n话说回来，谈谈工作的事情。 来到广州大概是6月份，我到8月份才找到一份相对可以的工作。 刚开始我准备的简历是JAVA开发工程师，会的技能就是java、ssh框架、以及tomcat、mysql、html、css、js等基本的web项目开发所需技术，然后有一两个web开发的项目经验，诚恳点来说确实掌握的程度远达不到熟悉，但至少看懂代码，写写一些不太复杂的代码还是可以的。但是那段时间投出去简历，连面试机会都很难得，通过的更是屈指可数。 当然这可能也跟我当时不成熟的想法以及保守的投简历策略有关。我总是很耐心地查看招聘网页的各项条件，包括技能、工作年限等，然后与自身条件作比较，遇到有一些略有出入的，或者是招聘条件中存在我没掌握的技能基本就不投了。 这就导致了我投的少，效率低，反馈就更少了。这是后话了，总之，这是一个很糟糕的操作。因为后来，我了解到同时期的朋友都会海投，面试机会比我多得多。\n\n来大城市后确实体会到了何谓竞争激烈，我记得一个小公司，就一小会儿的功夫，约莫十来号人在等待面试。不确定是不是相同的岗位，但应该都是java，而且他们似乎每个人都有相关的工作经验？\n\n面试的地方基本都很小，不太隔音的办公室能传来微弱的谈话声。\n\n面试过程基本就是先做面试题，自我介绍，然后描述技能、介绍项目，项目提问等。\n\n我不知道其他人情况怎么样，总之印象中我总是免不了紧张，也许是不够自信， 甚至每次的自我介绍都不流畅，最终结果也不理想，我总是没有收到期待的反馈。\n\n印象中就通过了两家，有一家我对其面试官印象不太好，公司给我的整体感受很差，就没考虑； 另一家，给我打了电话问我，然后我说想考虑下，然后再过一天联系对方，结果人家说招够了，岗位没了！我很崩溃！\n\n好吧，关于java面试的故事基本就是这样了。\n\n\n# 再做选择\n\n一切都跟我预想得不一样，我变得沮丧，开始怀疑自己，是不是应该选择这一行。\n\n当时，爸妈还会不时打电话给我嘘寒问暖，了解找工作情况，我每次都只能跟他们说:"还在找还在找，很快了很快了"，可是我心里也没底，我不知道啥时候是个头。每次都能感受到他们内心的失落，虽然他们每次都会安慰我鼓励我，还问我需不需要钱？\n\n我很无奈，我不想再这样子了，我希望自己能很快找到工作，然后跟他们汇报好消息，我已经长大了，我希望我能是让他们自豪的孩子，我想成为他们的依靠，不能总是向他们索取了。\n\n于是，我开始琢磨着找寻自己目前可以做的，可以做好的事情。 最终锁定的选择是"运营"。于是我开始了解运营相关的知识并做准备。\n\n开始投运营相关的简历以后，出奇的以外，对运营岗位我也是同样投简历的策略，但是得到的反馈却比java开发的要多不少，这让我逐渐开始看到希望。\n\n接着就是面试，基本也是一样的面试套路，自我介绍，描述对运营的理解，相关运营经历、能力等，但是提问环节就有点五花八门了，因为运营分用户运营、产品运营、新媒体运营、活动运营等，实际也不是很好把握，要下点功夫了解。\n\n面试运营的过程还是挺顺利的，大概一个星期后，我就找到了运营相关的工作。虽然如今看来这份工作不咋地，但当时的我还是挺开心的，至少能给爸妈一个交代了。\n\n说说这家的面试，面试的时候是介绍自己的情况，面试官有问到我的写稿能力，然后我给她看了大学期间曾写过的几篇公众号文章，接着说还比较认可我写的，又问一些其它的人生理想什么的，就让我回去等消息。\n\n当天我就收到了她给我发的信息，跟我说反馈。然后又跟我说这入职前要试工，就是要试工通过之后才让入职（好家伙，后来我才在网上了解到这是违法的，靠谱点的公司都不会有这个环节）。出于当时对她及整个公司的印象还可以，我就同意了。接着就是为期两天的试工，在里面根据主管意见写不同主题的文章等，以及考验一些基本的软件操作。\n\n很顺利，我通过了考察，然后就入职了。\n\n\n# 工作之后\n\n后面是入职后工作的事情了，做些新媒体账号内容内容维护的事情及汇报，整体难度不大，都能顺利完成。\n\n这段工作中，认识了几位同龄的小伙伴，当时还比较稚嫩，相互的友谊也没有后来的复杂。\n\n12月份的时候，因为当时眼看着工作量越来越大，任务越来越难完成，涨工资没盼头，重复性的工作能力提升也有限。 让我十分苦恼煎熬，我不甘心一直这样！所以我选择离职了\n\n拿离职证明那天，我还记得办公室里那位漂亮的hr小姐姐跟我聊了好一会儿，跟我说她的想法，她的经历，劝我不要冲动，慎重做选择，我很感激她。事实上她应该也就比我大几岁，平时我们也没什么多的来往，只是有时见面遇到会打打招呼，而她还能认得我并乐于我分享一些很纯粹的东西。只是可惜后来我们再没遇到了，我也再没遇到像她那般的人。\n\n回首记忆里的2018，谈不上终生难忘，却有着特殊的意义，就写到这里吧。',normalizedContent:'# 往事回忆之2018\n\n2021年3月，刷了会儿朋友圈，一些记忆涌上心头，禁不住回忆下往事。\n\n2018年，似乎只是一个普通的年份，但它对我而言是非常重要的一年。\n\n\n# 毕业季\n\n这一年，是我在大学的第四个年头，将要经历必将经历的“毕业季”。它承载着离别，也意味着开始。\n\n那时候，校园里的我能切身感受并经历到各种复杂交织的情绪：欢呼，沮丧，憧憬，恐惧....于我而言，可能其中憧憬的情绪更甚些。\n\n毕业一天天靠近，\n\n我准备好了吗？\n\n我时常这么问自己\n\n应该吧！\n\n我这么回应。\n\n开始的时候，总是很匆忙。 准备论文开题，搜集论文资料，然后应付接踵而来的会议，再就是论文编写和做毕业设计。反复修改过后，接着查重和答辩。\n\n在论文查重、答辩各种流程走完了以后，终于开始组织拍毕业照了。\n\n大概5月底，穿上并不合身但符合身份的学士服，在校园里精心摆弄姿势与表情，准备与几年的同窗情谊道个别。 跟着与朋友们聊天吃饭，互诉衷肠。\n\n总之，开心也开心，难过也难过。\n\n\n# 离校\n\n6月份的时候，准备离校找工作了。 那时的我在小城市待久了，无比向往大城市的生活，且对于大城市的认知是很粗浅和盲目的，眼中的大城市一切都很美好，繁华热闹的都市、遍地可寻的机会，以及丰富多彩的生活，根本没注意到缺点？又或者是我而选择性地忽略了大城市的缺点。 于是我和室友、学校里面的朋友们道别之后，只身一人拖着不多不少的行李，满怀期待地来到了向往已久的大城市————广州。当时脑中有两个去向：广州和深圳，之所以选择广州，还是有缘由的，大四上半年我参加了实习工作，那时在珠海的某家央企的制造厂里做类似助理工程师的工作，期间公司组织过来广州游玩，对于广州的印象相当不错，实在很喜欢，这也间接影响了我的选择。\n\n来到广州以后，一切都很陌生，这里没有亲朋好友，一切都是重新开始的模样。然后当时的我带着不多的盘缠住上了日租的青年旅馆，记不清多少钱一天了，大概是一天二三十块。 青旅坐落在老旧的居民楼，但好在位置不算太偏，附近百来米有公交站，步行至地铁口大概10来分钟， 我所住的青旅实际是由两室一厅改造的，空间不大，床位的陈设跟宿舍差不多，不过麻雀虽小五脏俱全，基本的用品都比较齐全，室外还有个围起来的小花园。 青旅里面住了好多人，有男生也有女生，基本都是二三十岁的年纪。他们中有些人是过来玩耍的，有的人跟我一样是过来找工作的，也有人已经工作了没有到外面租房，选择常住在这里的。\n\n人来人往，我在这里住了挺长的时间，青旅里面看到新面孔的到来和老面孔的离开是很平常的事情，我在这里相对而言也并不活泼好动，所以认识的人不多，不过有时也会凑凑热闹，参与青旅内部组织的活动，其实就是凑钱大家买菜做饭，然后交流蹭饭哈哈哈。\n\n在青旅住的那段日子，不得不提的是一个人就是“牛哥”。 他是这家青旅的老板，也是我来广州后认识的第一个人，年纪跟我相仿，却有着不少精彩的经历。 他一位非常善良且热情的湖南人，做事认真细致又富有创造力，青旅里面大大小小的事他都会参与，小到铺床叠被，大到房屋设计改造，虽然他并不是实际的房主，但却很乐意花时间和金钱去改造青旅的住房环境（如卫生清理、青旅内外部设计、家具家电购买等）。 除了青旅时常有的聚餐，牛哥还带着我们跑步、兜风以及逛车展等，让那段日子不至于枯燥煎熬。 总而言之，那段时间由于牛哥的存在，当时在青旅里面我住得还比较开心。 后来，我搬离了青旅那天，牛哥还帮我整理行李、搬行李等。虽然已经好久了，但我们至今还偶有联系。\n\n\n# 找工作\n\n话说回来，谈谈工作的事情。 来到广州大概是6月份，我到8月份才找到一份相对可以的工作。 刚开始我准备的简历是java开发工程师，会的技能就是java、ssh框架、以及tomcat、mysql、html、css、js等基本的web项目开发所需技术，然后有一两个web开发的项目经验，诚恳点来说确实掌握的程度远达不到熟悉，但至少看懂代码，写写一些不太复杂的代码还是可以的。但是那段时间投出去简历，连面试机会都很难得，通过的更是屈指可数。 当然这可能也跟我当时不成熟的想法以及保守的投简历策略有关。我总是很耐心地查看招聘网页的各项条件，包括技能、工作年限等，然后与自身条件作比较，遇到有一些略有出入的，或者是招聘条件中存在我没掌握的技能基本就不投了。 这就导致了我投的少，效率低，反馈就更少了。这是后话了，总之，这是一个很糟糕的操作。因为后来，我了解到同时期的朋友都会海投，面试机会比我多得多。\n\n来大城市后确实体会到了何谓竞争激烈，我记得一个小公司，就一小会儿的功夫，约莫十来号人在等待面试。不确定是不是相同的岗位，但应该都是java，而且他们似乎每个人都有相关的工作经验？\n\n面试的地方基本都很小，不太隔音的办公室能传来微弱的谈话声。\n\n面试过程基本就是先做面试题，自我介绍，然后描述技能、介绍项目，项目提问等。\n\n我不知道其他人情况怎么样，总之印象中我总是免不了紧张，也许是不够自信， 甚至每次的自我介绍都不流畅，最终结果也不理想，我总是没有收到期待的反馈。\n\n印象中就通过了两家，有一家我对其面试官印象不太好，公司给我的整体感受很差，就没考虑； 另一家，给我打了电话问我，然后我说想考虑下，然后再过一天联系对方，结果人家说招够了，岗位没了！我很崩溃！\n\n好吧，关于java面试的故事基本就是这样了。\n\n\n# 再做选择\n\n一切都跟我预想得不一样，我变得沮丧，开始怀疑自己，是不是应该选择这一行。\n\n当时，爸妈还会不时打电话给我嘘寒问暖，了解找工作情况，我每次都只能跟他们说:"还在找还在找，很快了很快了"，可是我心里也没底，我不知道啥时候是个头。每次都能感受到他们内心的失落，虽然他们每次都会安慰我鼓励我，还问我需不需要钱？\n\n我很无奈，我不想再这样子了，我希望自己能很快找到工作，然后跟他们汇报好消息，我已经长大了，我希望我能是让他们自豪的孩子，我想成为他们的依靠，不能总是向他们索取了。\n\n于是，我开始琢磨着找寻自己目前可以做的，可以做好的事情。 最终锁定的选择是"运营"。于是我开始了解运营相关的知识并做准备。\n\n开始投运营相关的简历以后，出奇的以外，对运营岗位我也是同样投简历的策略，但是得到的反馈却比java开发的要多不少，这让我逐渐开始看到希望。\n\n接着就是面试，基本也是一样的面试套路，自我介绍，描述对运营的理解，相关运营经历、能力等，但是提问环节就有点五花八门了，因为运营分用户运营、产品运营、新媒体运营、活动运营等，实际也不是很好把握，要下点功夫了解。\n\n面试运营的过程还是挺顺利的，大概一个星期后，我就找到了运营相关的工作。虽然如今看来这份工作不咋地，但当时的我还是挺开心的，至少能给爸妈一个交代了。\n\n说说这家的面试，面试的时候是介绍自己的情况，面试官有问到我的写稿能力，然后我给她看了大学期间曾写过的几篇公众号文章，接着说还比较认可我写的，又问一些其它的人生理想什么的，就让我回去等消息。\n\n当天我就收到了她给我发的信息，跟我说反馈。然后又跟我说这入职前要试工，就是要试工通过之后才让入职（好家伙，后来我才在网上了解到这是违法的，靠谱点的公司都不会有这个环节）。出于当时对她及整个公司的印象还可以，我就同意了。接着就是为期两天的试工，在里面根据主管意见写不同主题的文章等，以及考验一些基本的软件操作。\n\n很顺利，我通过了考察，然后就入职了。\n\n\n# 工作之后\n\n后面是入职后工作的事情了，做些新媒体账号内容内容维护的事情及汇报，整体难度不大，都能顺利完成。\n\n这段工作中，认识了几位同龄的小伙伴，当时还比较稚嫩，相互的友谊也没有后来的复杂。\n\n12月份的时候，因为当时眼看着工作量越来越大，任务越来越难完成，涨工资没盼头，重复性的工作能力提升也有限。 让我十分苦恼煎熬，我不甘心一直这样！所以我选择离职了\n\n拿离职证明那天，我还记得办公室里那位漂亮的hr小姐姐跟我聊了好一会儿，跟我说她的想法，她的经历，劝我不要冲动，慎重做选择，我很感激她。事实上她应该也就比我大几岁，平时我们也没什么多的来往，只是有时见面遇到会打打招呼，而她还能认得我并乐于我分享一些很纯粹的东西。只是可惜后来我们再没遇到了，我也再没遇到像她那般的人。\n\n回首记忆里的2018，谈不上终生难忘，却有着特殊的意义，就写到这里吧。',charsets:{cjk:!0}},{title:"Mysql的一些常用函数",frontmatter:{title:"Mysql的一些常用函数",date:"2023-06-20T19:47:33.000Z",permalink:"/pages/aa966f/",categories:["数据库","Mysql"],tags:["Mysql"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/01.Mysql/02.Mysql%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0.html",relativePath:"数据库/01.Mysql/02.Mysql的一些常用函数.md",key:"v-44f8477a",path:"/pages/aa966f/",headers:[{level:2,title:"MySQL 常用函数",slug:"mysql-常用函数",normalizedTitle:"mysql 常用函数",charIndex:2},{level:3,title:"字符串函数",slug:"字符串函数",normalizedTitle:"字符串函数",charIndex:17},{level:3,title:"日期函数",slug:"日期函数",normalizedTitle:"日期函数",charIndex:400},{level:3,title:"聚合函数",slug:"聚合函数",normalizedTitle:"聚合函数",charIndex:1379},{level:3,title:"数学函数",slug:"数学函数",normalizedTitle:"数学函数",charIndex:1499}],lastUpdated:"2023/12/6 21:25:25",lastUpdatedTimestamp:1701869125e3,headersStr:"MySQL 常用函数 字符串函数 日期函数 聚合函数 数学函数",content:"# MySQL 常用函数\n\n\n# 字符串函数\n\n函数名称        作 用\nLENGTH      计算字符串长度函数，返回字符串的字节长度\nCONCAT      合并字符串函数，返回结果为连接参数产生的字符串，参数可以使一个或多个\nINSERT      替换字符串函数\nLOWER       将字符串中的字母转换为小写\nUPPER       将字符串中的字母转换为大写\nLEFT        从左侧字截取符串，返回字符串左边的若干个字符\nRIGHT       从右侧字截取符串，返回字符串右边的若干个字符\nTRIM        删除字符串左右两侧的空格\nREPLACE     字符串替换函数，返回替换后的新字符串\nSUBSTRING   截取字符串，返回从指定位置开始的指定长度的字符换\nREVERSE     字符串反转（逆序）函数，返回与原始字符串顺序相反的字符串\n\n\n# 日期函数\n\n函数名称                     作 用\nCURDATE 和 CURRENT_DATE   两个函数作用相同，返回当前系统的日期值\nCURTIME 和 CURRENT_TIME   两个函数作用相同，返回当前系统的时间值\nNOW 和 SYSDATE            两个函数作用相同，返回当前系统的日期和时间值\nMONTH                    获取指定日期中的月份\nMONTHNAME                获取指定日期中的月份英文名称\nDAYNAME                  获取指定曰期对应的星期几的英文名称\nDAYOFWEEK                获取指定日期对应的一周的索引位置值\nWEEK                     获取指定日期是一年中的第几周，返回值的范围是否为 0〜52 或 1〜53\nDAYOFYEAR                获取指定曰期是一年中的第几天，返回值范围是 1~366\nDAYOFMONTH               获取指定日期是一个月中是第几天，返回值范围是 1~31\nYEAR                     获取年份，返回值范围是 1970〜2069\nTIME_TO_SEC              将时间参数转换为秒数\nSEC_TO_TIME              将秒数转换为时间，与 TIME_TO_SEC 互为反函数\nDATE_ADD 和 ADDDATE       两个函数功能相同，都是向日期添加指定的时间间隔\nDATE_SUB 和 SUBDATE       两个函数功能相同，都是向日期减去指定的时间间隔\nADDTIME                  时间加法运算，在原始时间上添加指定的时间\nSUBTIME                  时间减法运算，在原始时间上减去指定的时间\nDATEDIFF                 获取两个日期之间间隔，返回参数 1 减去参数 2 的值\nDATE_FORMAT              格式化指定的日期，根据参数返回指定格式的值\nWEEKDAY                  获取指定日期在一周内的对应的工作日索引\n\n\n# 聚合函数\n\n函数名称    作用\nMAX     查询指定列的最大值\nMIN     查询指定列的最小值\nCOUNT   统计查询结果的行数\nSUM     求和，返回指定列的总和\nAVG     求平均值，返回指定列数据的平均值\n\n\n# 数学函数\n\n函数名称             作 用\nABS              求绝对值\nSQRT             求二次方根\nMOD              求余数\nCEIL 和 CEILING   两个函数功能相同，都是返回不小于参数的最小整数，即向上取整\nFLOOR            向下取整，返回值转化为一个 BIGINT\nRAND             生成一个 0~1 之间的随机数，传入整数参数是，用来产生重复序列\nROUND            对所传参数进行四舍五入\nSIGN             返回参数的符号\nPOW 和 POWER      两个函数的功能相同，都是所传参数的次方的结果值\nSIN              求正弦值\nASIN             求反正弦值，与函数 SIN 互为反函数\nCOS              求余弦值\nACOS             求反余弦值，与函数 COS 互为反函数\nTAN              求正切值\nATAN             求反正切值，与函数 TAN 互为反函数",normalizedContent:"# mysql 常用函数\n\n\n# 字符串函数\n\n函数名称        作 用\nlength      计算字符串长度函数，返回字符串的字节长度\nconcat      合并字符串函数，返回结果为连接参数产生的字符串，参数可以使一个或多个\ninsert      替换字符串函数\nlower       将字符串中的字母转换为小写\nupper       将字符串中的字母转换为大写\nleft        从左侧字截取符串，返回字符串左边的若干个字符\nright       从右侧字截取符串，返回字符串右边的若干个字符\ntrim        删除字符串左右两侧的空格\nreplace     字符串替换函数，返回替换后的新字符串\nsubstring   截取字符串，返回从指定位置开始的指定长度的字符换\nreverse     字符串反转（逆序）函数，返回与原始字符串顺序相反的字符串\n\n\n# 日期函数\n\n函数名称                     作 用\ncurdate 和 current_date   两个函数作用相同，返回当前系统的日期值\ncurtime 和 current_time   两个函数作用相同，返回当前系统的时间值\nnow 和 sysdate            两个函数作用相同，返回当前系统的日期和时间值\nmonth                    获取指定日期中的月份\nmonthname                获取指定日期中的月份英文名称\ndayname                  获取指定曰期对应的星期几的英文名称\ndayofweek                获取指定日期对应的一周的索引位置值\nweek                     获取指定日期是一年中的第几周，返回值的范围是否为 0〜52 或 1〜53\ndayofyear                获取指定曰期是一年中的第几天，返回值范围是 1~366\ndayofmonth               获取指定日期是一个月中是第几天，返回值范围是 1~31\nyear                     获取年份，返回值范围是 1970〜2069\ntime_to_sec              将时间参数转换为秒数\nsec_to_time              将秒数转换为时间，与 time_to_sec 互为反函数\ndate_add 和 adddate       两个函数功能相同，都是向日期添加指定的时间间隔\ndate_sub 和 subdate       两个函数功能相同，都是向日期减去指定的时间间隔\naddtime                  时间加法运算，在原始时间上添加指定的时间\nsubtime                  时间减法运算，在原始时间上减去指定的时间\ndatediff                 获取两个日期之间间隔，返回参数 1 减去参数 2 的值\ndate_format              格式化指定的日期，根据参数返回指定格式的值\nweekday                  获取指定日期在一周内的对应的工作日索引\n\n\n# 聚合函数\n\n函数名称    作用\nmax     查询指定列的最大值\nmin     查询指定列的最小值\ncount   统计查询结果的行数\nsum     求和，返回指定列的总和\navg     求平均值，返回指定列数据的平均值\n\n\n# 数学函数\n\n函数名称             作 用\nabs              求绝对值\nsqrt             求二次方根\nmod              求余数\nceil 和 ceiling   两个函数功能相同，都是返回不小于参数的最小整数，即向上取整\nfloor            向下取整，返回值转化为一个 bigint\nrand             生成一个 0~1 之间的随机数，传入整数参数是，用来产生重复序列\nround            对所传参数进行四舍五入\nsign             返回参数的符号\npow 和 power      两个函数的功能相同，都是所传参数的次方的结果值\nsin              求正弦值\nasin             求反正弦值，与函数 sin 互为反函数\ncos              求余弦值\nacos             求反余弦值，与函数 cos 互为反函数\ntan              求正切值\natan             求反正切值，与函数 tan 互为反函数",charsets:{cjk:!0}},{title:"Mysql基本的数据库管理和数据维护命令",frontmatter:{title:"Mysql基本的数据库管理和数据维护命令",date:"2023-06-24T14:35:44.000Z",permalink:"/pages/4e6bdd/",categories:["数据库","Mysql"],tags:["Mysql"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/01.Mysql/03.%E8%AE%B0%E5%BD%95Mysql%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C.html",relativePath:"数据库/01.Mysql/03.记录Mysql中一些常见操作.md",key:"v-6f0df28a",path:"/pages/4e6bdd/",headers:[{level:2,title:"服务管理",slug:"服务管理",normalizedTitle:"服务管理",charIndex:19},{level:2,title:"用户密码管理",slug:"用户密码管理",normalizedTitle:"用户密码管理",charIndex:99},{level:2,title:"数据库操作",slug:"数据库操作",normalizedTitle:"数据库操作",charIndex:457},{level:3,title:"字符集操作",slug:"字符集操作",normalizedTitle:"字符集操作",charIndex:467},{level:3,title:"用户、权限管理",slug:"用户、权限管理",normalizedTitle:"用户、权限管理",charIndex:864},{level:2,title:"数据维护",slug:"数据维护",normalizedTitle:"数据维护",charIndex:1371},{level:3,title:"操作表",slug:"操作表",normalizedTitle:"操作表",charIndex:1380},{level:3,title:"操作数据",slug:"操作数据",normalizedTitle:"操作数据",charIndex:1767},{level:3,title:"操作索引",slug:"操作索引",normalizedTitle:"操作索引",charIndex:2178}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"服务管理 用户密码管理 数据库操作 字符集操作 用户、权限管理 数据维护 操作表 操作数据 操作索引",content:"# Mysql数据库管理命令\n\n\n# 服务管理\n\n * 启动\n\nsystemctl  start mysqld\n\n\n1\n\n * 停止\n\nsystemctl stop mysqld\n\n\n1\n\n\n\n# 用户密码管理\n\n * 设置密码\n\n# 方式1\nmysql -uroot -ppassword -e \"set passowrd for root = passowrd('passowrd')\"\n\n# 方式2\nmysqladmin -uroot passowrd \"NEWPASSWORD\"\n\n\n1\n2\n3\n4\n5\n\n * 更改密码\n\n# 方式1\nmysqladmin -uroot passowrd oldpassowrd \"NEWPASSWORD\"\n\n# 方式2\nuse mysql;\nupdate user set passowrd = PASSWORD('newpassword') where user = 'root';\nflush privileges;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 数据库操作\n\n\n# 字符集操作\n\n * 设置字符集\n\nshow create database DB_NAME;\n\n\n1\n\n * 修改字符集\n\n# 把库表的GBK字符集修改为UTF8\nalter database demo default character set utf8;\nalter table test default character set utf8;\n\n\n1\n2\n3\n\n * 创建数据库\n\n# 创建GBK字符集的数据库demo，并查看已建库完整语句\ncreate database demo DEFAULT CHARSET GBK COLLATE gbk_chinese_ci;\n\n#查看创建库的完整语句\nshow create database demo;\n\n\n1\n2\n3\n4\n5\n\n * 删除数据库\n\n# 删除demo数据库\ndrop database demo\n\n\n\n1\n2\n3\n\n\n\n# 用户、权限管理\n\n * 创建用户并授权\n\n# 创建用户demo，使之可以管理数据库demo\ngrant all on demo.* to 'demo'@'localhost' identified by 'demo';\n\n# 授权demo用户从172.16.1.0/24访问数据库。\ngrant all on *.* to demo@'172.16.1.0/24' identified by '123456';\n\n\n1\n2\n3\n4\n5\n\n * 查看用户权限\n\n# 查看创建的用户demo拥有哪些权限\nshow grants for demo@localhost\n\n\n1\n2\n\n * 查看当前数据库里有哪些用户\n\nselect user from mysql.user;\n\n\n1\n\n * 进入demo数据库\n\nuse demo\n\n\n1\n\n * 回收权限\n\n# 收回demo用户的select权限\nrevoke select on demo.* from demo@localhost;\n\n\n1\n2\n\n * 删除用户\n\n# 删除demo用户\ndrop user demo@localhost;\n\n\n1\n2\n\n\n\n# 数据维护\n\n\n# 操作表\n\n * 创建表\n\n# 创建一innodb GBK表test，字段id int(4)和name varchar(16)\ncreate table test (\n     id int(4),\n     name varchar(16)\n     )ENGINE=innodb DEFAULT CHARSET=gbk;\n\n\n1\n2\n3\n4\n5\n\n * 查看表\n\n# 查看建表结构及表结构的SQL语句\ndesc test;\nshow create table test\\G\n\n\n1\n2\n3\n\n * 修改表字段\n\n# 在字段name前插入age字段，类型tinyint(2)\nalter table test add age tinyint(2) after id;\n\n\n1\n2\n\n * 删除表\n\n# 删除表test\ndrop table test;\n\n\n1\n2\n\n\n\n# 操作数据\n\n * 插入数据\n\n# 插入单行数据\ninsert into test values('1','demo');\n\n# 批量插入2行数据\ninsert into test values('2','民工哥'),('3','demoedu');\n\n\n1\n2\n3\n4\n5\n\n * 更新/修改数据\n\n# 把数据id等于1的名字demo更改为mgg\nupdate test set name = 'mgg' where id = '1';\n\n\n1\n2\n\n * 查询数据\n\n# 查询名字为demo的记录\nselect * from test where name = 'demo';\n\n\n1\n2\n\n * 删除数据\n\n# 删除名字为dxzh的记录\ndelete from test where name = 'dxzh';\n\n# 删除test表中的所有数据\ndelete from test;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 操作索引\n\n * 创建索引\n\n# 在手机字段上对前8个字符创建普通索引\ncreate index SJ on test(shouji(8));\n\n\n1\n2\n\n * 查看索引\n\n# 方式1\nshow index from test;\n\n# 方式2\nshow keys from test\\G   \n\n\n1\n2\n3\n4\n5\n\n * 删除索引\n\n# 删除Name，shouji列的索引\ndrop index SJ on test;\ndrop index mggindex on test;\n\n\n1\n2\n3\n",normalizedContent:"# mysql数据库管理命令\n\n\n# 服务管理\n\n * 启动\n\nsystemctl  start mysqld\n\n\n1\n\n * 停止\n\nsystemctl stop mysqld\n\n\n1\n\n\n\n# 用户密码管理\n\n * 设置密码\n\n# 方式1\nmysql -uroot -ppassword -e \"set passowrd for root = passowrd('passowrd')\"\n\n# 方式2\nmysqladmin -uroot passowrd \"newpassword\"\n\n\n1\n2\n3\n4\n5\n\n * 更改密码\n\n# 方式1\nmysqladmin -uroot passowrd oldpassowrd \"newpassword\"\n\n# 方式2\nuse mysql;\nupdate user set passowrd = password('newpassword') where user = 'root';\nflush privileges;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 数据库操作\n\n\n# 字符集操作\n\n * 设置字符集\n\nshow create database db_name;\n\n\n1\n\n * 修改字符集\n\n# 把库表的gbk字符集修改为utf8\nalter database demo default character set utf8;\nalter table test default character set utf8;\n\n\n1\n2\n3\n\n * 创建数据库\n\n# 创建gbk字符集的数据库demo，并查看已建库完整语句\ncreate database demo default charset gbk collate gbk_chinese_ci;\n\n#查看创建库的完整语句\nshow create database demo;\n\n\n1\n2\n3\n4\n5\n\n * 删除数据库\n\n# 删除demo数据库\ndrop database demo\n\n\n\n1\n2\n3\n\n\n\n# 用户、权限管理\n\n * 创建用户并授权\n\n# 创建用户demo，使之可以管理数据库demo\ngrant all on demo.* to 'demo'@'localhost' identified by 'demo';\n\n# 授权demo用户从172.16.1.0/24访问数据库。\ngrant all on *.* to demo@'172.16.1.0/24' identified by '123456';\n\n\n1\n2\n3\n4\n5\n\n * 查看用户权限\n\n# 查看创建的用户demo拥有哪些权限\nshow grants for demo@localhost\n\n\n1\n2\n\n * 查看当前数据库里有哪些用户\n\nselect user from mysql.user;\n\n\n1\n\n * 进入demo数据库\n\nuse demo\n\n\n1\n\n * 回收权限\n\n# 收回demo用户的select权限\nrevoke select on demo.* from demo@localhost;\n\n\n1\n2\n\n * 删除用户\n\n# 删除demo用户\ndrop user demo@localhost;\n\n\n1\n2\n\n\n\n# 数据维护\n\n\n# 操作表\n\n * 创建表\n\n# 创建一innodb gbk表test，字段id int(4)和name varchar(16)\ncreate table test (\n     id int(4),\n     name varchar(16)\n     )engine=innodb default charset=gbk;\n\n\n1\n2\n3\n4\n5\n\n * 查看表\n\n# 查看建表结构及表结构的sql语句\ndesc test;\nshow create table test\\g\n\n\n1\n2\n3\n\n * 修改表字段\n\n# 在字段name前插入age字段，类型tinyint(2)\nalter table test add age tinyint(2) after id;\n\n\n1\n2\n\n * 删除表\n\n# 删除表test\ndrop table test;\n\n\n1\n2\n\n\n\n# 操作数据\n\n * 插入数据\n\n# 插入单行数据\ninsert into test values('1','demo');\n\n# 批量插入2行数据\ninsert into test values('2','民工哥'),('3','demoedu');\n\n\n1\n2\n3\n4\n5\n\n * 更新/修改数据\n\n# 把数据id等于1的名字demo更改为mgg\nupdate test set name = 'mgg' where id = '1';\n\n\n1\n2\n\n * 查询数据\n\n# 查询名字为demo的记录\nselect * from test where name = 'demo';\n\n\n1\n2\n\n * 删除数据\n\n# 删除名字为dxzh的记录\ndelete from test where name = 'dxzh';\n\n# 删除test表中的所有数据\ndelete from test;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 操作索引\n\n * 创建索引\n\n# 在手机字段上对前8个字符创建普通索引\ncreate index sj on test(shouji(8));\n\n\n1\n2\n\n * 查看索引\n\n# 方式1\nshow index from test;\n\n# 方式2\nshow keys from test\\g   \n\n\n1\n2\n3\n4\n5\n\n * 删除索引\n\n# 删除name，shouji列的索引\ndrop index sj on test;\ndrop index mggindex on test;\n\n\n1\n2\n3\n",charsets:{cjk:!0}},{title:"用Docker安装oracle11g",frontmatter:{title:"用Docker安装oracle11g",date:"2022-04-27T03:05:12.000Z",permalink:"/pages/dc4c36/",categories:["数据库","Oracle"],tags:["Docker","Oracle","服务搭建"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/02.Oracle/01.%E7%94%A8Docker%E5%AE%89%E8%A3%85oracle11g.html",relativePath:"数据库/02.Oracle/01.用Docker安装oracle11g.md",key:"v-0774223e",path:"/pages/dc4c36/",headers:[{level:2,title:"Docker安装oracle11g",slug:"docker安装oracle11g",normalizedTitle:"docker安装oracle11g",charIndex:2},{level:3,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:24},{level:3,title:"安装、运行",slug:"安装、运行",normalizedTitle:"安装、运行",charIndex:348},{level:3,title:"安装后管理",slug:"安装后管理",normalizedTitle:"安装后管理",charIndex:724},{level:3,title:"docker-oracle容器信息",slug:"docker-oracle容器信息",normalizedTitle:"docker-oracle容器信息",charIndex:1060}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"Docker安装oracle11g 准备工作 安装、运行 安装后管理 docker-oracle容器信息",content:"# Docker安装oracle11g\n\n\n# 准备工作\n\n 1. 拉取镜像(jaspeen/oracle-11g)\n\ndocker pull jaspeen/oracle-11g\n\n\n1\n\n 2. 创建一个目录，用来放置oracle压缩包\n\nmkdir install\ncd install\nmkdir database\n\n#查看当前目录\n[root@localhost database]# pwd\n/install/database\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 将下载的oracle-11g安装压缩文件解压到/install/database\n\n#解压zip\nunzip -d /install/database oracle***.zip\n\n\n\n1\n2\n3\n\n\n\n# 安装、运行\n\n 1. 通过镜像创建容器服务\n\ndocker run --privileged --name oracle11g -p 1521:1521 -v <install_folder>:/install jaspeen/oracle-11g\n\n#示例\ndocker run --privileged --name oracle11g -p 1521:1521 -v /install/database:/install jaspeen/oracle-11g\n\n# 最好在此步骤挂载表空间的磁盘目录，否则容器创建后再挂载操作会更加繁琐\n\n\n1\n2\n3\n4\n5\n6\n\n\n 2. 查看结果：docker ps\n\n 3. 如果创建成功，则执行下面命令：\n\ndocker exec -it oracle11g /bin/bash\n\n\n\n1\n2\n\n\n\n# 安装后管理\n\n * 在容器里面进行oracle的相关管理\n\n#默认实例为orcl,有sys和system用户\n#首次使用需要修改sys及system 密码，才能使用对应的用户访问\n\n# 1.切换至oracle用户\nsu - oracle\n\n# 2. 输入命令(以DBA用户登录oracle)\nsqlplus / as sysdba\n\n# 3.查看dba所管理用户列表(可忽略)\nselect * from all_users;\n\n# 4.修改用户口令\nalter user USER identified by 新密码;\n\n# 5.修改后可使用plsql等客户端尝试登陆\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# docker-oracle容器信息\n\n 1. IP端口&&实例名\n\n * ip:宿主机ip\n * instance: orcl\n\n 2. 默认用户名密码\n\n * system && system\n * sys && sys",normalizedContent:"# docker安装oracle11g\n\n\n# 准备工作\n\n 1. 拉取镜像(jaspeen/oracle-11g)\n\ndocker pull jaspeen/oracle-11g\n\n\n1\n\n 2. 创建一个目录，用来放置oracle压缩包\n\nmkdir install\ncd install\nmkdir database\n\n#查看当前目录\n[root@localhost database]# pwd\n/install/database\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 将下载的oracle-11g安装压缩文件解压到/install/database\n\n#解压zip\nunzip -d /install/database oracle***.zip\n\n\n\n1\n2\n3\n\n\n\n# 安装、运行\n\n 1. 通过镜像创建容器服务\n\ndocker run --privileged --name oracle11g -p 1521:1521 -v <install_folder>:/install jaspeen/oracle-11g\n\n#示例\ndocker run --privileged --name oracle11g -p 1521:1521 -v /install/database:/install jaspeen/oracle-11g\n\n# 最好在此步骤挂载表空间的磁盘目录，否则容器创建后再挂载操作会更加繁琐\n\n\n1\n2\n3\n4\n5\n6\n\n\n 2. 查看结果：docker ps\n\n 3. 如果创建成功，则执行下面命令：\n\ndocker exec -it oracle11g /bin/bash\n\n\n\n1\n2\n\n\n\n# 安装后管理\n\n * 在容器里面进行oracle的相关管理\n\n#默认实例为orcl,有sys和system用户\n#首次使用需要修改sys及system 密码，才能使用对应的用户访问\n\n# 1.切换至oracle用户\nsu - oracle\n\n# 2. 输入命令(以dba用户登录oracle)\nsqlplus / as sysdba\n\n# 3.查看dba所管理用户列表(可忽略)\nselect * from all_users;\n\n# 4.修改用户口令\nalter user user identified by 新密码;\n\n# 5.修改后可使用plsql等客户端尝试登陆\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# docker-oracle容器信息\n\n 1. ip端口&&实例名\n\n * ip:宿主机ip\n * instance: orcl\n\n 2. 默认用户名密码\n\n * system && system\n * sys && sys",charsets:{cjk:!0}},{title:"Oracle 存储过程的基本语法及其使用",frontmatter:{title:"Oracle 存储过程的基本语法及其使用",date:"2022-08-04T06:06:20.000Z",permalink:"/pages/12246b/",categories:["数据库","Oracle"],tags:["Oracle"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/02.Oracle/02.Oracle%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8.html",relativePath:"数据库/02.Oracle/02.Oracle 存储过程基本语法及其使用.md",key:"v-7579abb8",path:"/pages/12246b/",headers:[{level:2,title:"存储过程",slug:"存储过程",normalizedTitle:"存储过程",charIndex:2},{level:3,title:"概念&&作用",slug:"概念-作用",normalizedTitle:"概念&amp;&amp;作用",charIndex:null},{level:3,title:"特点",slug:"特点",normalizedTitle:"特点",charIndex:157},{level:3,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:257},{level:3,title:"变量",slug:"变量",normalizedTitle:"变量",charIndex:544},{level:4,title:"变量分类",slug:"变量分类",normalizedTitle:"变量分类",charIndex:550},{level:4,title:"变量赋值",slug:"变量赋值",normalizedTitle:"变量赋值",charIndex:883},{level:3,title:"参数",slug:"参数",normalizedTitle:"参数",charIndex:115},{level:3,title:"条件语句",slug:"条件语句",normalizedTitle:"条件语句",charIndex:2227},{level:3,title:"游标",slug:"游标",normalizedTitle:"游标",charIndex:3654}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"存储过程 概念&&作用 特点 基本使用 变量 变量分类 变量赋值 参数 条件语句 游标",content:"# 存储过程\n\n\n# 概念&&作用\n\n> 存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，存储在数据库中，经过第一次编译后调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。存储过程是数据库中的一个重要对象。\n\n\n# 特点\n\n存储过程具备以下特点：\n\n * 能完成较复杂的判断和运算\n * 可编程行强，灵活\n * SQL编程的代码可重复使用\n * 执行的速度相对快一些\n * 减少网络之间的数据传输，节省开销\n\n\n# 基本使用\n\n 1. 创建存储过程\n    \n     create procedure 名称 as\n     begin\n     ........\n     end; \n    \n    \n    1\n    2\n    3\n    4\n    \n\n 2. 控制台打印\n    \n    dbms_output.put_line('helloworld');\n    \n    \n    1\n    \n\n 3. 调用存储过程\n    \n    # 以下 xxx 即存储过程名称\n    call xxxx()\n    \n    \n    1\n    2\n    \n\n\n# 变量\n\n# 变量分类\n\n1、普通数据类型（char,varchar2,date,number,boolean,long)\n2、特殊变量类型（引用型变量，记录型变量）\n引用型变量，变量的数据类型取决表中的数据类型；记录型变量，变量不是接受一个值，是一行值。\n\n声明变量语法:变量名 变量类型（变量长度）\n\n    ---普通变量         v_name     varcar2(20);\n    ---引用型变量       v_income   emp_test.income%TYPE;\n    ---记录型变量       v_emp      emp_test%ROWTYPE  //表示变量v_emp存的是表中emp_test一整行的数据\n\n\n1\n2\n3\n\n\n# 变量赋值\n\n变量赋值的方式有两种：\n1.直接赋值语句 :=\n2.语句复制，使用select……into……赋值：（语法select值into变量）\n\n(1)普通类型示例1\n\n create or replace procedure select_emp as\n --定义变量my_income\n my_income varchar(20);\n --声明变量直接赋值\n my_income2 int  := 3000; \n\n begin\n -- 使用select语句给变量赋值，将emp_test 表中worker_no = '200010'的income赋值给变量my_income\n select  income into my_income from emp_test where worker_no = '200010';\n\n select income,department into my_income,my_depart from emp_test where worker_no='200010';\n\n --打印输出变量my_income值\n dbms_output.put_line('工资'||my_income);\n end;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n（2）引用型示例\n\n--工资,引用型变量\nmy_income emp_test.income%TYPE;\n--部门,引用型变量\nmy_depart emp_test.department%TYPE;\n    \n--赋值\nselect income,department into my_income,my_depart from emp_test where worker_no='200010';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n（3）记录型示例\n\n--定义记录型变量，打印工号为200010员工的个人信息，包括：工资、部门\ncreate or replace procedure test3 as\n---v_emp记录型变量，接受表中的一整行记录\nv_emp emp_test%ROWTYPE;\nbegin\n  select * into v_emp from emp_test where worker_no='200010';\n  dbms_output.put_line( '工资'||v_emp.income||'部门'||v_emp.department);  \nend ;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数\n\n 1. 基本语法\n\ncreate procedure 名称(参数名 [IN|OUT|INOUT] 参数数据类型 )\nbegin\n.........\nend;\n\n\n1\n2\n3\n4\n\n\n 2. 参数说明\n    \n    * IN\n    \n    （1）传入参数，类型为in,表示该参数的值必须在调用存储过程时指定，如果不显示指定为in,那么默认就是in类型。\n    （2）IN类型参数一般只用于传入，在调用过程中一般不作为修改和返回\n    \n    * OUT\n    * INOUT\n\n\n# 条件语句\n\n 1. 基本语法\n    * 单条件判断\n    \n    if() then...else...end if;\n    \n    \n    1\n    \n    * 多条件判断\n    \n    if()   then...\n    elsif()   then...\n    else ...\n    end if;\n    \n    \n    1\n    2\n    3\n    4\n    \n 2. 循环\n    \n    * while 循环\n      （1）基本语法\n      \n      while() loop\n      ....\n      ....\n      end loop;\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      \n      \n      （2）示例\n      \n      > 使用循环语句，向表emp_test中插入十条数据，仅给工号字段插入数据，其它字段不插入数据，插入工号为12001、12002、12003、12004、12005至120010\n      \n      create or replace procedure test_inset as\n      my_worker int;\n      begin\n      my_worker :=0;\n      while my_worker<10 loop\n         my_worker :=my_worker+1;\n         insert into emp_test(worker_no) values('1200'||to_char(my_worker));\n         commit;\n      end loop;\n      end;\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * for 循环\n      （1）基本语法\n      \n      ```\n      for （） in （）\n      loop\n         ……\n      end loop;\n      ```\n      \n      \n      （2）示例 :使用FOR循环，打印输出0至5的数字\n      \n      ```\n      create or replace procedure for_test is\n      i number;\n      begin\n         i:=0;\n         for i in 1..5 loop\n            dbms_output.put_line(i);\n         end loop;\n      end ;\n      ```\n      \n    \n    * loop\n      （1）基本语法\n      \n      ```\n      LOOP\n         Exit When(退出条件);\n         ……\n      END LOOP\n      ```\n      \n\n\n# 游标\n\n 1. 基本概念\n    用于临时存储一个查询返回的多行数据,通过遍历游标，可以逐行访问处理该结果集的数据 游标的使用方式：声明——>打开——>读取——>关闭\n\n 2. 基本语法\n\n//游标声明：\ncursor 游标名[(参数列表)] is 查询语句；\n//游标打开：\nopen 游标名；\n//游标取值：\nfetch 游标名 into 变量列表；\n//游标关闭：\nclose 游标名；\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 示例:编写存储过程，使用游标，把emp_test表中20号部门的员工工号逐一打印\n\ncreate or replace procedure cur_test as\nmy_workerno varchar(20);\n---游标声明：\ncursor cur_worker is select  worker_no from emp_test where department='20号部门';\n\nbegin\n--游标打开：\nopen cur_worker;\nLOOP\n  ---获取游标中的数据\n  fetch cur_worker into my_workerno;--提取cursor,提取结果集中的记录\n  \n  --退出循环条件\n  Exit When cur_worker%notfound;\n  dbms_output.put_line('my_workerno:'||my_workerno);\n  \nend loop;\nclose cur_worker;\n\nend;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",normalizedContent:"# 存储过程\n\n\n# 概念&&作用\n\n> 存储过程（stored procedure）是在大型数据库系统中，一组为了完成特定功能的sql 语句集，存储在数据库中，经过第一次编译后调用不需要再次编译，用户通过指定存储过程的名字并给出参数（如果该存储过程带有参数）来执行它。存储过程是数据库中的一个重要对象。\n\n\n# 特点\n\n存储过程具备以下特点：\n\n * 能完成较复杂的判断和运算\n * 可编程行强，灵活\n * sql编程的代码可重复使用\n * 执行的速度相对快一些\n * 减少网络之间的数据传输，节省开销\n\n\n# 基本使用\n\n 1. 创建存储过程\n    \n     create procedure 名称 as\n     begin\n     ........\n     end; \n    \n    \n    1\n    2\n    3\n    4\n    \n\n 2. 控制台打印\n    \n    dbms_output.put_line('helloworld');\n    \n    \n    1\n    \n\n 3. 调用存储过程\n    \n    # 以下 xxx 即存储过程名称\n    call xxxx()\n    \n    \n    1\n    2\n    \n\n\n# 变量\n\n# 变量分类\n\n1、普通数据类型（char,varchar2,date,number,boolean,long)\n2、特殊变量类型（引用型变量，记录型变量）\n引用型变量，变量的数据类型取决表中的数据类型；记录型变量，变量不是接受一个值，是一行值。\n\n声明变量语法:变量名 变量类型（变量长度）\n\n    ---普通变量         v_name     varcar2(20);\n    ---引用型变量       v_income   emp_test.income%type;\n    ---记录型变量       v_emp      emp_test%rowtype  //表示变量v_emp存的是表中emp_test一整行的数据\n\n\n1\n2\n3\n\n\n# 变量赋值\n\n变量赋值的方式有两种：\n1.直接赋值语句 :=\n2.语句复制，使用select……into……赋值：（语法select值into变量）\n\n(1)普通类型示例1\n\n create or replace procedure select_emp as\n --定义变量my_income\n my_income varchar(20);\n --声明变量直接赋值\n my_income2 int  := 3000; \n\n begin\n -- 使用select语句给变量赋值，将emp_test 表中worker_no = '200010'的income赋值给变量my_income\n select  income into my_income from emp_test where worker_no = '200010';\n\n select income,department into my_income,my_depart from emp_test where worker_no='200010';\n\n --打印输出变量my_income值\n dbms_output.put_line('工资'||my_income);\n end;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n（2）引用型示例\n\n--工资,引用型变量\nmy_income emp_test.income%type;\n--部门,引用型变量\nmy_depart emp_test.department%type;\n    \n--赋值\nselect income,department into my_income,my_depart from emp_test where worker_no='200010';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n（3）记录型示例\n\n--定义记录型变量，打印工号为200010员工的个人信息，包括：工资、部门\ncreate or replace procedure test3 as\n---v_emp记录型变量，接受表中的一整行记录\nv_emp emp_test%rowtype;\nbegin\n  select * into v_emp from emp_test where worker_no='200010';\n  dbms_output.put_line( '工资'||v_emp.income||'部门'||v_emp.department);  \nend ;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 参数\n\n 1. 基本语法\n\ncreate procedure 名称(参数名 [in|out|inout] 参数数据类型 )\nbegin\n.........\nend;\n\n\n1\n2\n3\n4\n\n\n 2. 参数说明\n    \n    * in\n    \n    （1）传入参数，类型为in,表示该参数的值必须在调用存储过程时指定，如果不显示指定为in,那么默认就是in类型。\n    （2）in类型参数一般只用于传入，在调用过程中一般不作为修改和返回\n    \n    * out\n    * inout\n\n\n# 条件语句\n\n 1. 基本语法\n    * 单条件判断\n    \n    if() then...else...end if;\n    \n    \n    1\n    \n    * 多条件判断\n    \n    if()   then...\n    elsif()   then...\n    else ...\n    end if;\n    \n    \n    1\n    2\n    3\n    4\n    \n 2. 循环\n    \n    * while 循环\n      （1）基本语法\n      \n      while() loop\n      ....\n      ....\n      end loop;\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      \n      \n      （2）示例\n      \n      > 使用循环语句，向表emp_test中插入十条数据，仅给工号字段插入数据，其它字段不插入数据，插入工号为12001、12002、12003、12004、12005至120010\n      \n      create or replace procedure test_inset as\n      my_worker int;\n      begin\n      my_worker :=0;\n      while my_worker<10 loop\n         my_worker :=my_worker+1;\n         insert into emp_test(worker_no) values('1200'||to_char(my_worker));\n         commit;\n      end loop;\n      end;\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * for 循环\n      （1）基本语法\n      \n      ```\n      for （） in （）\n      loop\n         ……\n      end loop;\n      ```\n      \n      \n      （2）示例 :使用for循环，打印输出0至5的数字\n      \n      ```\n      create or replace procedure for_test is\n      i number;\n      begin\n         i:=0;\n         for i in 1..5 loop\n            dbms_output.put_line(i);\n         end loop;\n      end ;\n      ```\n      \n    \n    * loop\n      （1）基本语法\n      \n      ```\n      loop\n         exit when(退出条件);\n         ……\n      end loop\n      ```\n      \n\n\n# 游标\n\n 1. 基本概念\n    用于临时存储一个查询返回的多行数据,通过遍历游标，可以逐行访问处理该结果集的数据 游标的使用方式：声明——>打开——>读取——>关闭\n\n 2. 基本语法\n\n//游标声明：\ncursor 游标名[(参数列表)] is 查询语句；\n//游标打开：\nopen 游标名；\n//游标取值：\nfetch 游标名 into 变量列表；\n//游标关闭：\nclose 游标名；\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 示例:编写存储过程，使用游标，把emp_test表中20号部门的员工工号逐一打印\n\ncreate or replace procedure cur_test as\nmy_workerno varchar(20);\n---游标声明：\ncursor cur_worker is select  worker_no from emp_test where department='20号部门';\n\nbegin\n--游标打开：\nopen cur_worker;\nloop\n  ---获取游标中的数据\n  fetch cur_worker into my_workerno;--提取cursor,提取结果集中的记录\n  \n  --退出循环条件\n  exit when cur_worker%notfound;\n  dbms_output.put_line('my_workerno:'||my_workerno);\n  \nend loop;\nclose cur_worker;\n\nend;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n",charsets:{cjk:!0}},{title:"oracle数据库的逻辑备份与恢复",frontmatter:{title:"oracle数据库的逻辑备份与恢复",date:"2022-10-21T05:43:19.000Z",permalink:"/pages/af984e/",categories:["数据库","Oracle"],tags:["Oracle"],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/02.Oracle/03.oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E9%80%BB%E8%BE%91%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.html",relativePath:"数据库/02.Oracle/03.oracle数据库的逻辑备份与恢复.md",key:"v-0087f3a4",path:"/pages/af984e/",headers:[{level:2,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:24},{level:2,title:"备份命令的使用",slug:"备份命令的使用",normalizedTitle:"备份命令的使用",charIndex:291},{level:3,title:"导出(exp 命令)",slug:"导出-exp-命令",normalizedTitle:"导出(exp 命令)",charIndex:303},{level:4,title:"参数作用说明",slug:"参数作用说明",normalizedTitle:"参数作用说明",charIndex:1441},{level:3,title:"导入(imp命令)",slug:"导入-imp命令",normalizedTitle:"导入(imp命令)",charIndex:1828},{level:4,title:"参数作用说明",slug:"参数作用说明-2",normalizedTitle:"参数作用说明",charIndex:1441}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"引言 备份命令的使用 导出(exp 命令) 参数作用说明 导入(imp命令) 参数作用说明",content:"# oracle数据库的逻辑备份与恢复\n\n\n# 引言\n\n * 为什么要备份？\n\n随着计算机的不断发展，数据安全显得愈发重要。一旦造成数据丢失，将会付出巨大的工作量去弥补数据，也可能因此造成不可挽回的损失。因此，无论是数据库管理员或是与数据交互的维护人员，都必须要学习备份知识，做好数据备份工作，以防备可能出现的数据丢失/损坏风险。\n\n * 何为逻辑备份？\n\n> 逻辑备份是指从数据库中导出数据并写入一个输出文件。逻辑备份只能用来对数据库进行逻辑恢复，即数据导入，而不能按数据库原来的存储特征进行物理恢复。逻辑备份可以使用exp命令来完成，逻辑导入可以使用imp命令来完成。\n\n\n# 备份命令的使用\n\n\n# 导出(exp 命令)\n\n 0. 查看用户表信息 select * from tab;\n\n 1. 导出表数据\n\n## 命令示例\nexp dxzh/duxingzhe@192.168.0.200:1521/orcl owner=dxzh file=x:\\database\\Oracle\\\\data\\\\exp\\\\1019\\\\userinfo.dmp log=X:\\database\\Oracle\\\\logs\\\\exp\\\\1019\\\\exp.log\n\n## 示例中scott表示用户名,tiger表示用户口令\n\n#导出一张表中的数据\nexp scott/tiger tables=emp file=/home/oracle/bak/emp.dmp buffer=1000000\n\n#导出多张表中的数据\nexp scott/tiger tables=emp,dept file=/home/oracle/bak/emp_dept.dmp buffer=1000000\n\n#导出emp表中的10部门数据\nexp scott/tiger tables=emp query=\\'where deptno=10\\' file=/home/oracle/bak/emp10.dmp buffer=1000000\n\n#导出emp表中的10部门数据\nexp scott/tiger tables=emp query=\\\"where ename like \\'%M%\\'\\\" file=/home/oracle/bak/emp_ename.dmp buffer=1000000\n\n#导出表结构\nexp scott/tiger tables=emp,dept,salgrade rows=N file=/home/oracle/bak/scott_stru.dmp\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n 2. 导出用户数据\n\n#scott用户导出自己的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#system用户导出其它用户的数据\nexp system/system owner=scott,jack file=/home/oracle/bak/user.dmp buffer=1048576\n\n#导出整个数据库中的数据\nexp system/system full=y file=/home/oracle/bak/full.dmp buffer=1048576\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 参数作用说明\n\n * FULL\n\n> 导出整个数据库，只有拥有exp_full_database角色的用户或者特权用户如sys，system等才能进行全库导出.full=y 或full=n\n\n * BUFFER\n\n> 指定数据缓冲区大小，单位为字节，不能写成buffer=1m的形式。(buffer=n #n为字节数)\n\n * OWNER\n\n> 需要导出的用户，如果需要导出多个用户可以使用逗号隔开。(说明：普通用户只能导出自己的数据，不能导出其它用户的数据。只有system用户才能导出其它用户的数据。)\n\n * FILE\n\n> 指定输出文件\n\n * TABLES\n\n> 指定需要导出的表，如果需要导出多个表可以使用逗号隔开。\n\n * ROWS\n\n> 指定导出后的表是否带数据（取值为N或Y，默认为Y）\n\n * QUERY\n\n> 导出表时指定条件以导出部分数据。\n\n\n# 导入(imp命令)\n\n * 导入命令及其示例\n\n一、导入e01和e02表\nimp scott/tiger tables=e01,e02 file=/home/oracle/bak/e01_02.dmp buffer=1048576\n\n二、通过数据导入追加数据\n#导出e02表中的10部门员工\nexp scott/tiger tables=e02 query=\\'where deptno=10\\' file=/home/oracle/bak/e02_10.dmp buffer=1048576\n\n#把导出的10部门的员工追加到e02表中\nimp scott/tiger tables=e02 ignore=y file=/home/oracle/bak/e02_10.dmp buffer=1048576\n\n三、导出并恢复一个用户下的所有数据\n#导出scott用户下的所有数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#导入scott用户数据\nimp scott/tiger full=y file=/home/oracle/bak/scott.dmp buffer=1048576\n\n四、导出并恢复多个用户的数据（此操作必须有system用户完成）\n#导出scott用户和jack用户的数据\nexp system/system owner=scott,jack file=/home/oracle/bak/scott_jack.dmp buffer=1048576\n\n#导入scott用户和jack用户的数据\nimp system/system full=y file=/home/oracle/bak/scott_jack.dmp buffer=1048576\n\n五、把一个用户的所有数据导入到另一个用户\n#导出scott用户的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#把scott用户的数据导入到jack用户\nimp system/system fromuser=scott touser=jack file=/home/oracle/bak/scott.dmp buffer=1048576\n\n六、把一个用户的部分数据导入到另一个用户\n#导出scott用户的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#把scott用户的e01和e02表导入到jack用户\nimp system/system fromuser=scott touser=jack tables=e01,e02 file=/home/oracle/bak/scott.dmp buffer=1048576\n\n七、恢复整个数据库中的数据\nimp system/system full=y file=/home/oracle/bak/full.dmp buffer=1048576\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n# 参数作用说明\n\n> imp命令的参数和exp命令大部分是相同的，USERID、TABLES、OWNER、FILE、BUFFER等参数的含义和exp命令完全相同。\n\n * 只导入数据\n\n> imp有一个参数，data_only， 默认为N,需要导入数据时添加data_only=y 即可\n\n * ignore参数\n\n> (1)oracle imp 导入可以使用 ignore=y 参数进行覆盖数据库。如果不使用 ignore=y 参数在进行imp 导入时，就会对已经存在的表就不会进行导入，如果加上ignore=y 参数就会对已经存在的表中没有的记录进行更新，但对已经存在记录不会进行覆盖修改。\n\n> (2)在恢复数据的过程中，当导入某个表时，如果该表已经存在，则根据ignore参数的设置来决定如何操作。 若ignore=y，不执行CREATE TABLE语句，直接将数据插入到表中，如果插入的记录违背了约束条件，比如主键约束，唯一索引等，则出错的记录不会插入，但合法的记录会添加到表中。 若ignore=n，不执行CREATE TABLE语句，同时也不会将数据插入到表中，而是忽略该表的错误，继续导入下一个表。",normalizedContent:"# oracle数据库的逻辑备份与恢复\n\n\n# 引言\n\n * 为什么要备份？\n\n随着计算机的不断发展，数据安全显得愈发重要。一旦造成数据丢失，将会付出巨大的工作量去弥补数据，也可能因此造成不可挽回的损失。因此，无论是数据库管理员或是与数据交互的维护人员，都必须要学习备份知识，做好数据备份工作，以防备可能出现的数据丢失/损坏风险。\n\n * 何为逻辑备份？\n\n> 逻辑备份是指从数据库中导出数据并写入一个输出文件。逻辑备份只能用来对数据库进行逻辑恢复，即数据导入，而不能按数据库原来的存储特征进行物理恢复。逻辑备份可以使用exp命令来完成，逻辑导入可以使用imp命令来完成。\n\n\n# 备份命令的使用\n\n\n# 导出(exp 命令)\n\n 0. 查看用户表信息 select * from tab;\n\n 1. 导出表数据\n\n## 命令示例\nexp dxzh/duxingzhe@192.168.0.200:1521/orcl owner=dxzh file=x:\\database\\oracle\\\\data\\\\exp\\\\1019\\\\userinfo.dmp log=x:\\database\\oracle\\\\logs\\\\exp\\\\1019\\\\exp.log\n\n## 示例中scott表示用户名,tiger表示用户口令\n\n#导出一张表中的数据\nexp scott/tiger tables=emp file=/home/oracle/bak/emp.dmp buffer=1000000\n\n#导出多张表中的数据\nexp scott/tiger tables=emp,dept file=/home/oracle/bak/emp_dept.dmp buffer=1000000\n\n#导出emp表中的10部门数据\nexp scott/tiger tables=emp query=\\'where deptno=10\\' file=/home/oracle/bak/emp10.dmp buffer=1000000\n\n#导出emp表中的10部门数据\nexp scott/tiger tables=emp query=\\\"where ename like \\'%m%\\'\\\" file=/home/oracle/bak/emp_ename.dmp buffer=1000000\n\n#导出表结构\nexp scott/tiger tables=emp,dept,salgrade rows=n file=/home/oracle/bak/scott_stru.dmp\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n 2. 导出用户数据\n\n#scott用户导出自己的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#system用户导出其它用户的数据\nexp system/system owner=scott,jack file=/home/oracle/bak/user.dmp buffer=1048576\n\n#导出整个数据库中的数据\nexp system/system full=y file=/home/oracle/bak/full.dmp buffer=1048576\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 参数作用说明\n\n * full\n\n> 导出整个数据库，只有拥有exp_full_database角色的用户或者特权用户如sys，system等才能进行全库导出.full=y 或full=n\n\n * buffer\n\n> 指定数据缓冲区大小，单位为字节，不能写成buffer=1m的形式。(buffer=n #n为字节数)\n\n * owner\n\n> 需要导出的用户，如果需要导出多个用户可以使用逗号隔开。(说明：普通用户只能导出自己的数据，不能导出其它用户的数据。只有system用户才能导出其它用户的数据。)\n\n * file\n\n> 指定输出文件\n\n * tables\n\n> 指定需要导出的表，如果需要导出多个表可以使用逗号隔开。\n\n * rows\n\n> 指定导出后的表是否带数据（取值为n或y，默认为y）\n\n * query\n\n> 导出表时指定条件以导出部分数据。\n\n\n# 导入(imp命令)\n\n * 导入命令及其示例\n\n一、导入e01和e02表\nimp scott/tiger tables=e01,e02 file=/home/oracle/bak/e01_02.dmp buffer=1048576\n\n二、通过数据导入追加数据\n#导出e02表中的10部门员工\nexp scott/tiger tables=e02 query=\\'where deptno=10\\' file=/home/oracle/bak/e02_10.dmp buffer=1048576\n\n#把导出的10部门的员工追加到e02表中\nimp scott/tiger tables=e02 ignore=y file=/home/oracle/bak/e02_10.dmp buffer=1048576\n\n三、导出并恢复一个用户下的所有数据\n#导出scott用户下的所有数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#导入scott用户数据\nimp scott/tiger full=y file=/home/oracle/bak/scott.dmp buffer=1048576\n\n四、导出并恢复多个用户的数据（此操作必须有system用户完成）\n#导出scott用户和jack用户的数据\nexp system/system owner=scott,jack file=/home/oracle/bak/scott_jack.dmp buffer=1048576\n\n#导入scott用户和jack用户的数据\nimp system/system full=y file=/home/oracle/bak/scott_jack.dmp buffer=1048576\n\n五、把一个用户的所有数据导入到另一个用户\n#导出scott用户的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#把scott用户的数据导入到jack用户\nimp system/system fromuser=scott touser=jack file=/home/oracle/bak/scott.dmp buffer=1048576\n\n六、把一个用户的部分数据导入到另一个用户\n#导出scott用户的数据\nexp scott/tiger owner=scott file=/home/oracle/bak/scott.dmp buffer=1048576\n\n#把scott用户的e01和e02表导入到jack用户\nimp system/system fromuser=scott touser=jack tables=e01,e02 file=/home/oracle/bak/scott.dmp buffer=1048576\n\n七、恢复整个数据库中的数据\nimp system/system full=y file=/home/oracle/bak/full.dmp buffer=1048576\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n# 参数作用说明\n\n> imp命令的参数和exp命令大部分是相同的，userid、tables、owner、file、buffer等参数的含义和exp命令完全相同。\n\n * 只导入数据\n\n> imp有一个参数，data_only， 默认为n,需要导入数据时添加data_only=y 即可\n\n * ignore参数\n\n> (1)oracle imp 导入可以使用 ignore=y 参数进行覆盖数据库。如果不使用 ignore=y 参数在进行imp 导入时，就会对已经存在的表就不会进行导入，如果加上ignore=y 参数就会对已经存在的表中没有的记录进行更新，但对已经存在记录不会进行覆盖修改。\n\n> (2)在恢复数据的过程中，当导入某个表时，如果该表已经存在，则根据ignore参数的设置来决定如何操作。 若ignore=y，不执行create table语句，直接将数据插入到表中，如果插入的记录违背了约束条件，比如主键约束，唯一索引等，则出错的记录不会插入，但合法的记录会添加到表中。 若ignore=n，不执行create table语句，同时也不会将数据插入到表中，而是忽略该表的错误，继续导入下一个表。",charsets:{cjk:!0}},{title:"安装国产达梦数据库",frontmatter:{title:"安装国产达梦数据库",date:"2023-02-19T16:02:40.000Z",permalink:"/pages/4fe983/",categories:["数据库","达梦"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/05.%E8%BE%BE%E6%A2%A6/01.%E6%90%AD%E5%BB%BA%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93.html",relativePath:"数据库/05.达梦/01.搭建达梦数据库.md",key:"v-bce5b6b6",path:"/pages/4fe983/",headers:[{level:2,title:"常规安装",slug:"常规安装",normalizedTitle:"常规安装",charIndex:2},{level:3,title:"一. 创建安装用户",slug:"一-创建安装用户",normalizedTitle:"一. 创建安装用户",charIndex:11},{level:3,title:"二、检查操作系统资源是否满足安装需求",slug:"二、检查操作系统资源是否满足安装需求",normalizedTitle:"二、检查操作系统资源是否满足安装需求",charIndex:246},{level:3,title:"三、设置环境变量",slug:"三、设置环境变量",normalizedTitle:"三、设置环境变量",charIndex:960},{level:3,title:"四、上传dm安装包并解压",slug:"四、上传dm安装包并解压",normalizedTitle:"四、上传dm安装包并解压",charIndex:1113},{level:3,title:"五、ROOT 用户下 加载安装光驱，并赋权",slug:"五、root-用户下-加载安装光驱-并赋权",normalizedTitle:"五、root 用户下 加载安装光驱，并赋权",charIndex:1288},{level:3,title:"六、开始安装数据库",slug:"六、开始安装数据库",normalizedTitle:"六、开始安装数据库",charIndex:1580},{level:2,title:"docker下安装",slug:"docker下安装",normalizedTitle:"docker下安装",charIndex:2916},{level:2,title:"其它说明",slug:"其它说明",normalizedTitle:"其它说明",charIndex:2930},{level:3,title:"参考",slug:"参考",normalizedTitle:"参考",charIndex:3125}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"常规安装 一. 创建安装用户 二、检查操作系统资源是否满足安装需求 三、设置环境变量 四、上传dm安装包并解压 五、ROOT 用户下 加载安装光驱，并赋权 六、开始安装数据库 docker下安装 其它说明 参考",content:'# 常规安装\n\n\n# 一. 创建安装用户\n\n# 步骤及其说明\n#0. 切换至root用户\nsu root\n\n#1. 创建用户组\ngroupadd dinstall \n\n#2. 创建用户并为其指定用户组和登录目录\nuseradd -g dinstall -m -d /home/dmdba -s /bin/bash dmdba\n\n#3. 更改用户密码\n#暂定密码：duxingzhe \npasswd dmdba\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 二、检查操作系统资源是否满足安装需求\n\n 1. 使用命令ulimit -a 查看系统各项资源配置是否满足安装需求\n\n重要参数说明\n\n * data seg size\n\n建议用户设置为 1048576(即 1GB)以上或 unlimited(无限制)，此参数过小将导 致数据库启动失败。\n\n * file size\n\n建议用户设置为 unlimited(无限制)，此参数过小将导致数据库安装或初始化失败。\n\n * open files\n\n建议用户设置为 65536 以上或 unlimited(无限制)。\n\n * virtual memory\n\n建议用户设置为 1048576(即 1GB)以上或 unlimited(无限制)，此参数过小将导 致数据库启动失败。\n\n 2. 检查内存和存储是否满足要求\n\n * 检查内存\n\n为了保证 DM 的正确安装和运行，要尽量保证操作系统至少 1GB 的可用内存(RAM)。如果可用内存过少，可能导致DM安装或启动失败\n\n# 命令\nfree\n\n\n\n1\n2\n3\n\n * 检查存储空间 DM 完全安装需要 1GB 的存储空间，用户需要提前规划好安装目录，预留足够的 存储空间。DM 安装程序在安装时将产生临时文件，临时文件需要 1GB 的存储空间，临时文件目录默认为/tmp。用户可以使用以下命令检查存储空间。\n\n# 命令\ndf -h 【目标安装目录】\n\n\n1\n2\n\n\n注：可以通过定义环境变量的方式修改安装程序的临时目录，如：\n\n#指定临时目录为/db_tmp\nDM_INSTALL_TMPDIR=/db_tmp\nexport DM_INSTALL_TMPDIR\n\n\n\n1\n2\n3\n4\n\n\n\n# 三、设置环境变量\n\n 1. 对于程序运行所需的java环境有要求的情况下，可通过环境变量指定达梦程序使用的java环境,否则可忽略此步骤\n\n# 假设机器上已经安装了jdk\nDM_JAVA_HOME=`echo $JAVA_HOME`\nexport DM_JAVA_HOME\n\n\n\n1\n2\n3\n4\n\n\n\n# 四、上传dm安装包并解压\n\n 1. 使用ftp工具将dmxxxx.zip 上传至dmdba 用户目录中\n\n 2. 开始解压\n\n# 以上传目录/home/dmdba为例,命令如下\ncd /home/dmdba\nuzip dmxxxx.zip\n\n# 解压后得到 dmxxxx.iso 和dmxxxxx.txt文件\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、ROOT 用户下 加载安装光驱，并赋权\n\n# 1. 切换到root用户\nsu root\n\n# 2.创建目录\nmkdir /mnt/cdrom\n\n# 3. 将步骤四解压的dmxxx.iso 文件挂载 至cdrom目录\nmount /home/dmdba/dmxxxxx.iso /mnt/cdrom\n\n# 4. 移动至cdrom目录下\ncd /mnt/cdrom/\n\n# 5.更改cdrom 目录下"./DMInstall.bin" 的权限\nchmod 755 ./DMInstall.bin\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 六、开始安装数据库\n\n注意：不推荐使用root用户进行安装，请使用步骤1创建的dmdba用户进行安装 此步骤有主要有两种安装方式，分别为图形化界面安装和命令行安装\n\n 1. 图形化界面安装\n\n(1)进入到/mnt/cdrom 目录中；\n\n(2)双击目录中的"DMInstall.bin"进行安装 或者使用 命令./DMInstall.bin进行安装；\n\n(3)根据界面进行选择和配置\n\n 2. 命令行安装\n\n命令行安装会以对话框选择的方式呈现，用户根据提示输入相应的字符并回车即可。\n\n#进入到/mnt/cdrom 目录中\ncd /mnt/cdrom\n\n#输入下面的命令\n./DMInstall.bin -i\n\n#选择安装语言：\n#验证key:\n....\n\n#选择安装路径，此处输入目标路径即可,默认是 $HOME/dmdbms\n#安装后，若屏幕提示“请以root用户执行命令”，则切换至root用户执行对应命令即可。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n使用命令行安装后，还需要初始化数据库信息以及注册系统相关服务。\n\n# 初始化数据库信息(dmdba用户)\n# 本例达梦安装目录为 : /home/dmdba/dmdbms\n# 需要先进入到dm数据库安装目录下的/bin目录中\n\ncd /home/dmdba/dmdbms/bin\n\n# 执行目录下的dminit命令，并指定相关参数\n# 参数较多，请参照手册按需更改\n# 示例（其中，PATH需要指定，后面几个分别对应数据库名、实例名和端口号，它们有默认值，可不指定）\n\n./dminit PATH=/home/dmdba/dm_db_data DB_NAME=xxxx INSTANCE_NAME=xxxxx PORT_NUM=xxx\n\n# 使用dm自带的脚本文件注册服务(需在root用户下执行命令)\n# 注册服务脚本为 dm_service_installer.sh,该文件位于dm安装目录下的/script/root目录中\n# 移动到脚本所在目录\n\ncd /home/dmdba/dmdbms/script/root\n\n# 参数说明\n# -t 指定服务类型\n# -dm_ini 指定初始化配置文件，该文件位于dminit命令指定的PATH路径/数据库名 中，本例为: /home/dmdba/dm_db_data/DAMENG\n# -p 指定服务名后缀，生成的操作系统服务名为“服务脚本模板名称+服务名后缀”\n# 执行下面的命令进行注册\n\n./dm_service_installer.sh -t dmserver -dm_ini /home/dmdba/dm_db_data/DAMENG -p DMSERVER01\n\n# 当注册完成后就可使用systemctl 命令进行服务管理了\n# 即 systemctl status/start/stop/restart dmserverDMSERVER01\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# docker下安装\n\n\n# 其它说明\n\n 1. dminit虽然有很多参数，但大多数情况下默认值即是最佳的选择，所以我们在使用dminit初始化数据库时，只要指定：\n    * 初始数据库存放的路径：PATH\n    * 数据库名：DB_NAME（默认为：DAMENG）\n    * 实例名：INSTANCE_NAME（默认为：DMSERVER）\n    * 监听端口号：PORT_NUM（默认为：5236）\n\n\n# 参考\n\n 1. 参考文件\n    \n    * 《DM8安装手册.pdf》\n    * 《DM8_dminit使用手册.pdf》\n    * 《DM8_linux服务脚本使用手册.pdf》\n\n 2. 官方文档\n\n> https://eco.dameng.com/document/dm/zh-cn/faq/faq-dm-instance.html',normalizedContent:'# 常规安装\n\n\n# 一. 创建安装用户\n\n# 步骤及其说明\n#0. 切换至root用户\nsu root\n\n#1. 创建用户组\ngroupadd dinstall \n\n#2. 创建用户并为其指定用户组和登录目录\nuseradd -g dinstall -m -d /home/dmdba -s /bin/bash dmdba\n\n#3. 更改用户密码\n#暂定密码：duxingzhe \npasswd dmdba\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 二、检查操作系统资源是否满足安装需求\n\n 1. 使用命令ulimit -a 查看系统各项资源配置是否满足安装需求\n\n重要参数说明\n\n * data seg size\n\n建议用户设置为 1048576(即 1gb)以上或 unlimited(无限制)，此参数过小将导 致数据库启动失败。\n\n * file size\n\n建议用户设置为 unlimited(无限制)，此参数过小将导致数据库安装或初始化失败。\n\n * open files\n\n建议用户设置为 65536 以上或 unlimited(无限制)。\n\n * virtual memory\n\n建议用户设置为 1048576(即 1gb)以上或 unlimited(无限制)，此参数过小将导 致数据库启动失败。\n\n 2. 检查内存和存储是否满足要求\n\n * 检查内存\n\n为了保证 dm 的正确安装和运行，要尽量保证操作系统至少 1gb 的可用内存(ram)。如果可用内存过少，可能导致dm安装或启动失败\n\n# 命令\nfree\n\n\n\n1\n2\n3\n\n * 检查存储空间 dm 完全安装需要 1gb 的存储空间，用户需要提前规划好安装目录，预留足够的 存储空间。dm 安装程序在安装时将产生临时文件，临时文件需要 1gb 的存储空间，临时文件目录默认为/tmp。用户可以使用以下命令检查存储空间。\n\n# 命令\ndf -h 【目标安装目录】\n\n\n1\n2\n\n\n注：可以通过定义环境变量的方式修改安装程序的临时目录，如：\n\n#指定临时目录为/db_tmp\ndm_install_tmpdir=/db_tmp\nexport dm_install_tmpdir\n\n\n\n1\n2\n3\n4\n\n\n\n# 三、设置环境变量\n\n 1. 对于程序运行所需的java环境有要求的情况下，可通过环境变量指定达梦程序使用的java环境,否则可忽略此步骤\n\n# 假设机器上已经安装了jdk\ndm_java_home=`echo $java_home`\nexport dm_java_home\n\n\n\n1\n2\n3\n4\n\n\n\n# 四、上传dm安装包并解压\n\n 1. 使用ftp工具将dmxxxx.zip 上传至dmdba 用户目录中\n\n 2. 开始解压\n\n# 以上传目录/home/dmdba为例,命令如下\ncd /home/dmdba\nuzip dmxxxx.zip\n\n# 解压后得到 dmxxxx.iso 和dmxxxxx.txt文件\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 五、root 用户下 加载安装光驱，并赋权\n\n# 1. 切换到root用户\nsu root\n\n# 2.创建目录\nmkdir /mnt/cdrom\n\n# 3. 将步骤四解压的dmxxx.iso 文件挂载 至cdrom目录\nmount /home/dmdba/dmxxxxx.iso /mnt/cdrom\n\n# 4. 移动至cdrom目录下\ncd /mnt/cdrom/\n\n# 5.更改cdrom 目录下"./dminstall.bin" 的权限\nchmod 755 ./dminstall.bin\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 六、开始安装数据库\n\n注意：不推荐使用root用户进行安装，请使用步骤1创建的dmdba用户进行安装 此步骤有主要有两种安装方式，分别为图形化界面安装和命令行安装\n\n 1. 图形化界面安装\n\n(1)进入到/mnt/cdrom 目录中；\n\n(2)双击目录中的"dminstall.bin"进行安装 或者使用 命令./dminstall.bin进行安装；\n\n(3)根据界面进行选择和配置\n\n 2. 命令行安装\n\n命令行安装会以对话框选择的方式呈现，用户根据提示输入相应的字符并回车即可。\n\n#进入到/mnt/cdrom 目录中\ncd /mnt/cdrom\n\n#输入下面的命令\n./dminstall.bin -i\n\n#选择安装语言：\n#验证key:\n....\n\n#选择安装路径，此处输入目标路径即可,默认是 $home/dmdbms\n#安装后，若屏幕提示“请以root用户执行命令”，则切换至root用户执行对应命令即可。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n使用命令行安装后，还需要初始化数据库信息以及注册系统相关服务。\n\n# 初始化数据库信息(dmdba用户)\n# 本例达梦安装目录为 : /home/dmdba/dmdbms\n# 需要先进入到dm数据库安装目录下的/bin目录中\n\ncd /home/dmdba/dmdbms/bin\n\n# 执行目录下的dminit命令，并指定相关参数\n# 参数较多，请参照手册按需更改\n# 示例（其中，path需要指定，后面几个分别对应数据库名、实例名和端口号，它们有默认值，可不指定）\n\n./dminit path=/home/dmdba/dm_db_data db_name=xxxx instance_name=xxxxx port_num=xxx\n\n# 使用dm自带的脚本文件注册服务(需在root用户下执行命令)\n# 注册服务脚本为 dm_service_installer.sh,该文件位于dm安装目录下的/script/root目录中\n# 移动到脚本所在目录\n\ncd /home/dmdba/dmdbms/script/root\n\n# 参数说明\n# -t 指定服务类型\n# -dm_ini 指定初始化配置文件，该文件位于dminit命令指定的path路径/数据库名 中，本例为: /home/dmdba/dm_db_data/dameng\n# -p 指定服务名后缀，生成的操作系统服务名为“服务脚本模板名称+服务名后缀”\n# 执行下面的命令进行注册\n\n./dm_service_installer.sh -t dmserver -dm_ini /home/dmdba/dm_db_data/dameng -p dmserver01\n\n# 当注册完成后就可使用systemctl 命令进行服务管理了\n# 即 systemctl status/start/stop/restart dmserverdmserver01\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# docker下安装\n\n\n# 其它说明\n\n 1. dminit虽然有很多参数，但大多数情况下默认值即是最佳的选择，所以我们在使用dminit初始化数据库时，只要指定：\n    * 初始数据库存放的路径：path\n    * 数据库名：db_name（默认为：dameng）\n    * 实例名：instance_name（默认为：dmserver）\n    * 监听端口号：port_num（默认为：5236）\n\n\n# 参考\n\n 1. 参考文件\n    \n    * 《dm8安装手册.pdf》\n    * 《dm8_dminit使用手册.pdf》\n    * 《dm8_linux服务脚本使用手册.pdf》\n\n 2. 官方文档\n\n> https://eco.dameng.com/document/dm/zh-cn/faq/faq-dm-instance.html',charsets:{cjk:!0}},{title:"达梦数据库的基本使用",frontmatter:{title:"达梦数据库的基本使用",date:"2023-03-02T16:05:59.000Z",permalink:"/pages/c2f35a/",categories:["数据库","达梦"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E6%95%B0%E6%8D%AE%E5%BA%93/05.%E8%BE%BE%E6%A2%A6/02.%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html",relativePath:"数据库/05.达梦/02.达梦数据库的基本使用.md",key:"v-2e32b8d2",path:"/pages/c2f35a/",headers:[{level:2,title:"连接DM数据库",slug:"连接dm数据库",normalizedTitle:"连接dm数据库",charIndex:14},{level:2,title:"管理DM数据库",slug:"管理dm数据库",normalizedTitle:"管理dm数据库",charIndex:278},{level:3,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:1089},{level:2,title:"数据库数据迁移",slug:"数据库数据迁移",normalizedTitle:"数据库数据迁移",charIndex:1531}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"连接DM数据库 管理DM数据库 其它 数据库数据迁移",content:'# DM数据库使用\n\n\n# 连接DM数据库\n\n 1. 查看DM数据库状态\n\n# 根据注册时的service名称查询,以下命令供参考\nsystemctl status DmServiceDMSERVER01\n\n# 启动DM数据库\nsystemctl start DmServiceDMSERVER01\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 使用DM管理工具进行连接\n\n * 新建连接\n\n在管理工具左侧对象导航窗口，右键--连接，在弹出的窗口中填写DM数据库相关信息,然后点击确定即可。\n\n注：数据库用户SYSDBA 的默认密码为SYSDBA\n\n\n# 管理DM数据库\n\n 0. 查询表空间\n\nSELECT * FROM dba_data_files t;\n\n\n1\n\n 1. 创建表空间\n\n# 示例\n# 创建名为jg_cas_space的表空间，大小为300M，该空间可以每次5M的大小自动扩展至1500M\n\ncreate tablespace \nJG_CAS_SPACE\ndatafile \'/home/dmdba/dmdb_data/DAMENG/JG_CAS.DBF\' size 300\nautoextend on next 5 maxsize 1500;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 2. 创建用户/模式\n\n# 创建jg_cas用户，指定密码为duxingzhe\n# 限制其活跃时间为180天，默认表空间、临时表空间分别为jg_cas_space、TEMP....\n\ncreate user JG_CAS\n  identified by duxingzhe\n  limit PASSWORD_LIFE_TIME 180\n  default tablespace JG_CAS_SPACE\n  temporary tablespace TEMP;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 3. 给用户授权\n\n# 授予权限\n# 连接数据库权限\ngrant connect,resource to jg_cas;\n# 创建表权限\ngrant create table to jg_cas;\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 模式删除\n\n#--删除模式ryh1。选项restrict为判断当前模式不为空时会无法删除。Cascade为级联删除当前模式以及属于该模式下的所有对象。\ndrop schema ryh1 restrict/cascade;\n\n# 删除用户\ndrop user jg_cas cascade;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 其它\n\n 1. 达梦密码策略更改\n\n#查看\nSelect * from v$dm_ini where para_name=\'PWD_POLICY\';\n\n#修改密码策略为1 禁止与用户名相同\nSP_SET_PARA_VALUE(1,\'PWD_POLICY\',1);\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n注：\n\n * PWD_POLICY 设置系统默认口令策略 默认值为2 动态，系统级参数\n   \n   0：无策略\n   \n   1：禁止与用户名相同\n   \n   2：口令长度不小于9\n   \n   4：至少包含1个大写字母（A-Z）\n   \n   8: 至少包含1个数字（0-9）\n   \n   16：至少包含1个标点符号（在英文输入法状态下，除"和空格外的所有符号）\n   \n   若为其他数字，则表示配置值的和，如3=1+2，表示同时启用第1项和第2项策略。 当参数COMPATIBLE_MODE=1（等于1表示兼容SQL92标准）时，PWD_POLICY的实际值均为0\n\n\n# 数据库数据迁移\n\n * 涉及工具："DM数据迁移工具"\n\n * 迁移方法：\n   \n   首先需要打开达梦自带的DM数据迁移工具，然后再依次进行以下的步骤：\n   \n   (1)在工具左侧窗口中，右键--选择“新建迁移”，然后填写迁移名称（如迁移A）和迁移说明；\n   \n   (2)双击打开步骤1中新建的工程-迁移A，然后右键该工程下属的"迁移"目录，选择功能--"新建迁移"，再完善迁移信息；\n   \n   (3)步骤(2)完成后，将出现迁移工具的引导信息，单击下方的下一步，然后选择迁移方式，如oracle -> DM，然后再单击下一步；\n   \n   (4)填写数据源的数据库信息，然后选择下一步；\n   \n   (5)填写目标所在数据库信息，选择下一步\n   \n   (6)选择迁移对象，再下一步即可。',normalizedContent:'# dm数据库使用\n\n\n# 连接dm数据库\n\n 1. 查看dm数据库状态\n\n# 根据注册时的service名称查询,以下命令供参考\nsystemctl status dmservicedmserver01\n\n# 启动dm数据库\nsystemctl start dmservicedmserver01\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 2. 使用dm管理工具进行连接\n\n * 新建连接\n\n在管理工具左侧对象导航窗口，右键--连接，在弹出的窗口中填写dm数据库相关信息,然后点击确定即可。\n\n注：数据库用户sysdba 的默认密码为sysdba\n\n\n# 管理dm数据库\n\n 0. 查询表空间\n\nselect * from dba_data_files t;\n\n\n1\n\n 1. 创建表空间\n\n# 示例\n# 创建名为jg_cas_space的表空间，大小为300m，该空间可以每次5m的大小自动扩展至1500m\n\ncreate tablespace \njg_cas_space\ndatafile \'/home/dmdba/dmdb_data/dameng/jg_cas.dbf\' size 300\nautoextend on next 5 maxsize 1500;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 2. 创建用户/模式\n\n# 创建jg_cas用户，指定密码为duxingzhe\n# 限制其活跃时间为180天，默认表空间、临时表空间分别为jg_cas_space、temp....\n\ncreate user jg_cas\n  identified by duxingzhe\n  limit password_life_time 180\n  default tablespace jg_cas_space\n  temporary tablespace temp;\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 3. 给用户授权\n\n# 授予权限\n# 连接数据库权限\ngrant connect,resource to jg_cas;\n# 创建表权限\ngrant create table to jg_cas;\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 模式删除\n\n#--删除模式ryh1。选项restrict为判断当前模式不为空时会无法删除。cascade为级联删除当前模式以及属于该模式下的所有对象。\ndrop schema ryh1 restrict/cascade;\n\n# 删除用户\ndrop user jg_cas cascade;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 其它\n\n 1. 达梦密码策略更改\n\n#查看\nselect * from v$dm_ini where para_name=\'pwd_policy\';\n\n#修改密码策略为1 禁止与用户名相同\nsp_set_para_value(1,\'pwd_policy\',1);\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n注：\n\n * pwd_policy 设置系统默认口令策略 默认值为2 动态，系统级参数\n   \n   0：无策略\n   \n   1：禁止与用户名相同\n   \n   2：口令长度不小于9\n   \n   4：至少包含1个大写字母（a-z）\n   \n   8: 至少包含1个数字（0-9）\n   \n   16：至少包含1个标点符号（在英文输入法状态下，除"和空格外的所有符号）\n   \n   若为其他数字，则表示配置值的和，如3=1+2，表示同时启用第1项和第2项策略。 当参数compatible_mode=1（等于1表示兼容sql92标准）时，pwd_policy的实际值均为0\n\n\n# 数据库数据迁移\n\n * 涉及工具："dm数据迁移工具"\n\n * 迁移方法：\n   \n   首先需要打开达梦自带的dm数据迁移工具，然后再依次进行以下的步骤：\n   \n   (1)在工具左侧窗口中，右键--选择“新建迁移”，然后填写迁移名称（如迁移a）和迁移说明；\n   \n   (2)双击打开步骤1中新建的工程-迁移a，然后右键该工程下属的"迁移"目录，选择功能--"新建迁移"，再完善迁移信息；\n   \n   (3)步骤(2)完成后，将出现迁移工具的引导信息，单击下方的下一步，然后选择迁移方式，如oracle -> dm，然后再单击下一步；\n   \n   (4)填写数据源的数据库信息，然后选择下一步；\n   \n   (5)填写目标所在数据库信息，选择下一步\n   \n   (6)选择迁移对象，再下一步即可。',charsets:{cjk:!0}},{title:"Git使用手册",frontmatter:{title:"Git使用手册",date:"2022-06-29T14:27:01.000Z",permalink:"/pages/9a7ee40fc232253e",categories:["技术","技术文档"],tags:["Git"],author:{name:"dxzh",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/01.Git%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C.html",relativePath:"更多/01.技术文档/01.Git使用手册.md",key:"v-6e3667cc",path:"/pages/9a7ee40fc232253e/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:14},{level:2,title:"创建版本库（仓库）",slug:"创建版本库-仓库",normalizedTitle:"创建版本库（仓库）",charIndex:296},{level:2,title:"添加文件到仓库",slug:"添加文件到仓库",normalizedTitle:"添加文件到仓库",charIndex:478},{level:4,title:"提交描述规范",slug:"提交描述规范",normalizedTitle:"提交描述规范",charIndex:795},{level:2,title:"版本管理",slug:"版本管理",normalizedTitle:"版本管理",charIndex:819},{level:4,title:"提交修改",slug:"提交修改",normalizedTitle:"提交修改",charIndex:936},{level:4,title:"查看版本记录",slug:"查看版本记录",normalizedTitle:"查看版本记录",charIndex:1105},{level:4,title:"回退版本",slug:"回退版本",normalizedTitle:"回退版本",charIndex:1204},{level:4,title:"撤销修改",slug:"撤销修改",normalizedTitle:"撤销修改",charIndex:1565},{level:4,title:"删除文件",slug:"删除文件",normalizedTitle:"删除文件",charIndex:1639},{level:2,title:"远程仓库",slug:"远程仓库",normalizedTitle:"远程仓库",charIndex:1714},{level:4,title:"SSH验证",slug:"ssh验证",normalizedTitle:"ssh验证",charIndex:1722},{level:4,title:"关联远程仓库",slug:"关联远程仓库",normalizedTitle:"关联远程仓库",charIndex:1733},{level:4,title:"查看远程仓库",slug:"查看远程仓库",normalizedTitle:"查看远程仓库",charIndex:2770},{level:4,title:"删除远程仓库",slug:"删除远程仓库",normalizedTitle:"删除远程仓库",charIndex:2811},{level:4,title:"从远程库克隆项目",slug:"从远程库克隆项目",normalizedTitle:"从远程库克隆项目",charIndex:2858},{level:5,title:"克隆指定分支",slug:"克隆指定分支",normalizedTitle:"克隆指定分支",charIndex:2906},{level:2,title:"分支管理",slug:"分支管理",normalizedTitle:"分支管理",charIndex:2960},{level:4,title:"创建分支",slug:"创建分支",normalizedTitle:"创建分支",charIndex:2968},{level:4,title:"查看分支",slug:"查看分支",normalizedTitle:"查看分支",charIndex:3013},{level:4,title:"切换分支",slug:"切换分支",normalizedTitle:"切换分支",charIndex:3072},{level:4,title:"合并分支",slug:"合并分支",normalizedTitle:"合并分支",charIndex:3114},{level:4,title:"删除分支",slug:"删除分支",normalizedTitle:"删除分支",charIndex:3263},{level:4,title:"修改分支名",slug:"修改分支名",normalizedTitle:"修改分支名",charIndex:3306},{level:2,title:"帮助命令",slug:"帮助命令",normalizedTitle:"帮助命令",charIndex:3360},{level:2,title:"参考文档",slug:"参考文档",normalizedTitle:"参考文档",charIndex:7031}],excerpt:'<h1 id="git使用手册"><a class="header-anchor" href="#git使用手册">#</a> Git使用手册</h1>\n<h2 id="安装"><a class="header-anchor" href="#安装">#</a> 安装</h2>\n<p>官网下载：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener noreferrer">https://git-scm.com/downloads<OutboundLink/></a> 下载完成后使用默认进行安装。</p>\n<p>安装完成后，在开始菜单里找到 <code>Git</code> -&gt; <code>Git Bash</code>，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n还需要最后一步设置，在命令行输入：</p>\n\x3c!--beforebegin--\x3e<div class="language-bash line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"Your Name"</span>\n<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"email@example.com"</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"安装 创建版本库（仓库） 添加文件到仓库 提交描述规范 版本管理 提交修改 查看版本记录 回退版本 撤销修改 删除文件 远程仓库 SSH验证 关联远程仓库 查看远程仓库 删除远程仓库 从远程库克隆项目 克隆指定分支 分支管理 创建分支 查看分支 切换分支 合并分支 删除分支 修改分支名 帮助命令 参考文档",content:"# Git使用手册\n\n\n# 安装\n\n官网下载：https://git-scm.com/downloads 下载完成后使用默认进行安装。\n\n安装完成后，在开始菜单里找到 Git -> Git Bash，蹦出一个类似命令行窗口的东西，就说明Git安装成功！ 还需要最后一步设置，在命令行输入：\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"email@example.com\"\n\n\n1\n2\n\n\n因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。\n\n\n# 创建版本库（仓库）\n\n# 创建仓库\nmkdir <仓库name> \n\n# 进入仓库\ncd <仓库name>\n\n# 此命令用于显示当前目录\npwd\n\n# 把当前目录初始化成Git仓库\ngit init\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 也不一定必须在空目录下创建Git仓库，选择一个已经有东西的目录直接git init也是可以的。\n\n\n# 添加文件到仓库\n\n在仓库目录下放入文件，如新建一个test.txt文件，然后使用git add test.txt命令告诉Git，把文件添加到缓存区，然后使用git commit -m \"提交描述\"告诉Git，把文件提交到仓库。\n\n# 添加指定文件或文件夹到缓存区，文件需添加后缀\ngit add <文件或文件夹name>                   # 单个文件\ngit add <文件或文件夹name> <文件或文件夹name>  # 多个文件\n\n# 或 全部文件同时添加到缓存区\ngit add .\n\n# 把文件从缓存区提交至仓库\ngit commit -m \"提交描述\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 提交描述规范\n\n在提交代码时输入清晰的说明有利于版本管理，建议搭配如下关键字编写提交描述\n\n# 新建(add)\n# 删除(rm)\n# 更新(update)\n# 改动(change)\n# 实现\n# 发布\n# 修复\n...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 版本管理\n\n# 提交修改\n\n如修改test.txt的内容后，运行git status命令看看被修改的文件，然后再使用git add test.txt、 git commit -m \"修改描述\"把修改后的文件提交到仓库，提交后可再次使用git status查看当前状态。\n\n# 显示 新增/删除/被改动等 的文件\ngit status\n\n\n1\n2\n\n\n# 查看版本记录\n\n# 查看版本记录\ngit log   # 显示版本号、提交时间等信息\n\n\n1\n2\n\n\n> 也可使用可视化工具查看Git版本历史： 在仓库目录右键 > Git BUI Here\n\n# 回退版本\n\n首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。\n\n# 回退到上一个版本\n$ git reset --hard HEAD^\n\n\n1\n2\n\n\n此时查看git log记录发现，原来最新的版本已经没有了，想回到原来最新的版本怎么办？这就需要知道最新的版本的版本号\n\n# 跳转到指定版本\ngit reset --hard <版本号前几位>\n\n\n1\n2\n\n\n但是不知道版本号怎么办？Git提供了一个命令git reflog用来记录你的每一次命令\n\ngit reflog\n\n\n1\n\n\n# 撤销修改\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/897889638509536\n\n# 删除文件\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/900002180232448\n\n\n# 远程仓库\n\n# SSH验证\n\n使本机能关联远程仓库，首次需要SSH验证\n\n * 第1步：创建SSH Key。在用户主（C:\\Users\\dell）目录下，看看有没有.ssh目录， 如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。 如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：\n\n# 创建SSH Key\nssh-keygen -t rsa -C \"邮件地址\"\n\n\n1\n2\n\n * 第2步：登陆GitHub，右上角头像 > settings > SSH and GPG keys >Add SSH Key，在key的文本框里粘贴id_rsa.pub文件的内容\n\n# 关联远程仓库\n\nSSH验证完成后，在github创建仓库，创建仓库时记得取消 Initialize this repository with a README的勾选，然后在本地命令：\n\n# 关联远程仓库，仓库名一般使用origin\ngit remote add <仓库名> <远程仓库地址>\n\n# 示例\ngit remote add origin git@github.com:xugaoyi/test.git\n\n\n1\n2\n3\n4\n5\n\n\n下一步，就可以把本地库的所有内容推送到远程库上\n\n# 把文件推送到远程仓库\ngit push -u <仓库名> <分支名>\n\n# 示例\ngit push -u origin master\n\n\n1\n2\n3\n4\n5\n\n\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n> 前提是目录已经git init初始化成仓库，并且git status状态是没有改动的，如果有改动则先git add .添加至缓存区，git commit -m '提交描述'提交至仓库，然后执行上面命令。\n> \n> 如创建仓库时勾选了 Initialize this repository with a README 则需先拉取README.md文件到本地仓库git pull\n> \n> 可关联多个远程仓库，注意给不同的远程仓库取不一样的名称，提交是分别按名称提交到不一样的远程仓库。\n\n# 简化的推送命令\ngit push\n\n\n1\n2\n\n\n# 查看远程仓库\n\n# 查看远程仓库\ngit remote -v\n\n\n1\n2\n\n\n# 删除远程仓库\n\n# 删除远程仓库\ngit remote rm <仓库名>\n\n\n1\n2\n\n\n# 从远程库克隆项目\n\n# 从远程库克隆项目\ngit clone <仓库地址>\n\n\n1\n2\n\n\n# 克隆指定分支\n\n# 克隆指定分支\ngit clone -b <分支名> <仓库地址>\n\n\n1\n2\n\n\n\n# 分支管理\n\n# 创建分支\n\n# 创建分支\ngit checkout -b <分支名>\n\n\n1\n2\n\n\n# 查看分支\n\n# 查看分支\ngit branch\n\n\n1\n2\n\n\n查看分支时，在分支前带 * 号的表示当前的分支\n\n# 切换分支\n\n# 切换分支\ngit checkout <分支名>\n\n\n1\n2\n\n\n# 合并分支\n\n# 合并本地的分支\ngit merge <分支名>\n\n# 合并远程的分支\ngit merge <远程仓库名>/<分支名>\n\n\n1\n2\n3\n4\n5\n\n\n注意，是将指定分支合并到当前分支，并非当前分支合并到指定分支。\n\n一般情况下是把当前分支切换到主分支，然后把子分支合并到主分支。\n\n# 删除分支\n\n# 删除分支\ngit branch -d <分支名>\n\n\n1\n2\n\n\n# 修改分支名\n\n# 修改分支名\ngit branch -m <原分支名> <新分支名>\n\n\n1\n2\n\n\n\n# 帮助命令\n\n如对命令不清楚时，可使用git help命令显示出git命令介绍。\n\n# 帮助命令\ngit help\n\n\n1\n2\n\n\n$ git help\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   reset      Reset current HEAD to the specified state\n   rm         Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     Use binary search to find the commit that introduced a bug\n   grep       Print lines matching a pattern\n   log        Show commit logs\n   show       Show various types of objects\n   status     Show the working tree status\n\ngrow, mark and tweak your common history\n   branch     List, create, or delete branches\n   checkout   Switch branches or restore working tree files\n   commit     Record changes to the repository\n   diff       Show changes between commits, commit and working tree, etc\n   merge      Join two or more development histories together\n   rebase     Reapply commits on top of another base tip\n   tag        Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch      Download objects and refs from another repository\n   pull       Fetch from and integrate with another repository or a local branch\n   push       Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n翻译工具翻译中文\n\n$ git help\n使用：git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\n这些是在各种情况下使用的通用Git命令：\n\nstart a working area (参见命令: git help tutorial)\n   clone      将存储库克隆到新目录中\n   init       创建一个空的Git存储库或重新初始化一个现有的存储库\n\nwork on the current change (参见命令: git help everyday)\n   add        将文件内容添加到索引中\n   mv         移动或重命名文件、目录或符号链接\n   reset      将当前磁头重置为指定状态\n   rm         从工作树和索引中删除文件\n\nexamine the history and state (参见命令: git help revisions)\n   bisect     使用二分查找查找引入错误的提交\n   grep       打印与模式匹配的行\n   log        显示提交日志\n   show       显示各种类型的对象\n   status     显示工作树状态\n\ngrow, mark and tweak your common history\n   branch     列出、创建或删除分支\n   checkout   切换分支或还原工作树文件\n   commit     记录对存储库的更改\n   diff       显示提交、提交和工作树等之间的更改\n   merge      将两个或多个开发历史连接在一起\n   rebase     在另一个基本提示之上重新应用提交\n   tag        创建、列表、删除或验证用GPG签名的标记对象\n\ncollaborate (参见命令: git help workflows)\n   fetch      从另一个存储库下载对象和引用\n   pull       从另一个存储库或本地分支获取并与之集成\n   push       更新远程引用和相关对象\n\n'git help -a' 和 'git help -g' 列出可用的子命令和一些概念指导。\n命令'git help <command>' 或 'git help <concept>' 查看特定子命令或概念.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 参考文档\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600",normalizedContent:"# git使用手册\n\n\n# 安装\n\n官网下载：https://git-scm.com/downloads 下载完成后使用默认进行安装。\n\n安装完成后，在开始菜单里找到 git -> git bash，蹦出一个类似命令行窗口的东西，就说明git安装成功！ 还需要最后一步设置，在命令行输入：\n\ngit config --global user.name \"your name\"\ngit config --global user.email \"email@example.com\"\n\n\n1\n2\n\n\n因为git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和email地址。\n\n\n# 创建版本库（仓库）\n\n# 创建仓库\nmkdir <仓库name> \n\n# 进入仓库\ncd <仓库name>\n\n# 此命令用于显示当前目录\npwd\n\n# 把当前目录初始化成git仓库\ngit init\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 也不一定必须在空目录下创建git仓库，选择一个已经有东西的目录直接git init也是可以的。\n\n\n# 添加文件到仓库\n\n在仓库目录下放入文件，如新建一个test.txt文件，然后使用git add test.txt命令告诉git，把文件添加到缓存区，然后使用git commit -m \"提交描述\"告诉git，把文件提交到仓库。\n\n# 添加指定文件或文件夹到缓存区，文件需添加后缀\ngit add <文件或文件夹name>                   # 单个文件\ngit add <文件或文件夹name> <文件或文件夹name>  # 多个文件\n\n# 或 全部文件同时添加到缓存区\ngit add .\n\n# 把文件从缓存区提交至仓库\ngit commit -m \"提交描述\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 提交描述规范\n\n在提交代码时输入清晰的说明有利于版本管理，建议搭配如下关键字编写提交描述\n\n# 新建(add)\n# 删除(rm)\n# 更新(update)\n# 改动(change)\n# 实现\n# 发布\n# 修复\n...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 版本管理\n\n# 提交修改\n\n如修改test.txt的内容后，运行git status命令看看被修改的文件，然后再使用git add test.txt、 git commit -m \"修改描述\"把修改后的文件提交到仓库，提交后可再次使用git status查看当前状态。\n\n# 显示 新增/删除/被改动等 的文件\ngit status\n\n\n1\n2\n\n\n# 查看版本记录\n\n# 查看版本记录\ngit log   # 显示版本号、提交时间等信息\n\n\n1\n2\n\n\n> 也可使用可视化工具查看git版本历史： 在仓库目录右键 > git bui here\n\n# 回退版本\n\n首先，git必须知道当前版本是哪个版本，在git中，用head表示当前版本，也就是最新的提交1094adb...（注意我的提交id和你的肯定不一样），上一个版本就是head^，上上一个版本就是head^^，当然往上100个版本写100个^比较容易数不过来，所以写成head~100。\n\n# 回退到上一个版本\n$ git reset --hard head^\n\n\n1\n2\n\n\n此时查看git log记录发现，原来最新的版本已经没有了，想回到原来最新的版本怎么办？这就需要知道最新的版本的版本号\n\n# 跳转到指定版本\ngit reset --hard <版本号前几位>\n\n\n1\n2\n\n\n但是不知道版本号怎么办？git提供了一个命令git reflog用来记录你的每一次命令\n\ngit reflog\n\n\n1\n\n\n# 撤销修改\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/897889638509536\n\n# 删除文件\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600/900002180232448\n\n\n# 远程仓库\n\n# ssh验证\n\n使本机能关联远程仓库，首次需要ssh验证\n\n * 第1步：创建ssh key。在用户主（c:\\users\\dell）目录下，看看有没有.ssh目录， 如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。 如果没有，打开shell（windows下打开git bash），创建ssh key：\n\n# 创建ssh key\nssh-keygen -t rsa -c \"邮件地址\"\n\n\n1\n2\n\n * 第2步：登陆github，右上角头像 > settings > ssh and gpg keys >add ssh key，在key的文本框里粘贴id_rsa.pub文件的内容\n\n# 关联远程仓库\n\nssh验证完成后，在github创建仓库，创建仓库时记得取消 initialize this repository with a readme的勾选，然后在本地命令：\n\n# 关联远程仓库，仓库名一般使用origin\ngit remote add <仓库名> <远程仓库地址>\n\n# 示例\ngit remote add origin git@github.com:xugaoyi/test.git\n\n\n1\n2\n3\n4\n5\n\n\n下一步，就可以把本地库的所有内容推送到远程库上\n\n# 把文件推送到远程仓库\ngit push -u <仓库名> <分支名>\n\n# 示例\ngit push -u origin master\n\n\n1\n2\n3\n4\n5\n\n\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n> 前提是目录已经git init初始化成仓库，并且git status状态是没有改动的，如果有改动则先git add .添加至缓存区，git commit -m '提交描述'提交至仓库，然后执行上面命令。\n> \n> 如创建仓库时勾选了 initialize this repository with a readme 则需先拉取readme.md文件到本地仓库git pull\n> \n> 可关联多个远程仓库，注意给不同的远程仓库取不一样的名称，提交是分别按名称提交到不一样的远程仓库。\n\n# 简化的推送命令\ngit push\n\n\n1\n2\n\n\n# 查看远程仓库\n\n# 查看远程仓库\ngit remote -v\n\n\n1\n2\n\n\n# 删除远程仓库\n\n# 删除远程仓库\ngit remote rm <仓库名>\n\n\n1\n2\n\n\n# 从远程库克隆项目\n\n# 从远程库克隆项目\ngit clone <仓库地址>\n\n\n1\n2\n\n\n# 克隆指定分支\n\n# 克隆指定分支\ngit clone -b <分支名> <仓库地址>\n\n\n1\n2\n\n\n\n# 分支管理\n\n# 创建分支\n\n# 创建分支\ngit checkout -b <分支名>\n\n\n1\n2\n\n\n# 查看分支\n\n# 查看分支\ngit branch\n\n\n1\n2\n\n\n查看分支时，在分支前带 * 号的表示当前的分支\n\n# 切换分支\n\n# 切换分支\ngit checkout <分支名>\n\n\n1\n2\n\n\n# 合并分支\n\n# 合并本地的分支\ngit merge <分支名>\n\n# 合并远程的分支\ngit merge <远程仓库名>/<分支名>\n\n\n1\n2\n3\n4\n5\n\n\n注意，是将指定分支合并到当前分支，并非当前分支合并到指定分支。\n\n一般情况下是把当前分支切换到主分支，然后把子分支合并到主分支。\n\n# 删除分支\n\n# 删除分支\ngit branch -d <分支名>\n\n\n1\n2\n\n\n# 修改分支名\n\n# 修改分支名\ngit branch -m <原分支名> <新分支名>\n\n\n1\n2\n\n\n\n# 帮助命令\n\n如对命令不清楚时，可使用git help命令显示出git命令介绍。\n\n# 帮助命令\ngit help\n\n\n1\n2\n\n\n$ git help\nusage: git [--version] [--help] [-c <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -p | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\nthese are common git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      clone a repository into a new directory\n   init       create an empty git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        add file contents to the index\n   mv         move or rename a file, a directory, or a symlink\n   reset      reset current head to the specified state\n   rm         remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     use binary search to find the commit that introduced a bug\n   grep       print lines matching a pattern\n   log        show commit logs\n   show       show various types of objects\n   status     show the working tree status\n\ngrow, mark and tweak your common history\n   branch     list, create, or delete branches\n   checkout   switch branches or restore working tree files\n   commit     record changes to the repository\n   diff       show changes between commits, commit and working tree, etc\n   merge      join two or more development histories together\n   rebase     reapply commits on top of another base tip\n   tag        create, list, delete or verify a tag object signed with gpg\n\ncollaborate (see also: git help workflows)\n   fetch      download objects and refs from another repository\n   pull       fetch from and integrate with another repository or a local branch\n   push       update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. see 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n翻译工具翻译中文\n\n$ git help\n使用：git [--version] [--help] [-c <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -p | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>]\n\n这些是在各种情况下使用的通用git命令：\n\nstart a working area (参见命令: git help tutorial)\n   clone      将存储库克隆到新目录中\n   init       创建一个空的git存储库或重新初始化一个现有的存储库\n\nwork on the current change (参见命令: git help everyday)\n   add        将文件内容添加到索引中\n   mv         移动或重命名文件、目录或符号链接\n   reset      将当前磁头重置为指定状态\n   rm         从工作树和索引中删除文件\n\nexamine the history and state (参见命令: git help revisions)\n   bisect     使用二分查找查找引入错误的提交\n   grep       打印与模式匹配的行\n   log        显示提交日志\n   show       显示各种类型的对象\n   status     显示工作树状态\n\ngrow, mark and tweak your common history\n   branch     列出、创建或删除分支\n   checkout   切换分支或还原工作树文件\n   commit     记录对存储库的更改\n   diff       显示提交、提交和工作树等之间的更改\n   merge      将两个或多个开发历史连接在一起\n   rebase     在另一个基本提示之上重新应用提交\n   tag        创建、列表、删除或验证用gpg签名的标记对象\n\ncollaborate (参见命令: git help workflows)\n   fetch      从另一个存储库下载对象和引用\n   pull       从另一个存储库或本地分支获取并与之集成\n   push       更新远程引用和相关对象\n\n'git help -a' 和 'git help -g' 列出可用的子命令和一些概念指导。\n命令'git help <command>' 或 'git help <concept>' 查看特定子命令或概念.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n\n\n\n# 参考文档\n\nhttps://www.liaoxuefeng.com/wiki/896043488029600",charsets:{cjk:!0}},{title:"Markdown使用教程",frontmatter:{title:"Markdown使用教程",date:"2021-12-25T14:27:01.000Z",permalink:"/pages/ad247c4332211551",categories:["技术","技术文档"],tags:["Markdown"],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/02.Markdown%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html",relativePath:"更多/01.技术文档/02.Markdown使用教程.md",key:"v-616444d2",path:"/pages/ad247c4332211551/",headers:[{level:2,title:"一、Markdown",slug:"一、markdown",normalizedTitle:"一、markdown",charIndex:19},{level:3,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:34},{level:3,title:"应用",slug:"应用",normalizedTitle:"应用",charIndex:85},{level:3,title:"编辑器",slug:"编辑器",normalizedTitle:"编辑器",charIndex:150},{level:2,title:"二、徽章",slug:"二、徽章",normalizedTitle:"二、徽章",charIndex:192},{level:4,title:"什么是徽章",slug:"什么是徽章",normalizedTitle:"什么是徽章",charIndex:200},{level:4,title:"徽章的使用",slug:"徽章的使用",normalizedTitle:"徽章的使用",charIndex:316},{level:2,title:"三、设置目录",slug:"三、设置目录",normalizedTitle:"三、设置目录",charIndex:577},{level:2,title:"四、标题",slug:"四、标题",normalizedTitle:"四、标题",charIndex:1195},{level:2,title:"二级标题",slug:"二级标题",normalizedTitle:"二级标题",charIndex:1213},{level:3,title:"三级标题",slug:"三级标题",normalizedTitle:"三级标题",charIndex:1225},{level:4,title:"四级标题",slug:"四级标题",normalizedTitle:"四级标题",charIndex:1239},{level:5,title:"五级标题",slug:"五级标题",normalizedTitle:"五级标题",charIndex:1255},{level:6,title:"六级标题",slug:"六级标题",normalizedTitle:"六级标题",charIndex:1273},{level:2,title:"五、文本",slug:"五、文本",normalizedTitle:"五、文本",charIndex:1283},{level:3,title:"段落",slug:"段落",normalizedTitle:"段落",charIndex:1295},{level:3,title:"字体",slug:"字体",normalizedTitle:"字体",charIndex:1305},{level:3,title:"删除线",slug:"删除线",normalizedTitle:"删除线",charIndex:1315},{level:3,title:"下划线",slug:"下划线",normalizedTitle:"下划线",charIndex:1326},{level:3,title:"文字高亮",slug:"文字高亮",normalizedTitle:"文字高亮",charIndex:1337},{level:3,title:"分隔线",slug:"分隔线",normalizedTitle:"分隔线",charIndex:1349},{level:3,title:"脚注",slug:"脚注",normalizedTitle:"脚注",charIndex:1360},{level:2,title:"六、列表",slug:"六、列表",normalizedTitle:"六、列表",charIndex:1368},{level:3,title:"无序列表",slug:"无序列表",normalizedTitle:"无序列表",charIndex:1380},{level:3,title:"有序列表",slug:"有序列表",normalizedTitle:"有序列表",charIndex:1392},{level:3,title:"折叠列表",slug:"折叠列表",normalizedTitle:"折叠列表",charIndex:1404},{level:3,title:"带复选框列表",slug:"带复选框列表",normalizedTitle:"带复选框列表",charIndex:1416},{level:3,title:"列表嵌套",slug:"列表嵌套",normalizedTitle:"列表嵌套",charIndex:1430},{level:2,title:"七、区块引用",slug:"七、区块引用",normalizedTitle:"七、区块引用",charIndex:1440},{level:4,title:"区块嵌套",slug:"区块嵌套",normalizedTitle:"区块嵌套",charIndex:1454},{level:4,title:"区块中使用列表",slug:"区块中使用列表",normalizedTitle:"区块中使用列表",charIndex:1466},{level:4,title:"列表中使用区块",slug:"列表中使用区块",normalizedTitle:"列表中使用区块",charIndex:1481},{level:2,title:"八、代码",slug:"八、代码",normalizedTitle:"八、代码",charIndex:1494},{level:3,title:"代码区块",slug:"代码区块",normalizedTitle:"代码区块",charIndex:1506},{level:2,title:"九、链接",slug:"九、链接",normalizedTitle:"九、链接",charIndex:1516},{level:3,title:"变量链接",slug:"变量链接",normalizedTitle:"变量链接",charIndex:1528},{level:3,title:"Github仓库中使用内部链接",slug:"github仓库中使用内部链接",normalizedTitle:"github仓库中使用内部链接",charIndex:4921},{level:3,title:"锚点链接",slug:"锚点链接",normalizedTitle:"锚点链接",charIndex:1561},{level:2,title:"十、图片",slug:"十、图片",normalizedTitle:"十、图片",charIndex:1571},{level:3,title:"图片宽高",slug:"图片宽高",normalizedTitle:"图片宽高",charIndex:1583},{level:3,title:"相对路径以及Github中使用图片",slug:"相对路径以及github中使用图片",normalizedTitle:"相对路径以及github中使用图片",charIndex:1595},{level:2,title:"十一、表格",slug:"十一、表格",normalizedTitle:"十一、表格",charIndex:1618},{level:2,title:"十二、Emoji表情包",slug:"十二、emoji表情包",normalizedTitle:"十二、emoji表情包",charIndex:1629},{level:2,title:"十三、其他技巧",slug:"十三、其他技巧",normalizedTitle:"十三、其他技巧",charIndex:1646},{level:3,title:"支持的 HTML 元素",slug:"支持的-html-元素",normalizedTitle:"支持的 html 元素",charIndex:1661},{level:3,title:"转义",slug:"转义",normalizedTitle:"转义",charIndex:1680},{level:3,title:"数学公式",slug:"数学公式",normalizedTitle:"数学公式",charIndex:1690},{level:3,title:"图表",slug:"图表",normalizedTitle:"图表",charIndex:1702},{level:3,title:"流程图",slug:"流程图",normalizedTitle:"流程图",charIndex:1712},{level:3,title:"时序图",slug:"时序图",normalizedTitle:"时序图",charIndex:1723},{level:3,title:"甘特图",slug:"甘特图",normalizedTitle:"甘特图",charIndex:1734}],excerpt:'<h1 id="markdown使用教程"><a class="header-anchor" href="#markdown使用教程">#</a> Markdown使用教程</h1>\n<h2 id="一、markdown"><a class="header-anchor" href="#一、markdown">#</a> 一、Markdown</h2>\n<h3 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h3>\n<p><code>Markdown</code> 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"一、Markdown 简介 应用 编辑器 二、徽章 什么是徽章 徽章的使用 三、设置目录 四、标题 二级标题 三级标题 四级标题 五级标题 六级标题 五、文本 段落 字体 删除线 下划线 文字高亮 分隔线 脚注 六、列表 无序列表 有序列表 折叠列表 带复选框列表 列表嵌套 七、区块引用 区块嵌套 区块中使用列表 列表中使用区块 八、代码 代码区块 九、链接 变量链接 Github仓库中使用内部链接 锚点链接 十、图片 图片宽高 相对路径以及Github中使用图片 十一、表格 十二、Emoji表情包 十三、其他技巧 支持的 HTML 元素 转义 数学公式 图表 流程图 时序图 甘特图",content:"# Markdown使用教程\n\n\n# 一、Markdown\n\n\n# 简介\n\nMarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n\n\n# 应用\n\n当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、知乎等\n\n\n# 编辑器\n\n推荐使用Typora，官网：https://typora.io/\n\n\n# 二、徽章\n\n# 什么是徽章\n\n徽章是一种小巧精美的小图标，一般配有相关文字进行辅助说明，可对数据进行监控，链接跳转等，富有表现力。\n\n常见于github项目主页，但其不仅出现于 github 项目主页，凡是能够表现图片的地方都可以出现徽章。\n\n# 徽章的使用\n\n * 在markdown中使用\n\n格式:\n[![图片文字说明](图片源地址)](超链接地址)  # 即超链接内部嵌套图片\n\n语法：\n[![github](https://img.shields.io/badge/github-xugaoyi-brightgreen.svg)](https://github.com/xugaoyi)\n\n\n1\n2\n3\n4\n5\n\n\n\n\n徽章生成网站：https://shields.io/\n\n本文档主要介绍markdown，不对徽章做过多介绍，详细介绍请 戳我 了解。\n\n\n# 三、设置目录\n\n设置之后会根据分级标题来自动生成目录。\n\n[TOC]\n\n\n1\n\n\n> 注：github暂未支持。\n\n[TOC]\n\n在github生成TOC的方法：https://github.com/ekalinin/github-markdown-toc\n\nwindows系统需要基于golang实现的工具：https://github.com/ekalinin/github-markdown-toc.go\n\n> 如果你有GO语言的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。\n> \n> 如windows系统64位 下载：gh-md-toc.windows.amd64.tgz （386 是32位，amd64是64位）\n> \n> 下载解压后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。\n> \n> 使用方法：\n> \n>  1. 首先将.md文档复制到gh-md-toc.exe的根目录下\n>  2. 在该目录下打开系统命令行，输入命令：gh-md-toc.exe README.MD 生成目录\n>  3. 把生成的目录复制到.md文件即可。\n\n这是gh-md-toc生成的目录：\n\n * 一、Markdown\n   * 简介\n   * 应用\n   * 编辑器\n * 二、徽章\n   * 什么是徽章\n   * 徽章的使用\n * 三、设置目录\n * 四、标题\n * 一级标题\n   * 二级标题\n     * 三级标题\n       * 四级标题\n         * 五级标题\n           * 六级标题\n   * 五、文本\n     * 段落\n     * 字体\n     * 删除线\n     * 下划线\n     * 文字高亮\n     * 分隔线\n     * 脚注\n   * 六、列表\n     * 无序列表\n     * 有序列表\n     * 折叠列表\n     * 带复选框列表\n     * 列表嵌套\n   * 七、区块引用\n     * 区块嵌套\n     * 区块中使用列表\n     * 列表中使用区块\n   * 八、代码\n     * 代码区块\n   * 九、链接\n     * 变量链接\n     * Github中使用内部链接\n     * 锚点链接\n   * 十、图片\n     * 图片宽高\n     * 相对路径以及Github中使用图片\n   * 十一、表格\n   * 十二、Emoji表情包\n   * 十三、其他技巧\n     * 支持的 HTML 元素\n     * 转义\n     * 数学公式\n     * 图表\n     * 流程图\n     * 时序图\n     * 甘特图\n\n\n# 四、标题\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 五、文本\n\n\n# 段落\n\nMarkdown 段落没有特殊的格式，直接编写文字，需要段落缩进时使用2个Tab\n\n\n# 字体\n\n*斜体文本*\n或 _斜体文本_\n**粗体文本**\n或  __粗体文本__\n***粗斜体文本***\n或 ___粗斜体文本___\n\n\n1\n2\n3\n4\n5\n6\n\n\n斜体文本\n\n斜体文本\n\n粗体文本\n\n粗体文本\n\n粗斜体文本\n\n粗斜体文本\n\n\n# 删除线\n\n如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\n~~BAIDU.COM~~\n\n\n1\n\n\nBAIDU.COM\n\n\n# 下划线\n\n下划线可以通过 HTML 的<u> 标签来实现：\n\n<u>带下划线的文本</u>\n\n\n1\n\n\n带下划线的文本\n\n\n# 文字高亮\n\n文字高亮能使行内部分文字高亮，使用一对反引号。\n\n`html` `css` `javascript`\n\n\n1\n\n\nhtml css javascript\n\n\n# 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n***\n\n*****\n\n- - -\n\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n----------------------------------------\n\n\n# 脚注\n\n脚注是对文本的补充说明。\n\n[^变量]\n在文档结尾或其他位置給变量赋值：\n[^变量]: 注明框内显示的内容\n\n鼠标移到这里> [^哈喽]\n[^哈喽]: 注明框内显示的内容\n\n\n1\n2\n3\n4\n5\n6\n\n\n> 注：在部分线上预览未支持\n\n鼠标移到这里> ^哈喽\n\n\n# 六、列表\n\n\n# 无序列表\n\n使用星号*、加号+或是减号-作为列表标记：\n\n* 第一项\n* 第二项\n\n+ 第一项\n+ 第二项\n\n- 第一项\n- 第二项\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 第一项\n * 第二项\n\n\n# 有序列表\n\n使用数字并加上. 号来表示\n\n1. 第一项\n2. 第二项\n\n\n1\n2\n\n 1. 第一项\n 2. 第二项\n\n\n# 折叠列表\n\n<details>\n<summary>点我打开关闭折叠</summary>\n 折叠内容\n <ul>\n     <li>1</li>\n     <li>2</li>\n     <li>3</li>\n </ul>\n</details>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意：<details> 标签内写markdown代码无效，可写html代码，如ul>li、table等\n\n点我打开关闭折叠 折叠内容\n * 1\n * 2\n * 3\n\n包含table的折叠\n\n分类        例词\n人称代词-主格   I我，you你，he他，she她，they他们， we我们\n人称代词-宾格   me我， you你， him他， her她， them他们， us我们\n物主代词      my我的， his他的， your你的（your你们的）， their他们的， hers她的\n指示代词      this这， that那， these这些， those 那些\n反身代词      myself我自己， himself他自己， themselves他们自己，\n          yourself你(们)自己，herself她自己\n疑问代词      who谁， what什么， which哪个\n不定代词      some一些， many许多， both两个、两个都， any许多\n关系代词      which……的物， who……的人， that……的人或物， who谁， that引导定语从句\n相互代词      each other 互相， one another互相\n连接代词      who,whom,whose,what,which,whatever,whichever,whoever,whomever\n替代词       one（单数），ones（复数）\n\n\n# 带复选框列表\n\n* [x] 第一项\n* [ ] 第二项\n* [ ] 第三项\n\n\n1\n2\n3\n\n\n> 注：在部分线上预览未支持\n\n * [x] 第一项\n\n * [ ] 第二项\n\n * [ ] 第三项\n\n\n# 列表嵌套\n\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n       - 第三层嵌套\n\n\n1\n2\n3\n4\n5\n6\n\n 1. 第一项\n    * 嵌套1\n    * 嵌套2\n 2. 第二项\n    * 嵌套1\n      * 嵌套2\n\n\n# 七、区块引用\n\n区块引用是在段落开头使用 >符号 ，然后后面紧跟一个空格符号：\n\n> 区块引用\n\n\n1\n\n\n> 区块引用\n> \n> Typora中回车键自动延伸区块\n\n# 区块嵌套\n\n> 第一层\n> > 第二层\n> > > 第三层\n\n\n1\n2\n3\n\n\n> 第一层\n> \n> > 第二层\n> > \n> > > 第三层\n\n# 区块中使用列表\n\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> * 111\n> * 222\n\n\n1\n2\n3\n4\n5\n\n\n> 区块中使用列表\n> \n>  1. 第一项\n>  2. 第二项\n>     * 111\n>     * 222\n\n# 列表中使用区块\n\n* 第一项\n    > 区块\n* 第二项\n\n\n1\n2\n3\n\n\n * 第一项\n   \n   > 区块\n   > \n   > 区块\n\n * 第二项\n\n\n# 八、代码\n\n如果是段落上的一个代码片段可以用反引号把它包起来（`），示例：\n\n`alert()`\n\n\n1\n\n\nalert()\n\n\n# 代码区块\n\n用三个反引号 ``` 包裹一段代码，并指定一种语言（也可以不指定），指定代码语言后会有代码的颜色高亮\n\n本代码区块为示例说明：\n\n​```javascript\nfunction test() {\n\talert('test')\n}\n​```\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\nfunction test() {\n\talert('test')\n}\n\n\n1\n2\n3\n\n\n\n# 九、链接\n\n格式：\n\n[链接名称](链接地址)\n\n[链接名称](链接地址,可选的alt)\n\n或\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n示例：\n\n[百度](http://www.baidu.com,'百度')\n\n\n1\n\n\n百度\n\n直接显示链接地址：\n\n<http://www.baidu.com>\n\n\n1\n\n\nhttp://www.baidu.com\n\n\n# 变量链接\n\n链接可以用变量来代替，文档末尾或其他位置附带变量地址：\n\n这个链接用 1 作为网址变量 [Google][1]\n这个链接用 baidu 作为网址变量 [Baidu][baidu]\n\n然后在文档的结尾或其他位置给变量赋值（网址）\n  [1]: http://www.google.com/\n  [baidu]: http://www.baidu.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n这个链接用 1 作为网址变量 Google\n\n这个链接用 baidu 作为网址变量 Baidu\n\n\n# Github仓库中使用内部链接\n\n可使用相对路径（前提是有该路径下的文件）\n[test](test.md)\n\n\n1\n2\n\n\ntest\n\n\n# 锚点链接\n\n本文件中每一个标题都是一个锚点，和HTML的锚点（#）类似\n\n[Markdown](#Markdown)\n\n\n1\n\n\n> 注： github对含有标点符号的标题进行锚点时会忽略掉标点符号， 本页中，如果这样写则无法跳转：[链接](#九、链接) 正确写法：[链接](#九链接)\n\nMarkdown\n\n链接\n\n流程图\n\n\n# 十、图片\n\n和链接的区别是前面多一个感叹号!\n\n![图片名](图片链接)\n\n\n1\n\n\n当然，你也可以像链接那样对图片地址使用变量:\n\n这里链接用 img 作为图片地址变量\n然后在文档的结尾或其他位置给变量赋值（图片地址）\n![RUNOOB][img]\n[img]: https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 图片宽高\n\n如下想设置图片宽高，可以使用 <img> 标签。\n\n<img src=\"https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\" width=\"50px\" height=\"30px\">\n\n\n1\n\n\n\n# 相对路径以及Github中使用图片\n\n不管是在本地还是在github同一个仓库中，如果图片存在，可以使用相对路径。\n\n相对路径图片：\n\n![头像图片](./md-img/test.jpg)\n\n\n1\n\n\ngithub上如果引用其他github仓库中的图片则要注意地址格式：仓库地址/raw/分支名/图片路径 或 https://raw.githubusercontent.com/用户名/仓库名/分支名/图片路径\n\n![其他仓库的图片1](https://github.com/xugaoyi/vue-music/raw/master/src/common/image/default.png)\n或\n![其他仓库的图片2](https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png)\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 十一、表格\n\n制作表格使用 |来分隔不同的单元格，使用-来分隔表头和其他行。\n\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n\n1\n2\n3\n4\n\n\n表头    表头\n单元格   单元格\n单元格   单元格\n\n对齐方式\n\n * -: 设置内容和标题栏居右对齐\n * :- 设置内容和标题栏居左对齐\n * :-: 设置内容和标题栏居中对齐\n\n| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n\n\n1\n2\n3\n4\n\n\n左对齐   右对齐   居中对齐\n单元格   单元格   单元格\n单元格   单元格   单元格\n\n\n# 十二、Emoji表情包\n\nEmoji表情英文名的前后加冒号，Typore上先输入冒号再输入首字母有表情提示\n\n:smirk:\n\n\n1\n\n\n💋 😸🙈🐴 😏😊😃😄 ☀️\n\n更多表情名称请查看：表情包清单\n\n\n# 十三、其他技巧\n\n\n# 支持的 HTML 元素\n\n不在 Markdown 语法涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n\n目前支持的 HTML 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等等 ，如：\n\n使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑\n\n\n1\n\n\n使用 Ctrl+Alt+Del 重启电脑\n\n我是使用b标签的加粗字体\n\n\n# 转义\n\nMarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用反斜杠转义字符：\n\n**未转义星号显示加粗**\n\\*\\* 转义显示星号 \\*\\*\n\n\n1\n2\n\n\n未转义星号显示加粗 ** 转义显示星号 **\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n*** 以下部分在Github或其他在线预览中暂未支持 ***\n\n----------------------------------------\n\n\n# 数学公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n$$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n$$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\ \\frac{\\partial X}{\\partial u} & \\frac{\\partial Y}{\\partial u} & 0 \\ \\frac{\\partial X}{\\partial v} & \\frac{\\partial Y}{\\partial v} & 0 \\ \\end{vmatrix} $$\n\n\n# 图表\n\n​```chart\n,Budget,Income,Expenses,Debt\nJune,5000,8000,4000,6000\nJuly,3000,1000,4000,3000\nAug,5000,7000,6000,3000\nSep,7000,2000,3000,1000\nOct,6000,5000,4000,2000\nNov,4000,3000,5000,\n\ntype: pie\ntitle: Monthly Revenue\nx.title: Amount\ny.title: Month\ny.suffix: $\n​```\n​```mermaid\nsequenceDiagram\nA->>B: 是否已收到消息？\nB--\x3e>A: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n> 注：在Typora中未支持\n\n\n# 流程图\n\n语法：\n​```mermaid\ngraph TD\nA[模块A] --\x3e|A1| B(模块B)\nB --\x3e C{判断条件C}\nC --\x3e|条件C1| D[模块D]\nC --\x3e|条件C2| E[模块E]\nC --\x3e|条件C3| F[模块F]\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n流程图相关文章：\n\nhttps://www.jianshu.com/p/b421cc723da5\n\nhttp://www.imooc.com/article/292708\n\n\n# 时序图\n\n​```mermaid\nsequenceDiagram\nA->>B: 是否已收到消息？\nB--\x3e>A: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n\n\n\n# 甘特图\n\n​```mermaid\ngantt\ntitle 甘特图\ndateFormat  YYYY-MM-DD\nsection 项目A\n任务1           :a1, 2018-06-06, 30d\n任务2     :after a1  , 20d\nsection 项目B\n任务3      :2018-06-12  , 12d\n任务4      : 24d\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n回到顶部",normalizedContent:"# markdown使用教程\n\n\n# 一、markdown\n\n\n# 简介\n\nmarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n\n\n# 应用\n\n当前许多网站都广泛使用 markdown 来撰写帮助文档或是用于论坛上发表消息。例如：github、简书、知乎等\n\n\n# 编辑器\n\n推荐使用typora，官网：https://typora.io/\n\n\n# 二、徽章\n\n# 什么是徽章\n\n徽章是一种小巧精美的小图标，一般配有相关文字进行辅助说明，可对数据进行监控，链接跳转等，富有表现力。\n\n常见于github项目主页，但其不仅出现于 github 项目主页，凡是能够表现图片的地方都可以出现徽章。\n\n# 徽章的使用\n\n * 在markdown中使用\n\n格式:\n[![图片文字说明](图片源地址)](超链接地址)  # 即超链接内部嵌套图片\n\n语法：\n[![github](https://img.shields.io/badge/github-xugaoyi-brightgreen.svg)](https://github.com/xugaoyi)\n\n\n1\n2\n3\n4\n5\n\n\n\n\n徽章生成网站：https://shields.io/\n\n本文档主要介绍markdown，不对徽章做过多介绍，详细介绍请 戳我 了解。\n\n\n# 三、设置目录\n\n设置之后会根据分级标题来自动生成目录。\n\n[toc]\n\n\n1\n\n\n> 注：github暂未支持。\n\n[toc]\n\n在github生成toc的方法：https://github.com/ekalinin/github-markdown-toc\n\nwindows系统需要基于golang实现的工具：https://github.com/ekalinin/github-markdown-toc.go\n\n> 如果你有go语言的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。\n> \n> 如windows系统64位 下载：gh-md-toc.windows.amd64.tgz （386 是32位，amd64是64位）\n> \n> 下载解压后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。\n> \n> 使用方法：\n> \n>  1. 首先将.md文档复制到gh-md-toc.exe的根目录下\n>  2. 在该目录下打开系统命令行，输入命令：gh-md-toc.exe readme.md 生成目录\n>  3. 把生成的目录复制到.md文件即可。\n\n这是gh-md-toc生成的目录：\n\n * 一、markdown\n   * 简介\n   * 应用\n   * 编辑器\n * 二、徽章\n   * 什么是徽章\n   * 徽章的使用\n * 三、设置目录\n * 四、标题\n * 一级标题\n   * 二级标题\n     * 三级标题\n       * 四级标题\n         * 五级标题\n           * 六级标题\n   * 五、文本\n     * 段落\n     * 字体\n     * 删除线\n     * 下划线\n     * 文字高亮\n     * 分隔线\n     * 脚注\n   * 六、列表\n     * 无序列表\n     * 有序列表\n     * 折叠列表\n     * 带复选框列表\n     * 列表嵌套\n   * 七、区块引用\n     * 区块嵌套\n     * 区块中使用列表\n     * 列表中使用区块\n   * 八、代码\n     * 代码区块\n   * 九、链接\n     * 变量链接\n     * github中使用内部链接\n     * 锚点链接\n   * 十、图片\n     * 图片宽高\n     * 相对路径以及github中使用图片\n   * 十一、表格\n   * 十二、emoji表情包\n   * 十三、其他技巧\n     * 支持的 html 元素\n     * 转义\n     * 数学公式\n     * 图表\n     * 流程图\n     * 时序图\n     * 甘特图\n\n\n# 四、标题\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 一级标题\n\n\n# 二级标题\n\n\n# 三级标题\n\n# 四级标题\n\n# 五级标题\n\n# 六级标题\n\n\n# 五、文本\n\n\n# 段落\n\nmarkdown 段落没有特殊的格式，直接编写文字，需要段落缩进时使用2个tab\n\n\n# 字体\n\n*斜体文本*\n或 _斜体文本_\n**粗体文本**\n或  __粗体文本__\n***粗斜体文本***\n或 ___粗斜体文本___\n\n\n1\n2\n3\n4\n5\n6\n\n\n斜体文本\n\n斜体文本\n\n粗体文本\n\n粗体文本\n\n粗斜体文本\n\n粗斜体文本\n\n\n# 删除线\n\n如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\n~~baidu.com~~\n\n\n1\n\n\nbaidu.com\n\n\n# 下划线\n\n下划线可以通过 html 的<u> 标签来实现：\n\n<u>带下划线的文本</u>\n\n\n1\n\n\n带下划线的文本\n\n\n# 文字高亮\n\n文字高亮能使行内部分文字高亮，使用一对反引号。\n\n`html` `css` `javascript`\n\n\n1\n\n\nhtml css javascript\n\n\n# 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n***\n\n*****\n\n- - -\n\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n----------------------------------------\n\n\n# 脚注\n\n脚注是对文本的补充说明。\n\n[^变量]\n在文档结尾或其他位置給变量赋值：\n[^变量]: 注明框内显示的内容\n\n鼠标移到这里> [^哈喽]\n[^哈喽]: 注明框内显示的内容\n\n\n1\n2\n3\n4\n5\n6\n\n\n> 注：在部分线上预览未支持\n\n鼠标移到这里> ^哈喽\n\n\n# 六、列表\n\n\n# 无序列表\n\n使用星号*、加号+或是减号-作为列表标记：\n\n* 第一项\n* 第二项\n\n+ 第一项\n+ 第二项\n\n- 第一项\n- 第二项\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 第一项\n * 第二项\n\n\n# 有序列表\n\n使用数字并加上. 号来表示\n\n1. 第一项\n2. 第二项\n\n\n1\n2\n\n 1. 第一项\n 2. 第二项\n\n\n# 折叠列表\n\n<details>\n<summary>点我打开关闭折叠</summary>\n 折叠内容\n <ul>\n     <li>1</li>\n     <li>2</li>\n     <li>3</li>\n </ul>\n</details>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意：<details> 标签内写markdown代码无效，可写html代码，如ul>li、table等\n\n点我打开关闭折叠 折叠内容\n * 1\n * 2\n * 3\n\n包含table的折叠\n\n分类        例词\n人称代词-主格   i我，you你，he他，she她，they他们， we我们\n人称代词-宾格   me我， you你， him他， her她， them他们， us我们\n物主代词      my我的， his他的， your你的（your你们的）， their他们的， hers她的\n指示代词      this这， that那， these这些， those 那些\n反身代词      myself我自己， himself他自己， themselves他们自己，\n          yourself你(们)自己，herself她自己\n疑问代词      who谁， what什么， which哪个\n不定代词      some一些， many许多， both两个、两个都， any许多\n关系代词      which……的物， who……的人， that……的人或物， who谁， that引导定语从句\n相互代词      each other 互相， one another互相\n连接代词      who,whom,whose,what,which,whatever,whichever,whoever,whomever\n替代词       one（单数），ones（复数）\n\n\n# 带复选框列表\n\n* [x] 第一项\n* [ ] 第二项\n* [ ] 第三项\n\n\n1\n2\n3\n\n\n> 注：在部分线上预览未支持\n\n * [x] 第一项\n\n * [ ] 第二项\n\n * [ ] 第三项\n\n\n# 列表嵌套\n\n1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n       - 第三层嵌套\n\n\n1\n2\n3\n4\n5\n6\n\n 1. 第一项\n    * 嵌套1\n    * 嵌套2\n 2. 第二项\n    * 嵌套1\n      * 嵌套2\n\n\n# 七、区块引用\n\n区块引用是在段落开头使用 >符号 ，然后后面紧跟一个空格符号：\n\n> 区块引用\n\n\n1\n\n\n> 区块引用\n> \n> typora中回车键自动延伸区块\n\n# 区块嵌套\n\n> 第一层\n> > 第二层\n> > > 第三层\n\n\n1\n2\n3\n\n\n> 第一层\n> \n> > 第二层\n> > \n> > > 第三层\n\n# 区块中使用列表\n\n> 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> * 111\n> * 222\n\n\n1\n2\n3\n4\n5\n\n\n> 区块中使用列表\n> \n>  1. 第一项\n>  2. 第二项\n>     * 111\n>     * 222\n\n# 列表中使用区块\n\n* 第一项\n    > 区块\n* 第二项\n\n\n1\n2\n3\n\n\n * 第一项\n   \n   > 区块\n   > \n   > 区块\n\n * 第二项\n\n\n# 八、代码\n\n如果是段落上的一个代码片段可以用反引号把它包起来（`），示例：\n\n`alert()`\n\n\n1\n\n\nalert()\n\n\n# 代码区块\n\n用三个反引号 ``` 包裹一段代码，并指定一种语言（也可以不指定），指定代码语言后会有代码的颜色高亮\n\n本代码区块为示例说明：\n\n​```javascript\nfunction test() {\n\talert('test')\n}\n​```\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\nfunction test() {\n\talert('test')\n}\n\n\n1\n2\n3\n\n\n\n# 九、链接\n\n格式：\n\n[链接名称](链接地址)\n\n[链接名称](链接地址,可选的alt)\n\n或\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n示例：\n\n[百度](http://www.baidu.com,'百度')\n\n\n1\n\n\n百度\n\n直接显示链接地址：\n\n<http://www.baidu.com>\n\n\n1\n\n\nhttp://www.baidu.com\n\n\n# 变量链接\n\n链接可以用变量来代替，文档末尾或其他位置附带变量地址：\n\n这个链接用 1 作为网址变量 [google][1]\n这个链接用 baidu 作为网址变量 [baidu][baidu]\n\n然后在文档的结尾或其他位置给变量赋值（网址）\n  [1]: http://www.google.com/\n  [baidu]: http://www.baidu.com/\n\n\n1\n2\n3\n4\n5\n6\n\n\n这个链接用 1 作为网址变量 google\n\n这个链接用 baidu 作为网址变量 baidu\n\n\n# github仓库中使用内部链接\n\n可使用相对路径（前提是有该路径下的文件）\n[test](test.md)\n\n\n1\n2\n\n\ntest\n\n\n# 锚点链接\n\n本文件中每一个标题都是一个锚点，和html的锚点（#）类似\n\n[markdown](#markdown)\n\n\n1\n\n\n> 注： github对含有标点符号的标题进行锚点时会忽略掉标点符号， 本页中，如果这样写则无法跳转：[链接](#九、链接) 正确写法：[链接](#九链接)\n\nmarkdown\n\n链接\n\n流程图\n\n\n# 十、图片\n\n和链接的区别是前面多一个感叹号!\n\n![图片名](图片链接)\n\n\n1\n\n\n当然，你也可以像链接那样对图片地址使用变量:\n\n这里链接用 img 作为图片地址变量\n然后在文档的结尾或其他位置给变量赋值（图片地址）\n![runoob][img]\n[img]: https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 图片宽高\n\n如下想设置图片宽高，可以使用 <img> 标签。\n\n<img src=\"https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png\" width=\"50px\" height=\"30px\">\n\n\n1\n\n\n\n# 相对路径以及github中使用图片\n\n不管是在本地还是在github同一个仓库中，如果图片存在，可以使用相对路径。\n\n相对路径图片：\n\n![头像图片](./md-img/test.jpg)\n\n\n1\n\n\ngithub上如果引用其他github仓库中的图片则要注意地址格式：仓库地址/raw/分支名/图片路径 或 https://raw.githubusercontent.com/用户名/仓库名/分支名/图片路径\n\n![其他仓库的图片1](https://github.com/xugaoyi/vue-music/raw/master/src/common/image/default.png)\n或\n![其他仓库的图片2](https://raw.githubusercontent.com/xugaoyi/image_store/master/blog/md_logo.png)\n\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 十一、表格\n\n制作表格使用 |来分隔不同的单元格，使用-来分隔表头和其他行。\n\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n\n\n1\n2\n3\n4\n\n\n表头    表头\n单元格   单元格\n单元格   单元格\n\n对齐方式\n\n * -: 设置内容和标题栏居右对齐\n * :- 设置内容和标题栏居左对齐\n * :-: 设置内容和标题栏居中对齐\n\n| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n\n\n1\n2\n3\n4\n\n\n左对齐   右对齐   居中对齐\n单元格   单元格   单元格\n单元格   单元格   单元格\n\n\n# 十二、emoji表情包\n\nemoji表情英文名的前后加冒号，typore上先输入冒号再输入首字母有表情提示\n\n:smirk:\n\n\n1\n\n\n💋 😸🙈🐴 😏😊😃😄 ☀️\n\n更多表情名称请查看：表情包清单\n\n\n# 十三、其他技巧\n\n\n# 支持的 html 元素\n\n不在 markdown 语法涵盖范围之内的标签，都可以直接在文档里面用 html 撰写。\n\n目前支持的 html 元素有：<kbd> <b> <i> <em> <sup> <sub> <br>等等 ，如：\n\n使用 <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd> 重启电脑\n\n\n1\n\n\n使用 ctrl+alt+del 重启电脑\n\n我是使用b标签的加粗字体\n\n\n# 转义\n\nmarkdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用反斜杠转义字符：\n\n**未转义星号显示加粗**\n\\*\\* 转义显示星号 \\*\\*\n\n\n1\n2\n\n\n未转义星号显示加粗 ** 转义显示星号 **\n\nmarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n\\   反斜线\n`   反引号\n*   星号\n_   下划线\n{}  花括号\n[]  方括号\n()  小括号\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   感叹号\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n*** 以下部分在github或其他在线预览中暂未支持 ***\n\n----------------------------------------\n\n\n# 数学公式\n\n当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 tex 或 latex 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 mathjax 对数学公式进行渲染。如：\n\n$$\n\\mathbf{v}_1 \\times \\mathbf{v}_2 =  \\begin{vmatrix}\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\n\\frac{\\partial x}{\\partial u} &  \\frac{\\partial y}{\\partial u} & 0 \\\\\n\\frac{\\partial x}{\\partial v} &  \\frac{\\partial y}{\\partial v} & 0 \\\\\n\\end{vmatrix}\n$$tep1}{\\style{visibility:hidden}{(x+1)(x+1)}}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n$$ \\mathbf{v}_1 \\times \\mathbf{v}_2 = \\begin{vmatrix} \\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\ \\frac{\\partial x}{\\partial u} & \\frac{\\partial y}{\\partial u} & 0 \\ \\frac{\\partial x}{\\partial v} & \\frac{\\partial y}{\\partial v} & 0 \\ \\end{vmatrix} $$\n\n\n# 图表\n\n​```chart\n,budget,income,expenses,debt\njune,5000,8000,4000,6000\njuly,3000,1000,4000,3000\naug,5000,7000,6000,3000\nsep,7000,2000,3000,1000\noct,6000,5000,4000,2000\nnov,4000,3000,5000,\n\ntype: pie\ntitle: monthly revenue\nx.title: amount\ny.title: month\ny.suffix: $\n​```\n​```mermaid\nsequencediagram\na->>b: 是否已收到消息？\nb--\x3e>a: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n> 注：在typora中未支持\n\n\n# 流程图\n\n语法：\n​```mermaid\ngraph td\na[模块a] --\x3e|a1| b(模块b)\nb --\x3e c{判断条件c}\nc --\x3e|条件c1| d[模块d]\nc --\x3e|条件c2| e[模块e]\nc --\x3e|条件c3| f[模块f]\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n流程图相关文章：\n\nhttps://www.jianshu.com/p/b421cc723da5\n\nhttp://www.imooc.com/article/292708\n\n\n# 时序图\n\n​```mermaid\nsequencediagram\na->>b: 是否已收到消息？\nb--\x3e>a: 已收到消息\n​```\n\n\n1\n2\n3\n4\n5\n\n\n\n# 甘特图\n\n​```mermaid\ngantt\ntitle 甘特图\ndateformat  yyyy-mm-dd\nsection 项目a\n任务1           :a1, 2018-06-06, 30d\n任务2     :after a1  , 20d\nsection 项目b\n任务3      :2018-06-12  , 12d\n任务4      : 24d\n​```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n回到顶部",charsets:{cjk:!0}},{title:"npm常用命令",frontmatter:{title:"npm常用命令",date:"2019-12-25T14:27:01.000Z",permalink:"/pages/61f2f95fd7da14fd",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/03.npm%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",relativePath:"更多/01.技术文档/03.npm常用命令.md",key:"v-9e4d93be",path:"/pages/61f2f95fd7da14fd/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:14},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:5},{level:4,title:"检测是否安装及版本",slug:"检测是否安装及版本",normalizedTitle:"检测是否安装及版本",charIndex:173},{level:4,title:"生成package.json文件",slug:"生成package-json文件",normalizedTitle:"生成package.json文件",charIndex:218},{level:4,title:"安装模块",slug:"安装模块",normalizedTitle:"安装模块",charIndex:286},{level:4,title:"查看",slug:"查看",normalizedTitle:"查看",charIndex:758},{level:4,title:"更新模块",slug:"更新模块",normalizedTitle:"更新模块",charIndex:1070},{level:4,title:"卸载模块",slug:"卸载模块",normalizedTitle:"卸载模块",charIndex:1243},{level:4,title:"清空缓存",slug:"清空缓存",normalizedTitle:"清空缓存",charIndex:1352},{level:4,title:"使用淘宝镜像",slug:"使用淘宝镜像",normalizedTitle:"使用淘宝镜像",charIndex:1394},{level:4,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:278},{level:2,title:"使用技巧",slug:"使用技巧",normalizedTitle:"使用技巧",charIndex:1761},{level:4,title:"多次安装不成功尝试先清除缓存",slug:"多次安装不成功尝试先清除缓存",normalizedTitle:"多次安装不成功尝试先清除缓存",charIndex:1769},{level:4,title:"查看已安装的依赖包版本号",slug:"查看已安装的依赖包版本号",normalizedTitle:"查看已安装的依赖包版本号",charIndex:1812},{level:2,title:"npm发布包教程",slug:"npm发布包教程",normalizedTitle:"npm发布包教程",charIndex:1912},{level:2,title:"nrm的作用与使用",slug:"nrm的作用与使用",normalizedTitle:"nrm的作用与使用",charIndex:1935},{level:4,title:"nrm是什么？",slug:"nrm是什么",normalizedTitle:"nrm是什么？",charIndex:1948},{level:4,title:"nrm的安装",slug:"nrm的安装",normalizedTitle:"nrm的安装",charIndex:2030},{level:4,title:"nrm命令",slug:"nrm命令",normalizedTitle:"nrm命令",charIndex:2065},{level:4,title:"nrm使用",slug:"nrm使用",normalizedTitle:"nrm使用",charIndex:2340}],excerpt:'<h1 id="npm常用命令"><a class="header-anchor" href="#npm常用命令">#</a> npm常用命令</h1>\n<h2 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h2>\n<p>npm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：</p>\n<ul>\n<li>允许用户从npm服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。</li>\n</ul>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"简介 常用命令 检测是否安装及版本 生成package.json文件 安装模块 查看 更新模块 卸载模块 清空缓存 使用淘宝镜像 其他 使用技巧 多次安装不成功尝试先清除缓存 查看已安装的依赖包版本号 npm发布包教程 nrm的作用与使用 nrm是什么？ nrm的安装 nrm命令 nrm使用",content:'# npm常用命令\n\n\n# 简介\n\nnpm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：\n\n * 允许用户从npm服务器下载别人编写的第三方包到本地使用。\n * 允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。\n * 允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。\n\n\n# 常用命令\n\n# 检测是否安装及版本\n\nnpm -v # 显示版本号说明已经安装相应的版本\n\n\n1\n\n\n# 生成package.json文件\n\nnpm init\n\n\n1\n\n\n> package.json用来描述项目中用到的模块和其他信息\n\n# 安装模块\n\nnpm install # 安装package.json定义好的模块，简写 npm i\n\n# 安装包指定模块\nnpm i <ModuleName>\n\n# 全局安装\nnpm i <ModuleName> -g \n\n# 安装包的同时，将信息写入到package.json中的 dependencies 配置中\nnpm i <ModuleName> --save\n\n# 安装包的同时，将信息写入到package.json中的 devDependencies 配置中\nnpm i <ModuleName> --save-dev\n\n# 安装多模块\nnpm i <ModuleName1> <ModuleName2>\n\n# 安装方式参数：\n-save # 简写-S，加入到生产依赖中\n-save-dev # 简写-D，加入到开发依赖中\n-g # 全局安装 将安装包放在 /usr/local 下或者你 node 的安装目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 查看\n\n# 查看所有全局安装的包\nnpm ls -g\n\n# 查看本地项目中安装的包\nnpm ls\n\n# 查看包的 package.json文件\nnpm view <ModuleName>\n\n# 查看包的依赖关系\nnpm view <ModuleName> dependencies\n\n# 查看包的源文件地址\nnpm view <ModuleName> repository.url\n\n# 查看包所依赖的node版本\nnpm view <ModuleName> engines\n\n# 查看帮助\nnpm help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 更新模块\n\n# 更新本地模块\nnpm update <ModuleName>\n\n# 更新全局模块\nnpm update -g <ModuleName> # 更新全局软件包。\nnpm update -g # 更新所有的全局软件包。\nnpm outdated -g --depth=0 # 找出需要更新的包。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 卸载模块\n\n# 卸载本地模块\nnpm uninstall <ModuleName>\n\n# 卸载全局模块\nnpm uninstall -g <ModuleName> # 卸载全局软件包。\n\n\n1\n2\n3\n4\n5\n\n\n# 清空缓存\n\n# 清空npm缓存\nnpm cache clear\n\n\n1\n2\n\n\n# 使用淘宝镜像\n\n# 使用淘宝镜像\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n\n1\n2\n\n\n# 其他\n\n# 更改包内容后进行重建\nnpm rebuild <ModuleName>\n\n# 检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新\nnpm outdated\n\n# 访问npm的json文件，此命令将会打开一个网页\nnpm help json\n\n# 发布一个包的时候，需要检验某个包名是否存在\nnpm search <ModuleName>\n\n# 撤销自己发布过的某个版本代码\nnpm unpublish <package> <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 使用技巧\n\n# 多次安装不成功尝试先清除缓存\n\nnpm cache clean -f\n\n\n1\n\n\n# 查看已安装的依赖包版本号\n\nnpm ls <ModuleName>\n\n\n1\n\n\n> 注意：用此方法才能准确的知道项目使用的版本号，查看package.json时，有“^" 符号表示大于此版本\n\n\n# npm发布包教程\n\nnpm发布包教程\n\n\n# nrm的作用与使用\n\n# nrm是什么？\n\nnrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换\n\n# nrm的安装\n\nnpm install -g nrm\n\n\n1\n\n\n# nrm命令\n\nnrm ls　#查看可用的源（有*号的表示当前所使用的源,以下<registry>表示源的名称）\nnrm use <registry> # 将npm下载源切换成指定的源\nnrm add <registry> <url> # 添加源，url为源的路径\nnrm del <registry> # 删除源\nnrm test <registry> # 测试源的响应时间，可以作为使用哪个源的参考\n\nnrm help　# 查看nrm帮助\nnrm home <registry>　# 跳转到指定源的官网\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# nrm使用\n\n如果在你的网络不太理想或者受到其他网络限制导致不能使用npm原本的源进行下载时，nrm就非常有用了，你只需要：\n\nnrm ls # 查看可用的源\nnrm use <registry>　# 切换到指定源\n\n\n1\n2\n',normalizedContent:'# npm常用命令\n\n\n# 简介\n\nnpm是跟随node一起安装的包（模块）管理器。常见的使用场景有以下几种：\n\n * 允许用户从npm服务器下载别人编写的第三方包到本地使用。\n * 允许用户从npm服务器下载并安装别人编写的命令行程序到本地使用。\n * 允许用户将自己编写的包或命令行程序上传到npm服务器供别人使用。\n\n\n# 常用命令\n\n# 检测是否安装及版本\n\nnpm -v # 显示版本号说明已经安装相应的版本\n\n\n1\n\n\n# 生成package.json文件\n\nnpm init\n\n\n1\n\n\n> package.json用来描述项目中用到的模块和其他信息\n\n# 安装模块\n\nnpm install # 安装package.json定义好的模块，简写 npm i\n\n# 安装包指定模块\nnpm i <modulename>\n\n# 全局安装\nnpm i <modulename> -g \n\n# 安装包的同时，将信息写入到package.json中的 dependencies 配置中\nnpm i <modulename> --save\n\n# 安装包的同时，将信息写入到package.json中的 devdependencies 配置中\nnpm i <modulename> --save-dev\n\n# 安装多模块\nnpm i <modulename1> <modulename2>\n\n# 安装方式参数：\n-save # 简写-s，加入到生产依赖中\n-save-dev # 简写-d，加入到开发依赖中\n-g # 全局安装 将安装包放在 /usr/local 下或者你 node 的安装目录\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n# 查看\n\n# 查看所有全局安装的包\nnpm ls -g\n\n# 查看本地项目中安装的包\nnpm ls\n\n# 查看包的 package.json文件\nnpm view <modulename>\n\n# 查看包的依赖关系\nnpm view <modulename> dependencies\n\n# 查看包的源文件地址\nnpm view <modulename> repository.url\n\n# 查看包所依赖的node版本\nnpm view <modulename> engines\n\n# 查看帮助\nnpm help\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n# 更新模块\n\n# 更新本地模块\nnpm update <modulename>\n\n# 更新全局模块\nnpm update -g <modulename> # 更新全局软件包。\nnpm update -g # 更新所有的全局软件包。\nnpm outdated -g --depth=0 # 找出需要更新的包。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 卸载模块\n\n# 卸载本地模块\nnpm uninstall <modulename>\n\n# 卸载全局模块\nnpm uninstall -g <modulename> # 卸载全局软件包。\n\n\n1\n2\n3\n4\n5\n\n\n# 清空缓存\n\n# 清空npm缓存\nnpm cache clear\n\n\n1\n2\n\n\n# 使用淘宝镜像\n\n# 使用淘宝镜像\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n\n1\n2\n\n\n# 其他\n\n# 更改包内容后进行重建\nnpm rebuild <modulename>\n\n# 检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新\nnpm outdated\n\n# 访问npm的json文件，此命令将会打开一个网页\nnpm help json\n\n# 发布一个包的时候，需要检验某个包名是否存在\nnpm search <modulename>\n\n# 撤销自己发布过的某个版本代码\nnpm unpublish <package> <version>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 使用技巧\n\n# 多次安装不成功尝试先清除缓存\n\nnpm cache clean -f\n\n\n1\n\n\n# 查看已安装的依赖包版本号\n\nnpm ls <modulename>\n\n\n1\n\n\n> 注意：用此方法才能准确的知道项目使用的版本号，查看package.json时，有“^" 符号表示大于此版本\n\n\n# npm发布包教程\n\nnpm发布包教程\n\n\n# nrm的作用与使用\n\n# nrm是什么？\n\nnrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换\n\n# nrm的安装\n\nnpm install -g nrm\n\n\n1\n\n\n# nrm命令\n\nnrm ls　#查看可用的源（有*号的表示当前所使用的源,以下<registry>表示源的名称）\nnrm use <registry> # 将npm下载源切换成指定的源\nnrm add <registry> <url> # 添加源，url为源的路径\nnrm del <registry> # 删除源\nnrm test <registry> # 测试源的响应时间，可以作为使用哪个源的参考\n\nnrm help　# 查看nrm帮助\nnrm home <registry>　# 跳转到指定源的官网\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# nrm使用\n\n如果在你的网络不太理想或者受到其他网络限制导致不能使用npm原本的源进行下载时，nrm就非常有用了，你只需要：\n\nnrm ls # 查看可用的源\nnrm use <registry>　# 切换到指定源\n\n\n1\n2\n',charsets:{cjk:!0}},{title:"npm packageJson属性详解",frontmatter:{author:{name:"xugaoyi",link:null},title:"npm packageJson属性详解",date:"2020-04-08T17:16:38.000Z",permalink:"/pages/dec4f3f00e71a312",categories:["技术","技术文档"],tags:[null]},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/10.npm%20packageJson%E5%B1%9E%E6%80%A7%E8%AF%A6%E8%A7%A3.html",relativePath:"更多/01.技术文档/10.npm packageJson属性详解.md",key:"v-3435f36a",path:"/pages/dec4f3f00e71a312/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:86},{level:2,title:"name",slug:"name",normalizedTitle:"name",charIndex:160},{level:2,title:"version",slug:"version",normalizedTitle:"version",charIndex:191},{level:2,title:"description",slug:"description",normalizedTitle:"description",charIndex:1036},{level:2,title:"keywords",slug:"keywords",normalizedTitle:"keywords",charIndex:1081},{level:2,title:"homepage",slug:"homepage",normalizedTitle:"homepage",charIndex:1114},{level:2,title:"bugs",slug:"bugs",normalizedTitle:"bugs",charIndex:1266},{level:2,title:"license",slug:"license",normalizedTitle:"license",charIndex:1496},{level:2,title:"和用户相关的属性: author, contributors",slug:"和用户相关的属性-author-contributors",normalizedTitle:"和用户相关的属性: author, contributors",charIndex:1666},{level:2,title:"files",slug:"files",normalizedTitle:"files",charIndex:2037},{level:2,title:"main",slug:"main",normalizedTitle:"main",charIndex:2013},{level:2,title:"bin",slug:"bin",normalizedTitle:"bin",charIndex:2444},{level:2,title:"man",slug:"man",normalizedTitle:"man",charIndex:3180},{level:2,title:"directories",slug:"directories",normalizedTitle:"directories",charIndex:4055},{level:3,title:"directories.lib",slug:"directories-lib",normalizedTitle:"directories.lib",charIndex:4211},{level:3,title:"directories.bin",slug:"directories-bin",normalizedTitle:"directories.bin",charIndex:4282},{level:3,title:"directories.man",slug:"directories-man",normalizedTitle:"directories.man",charIndex:4383},{level:3,title:"directories.doc",slug:"directories-doc",normalizedTitle:"directories.doc",charIndex:4440},{level:3,title:"directories.example",slug:"directories-example",normalizedTitle:"directories.example",charIndex:4514},{level:2,title:"repository",slug:"repository",normalizedTitle:"repository",charIndex:4561},{level:2,title:"scripts",slug:"scripts",normalizedTitle:"scripts",charIndex:5066},{level:2,title:"config",slug:"config",normalizedTitle:"config",charIndex:146},{level:2,title:"dependencies",slug:"dependencies",normalizedTitle:"dependencies",charIndex:1017},{level:2,title:"URLs as Dependencies",slug:"urls-as-dependencies",normalizedTitle:"urls as dependencies",charIndex:6629},{level:2,title:"Git URLs as Dependencies",slug:"git-urls-as-dependencies",normalizedTitle:"git urls as dependencies",charIndex:6706},{level:2,title:"GitHub URLs",slug:"github-urls",normalizedTitle:"github urls",charIndex:7059},{level:2,title:"Local Paths",slug:"local-paths",normalizedTitle:"local paths",charIndex:7300},{level:2,title:"devDependencies",slug:"devdependencies",normalizedTitle:"devdependencies",charIndex:7631},{level:2,title:"peerDependencies",slug:"peerdependencies",normalizedTitle:"peerdependencies",charIndex:8354},{level:2,title:"bundledDependencies",slug:"bundleddependencies",normalizedTitle:"bundleddependencies",charIndex:8793},{level:2,title:"optionalDependencies",slug:"optionaldependencies",normalizedTitle:"optionaldependencies",charIndex:8870},{level:2,title:"engines",slug:"engines",normalizedTitle:"engines",charIndex:594},{level:2,title:"engineStrict",slug:"enginestrict",normalizedTitle:"enginestrict",charIndex:9646},{level:2,title:"os",slug:"os",normalizedTitle:"os",charIndex:1394},{level:2,title:"cpu",slug:"cpu",normalizedTitle:"cpu",charIndex:9846},{level:2,title:"preferGlobal",slug:"preferglobal",normalizedTitle:"preferglobal",charIndex:9962},{level:2,title:"private",slug:"private",normalizedTitle:"private",charIndex:10079},{level:2,title:"publishConfig",slug:"publishconfig",normalizedTitle:"publishconfig",charIndex:10172},{level:2,title:"DEFAULT VALUES",slug:"default-values",normalizedTitle:"default values",charIndex:10286},{level:2,title:"参考文档列表(https://docs.npmjs.com/)",slug:"参考文档列表-https-docs-npmjs-com",normalizedTitle:"参考文档列表(https://docs.npmjs.com/)",charIndex:10599}],excerpt:'<h1 id="npm-package-json属性详解"><a class="header-anchor" href="#npm-package-json属性详解">#</a> npm package.json属性详解</h1>\n<blockquote>\n<p>本文转自<a href="https://www.cnblogs.com/tzyy/p/5193811.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/tzyy/p/5193811.html<OutboundLink/></a>，作者：TZYY</p>\n</blockquote>\n<h2 id="概述"><a class="header-anchor" href="#概述">#</a> 概述</h2>\n<p><code>package.json</code>必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过<code>npm-config</code>来生成</p>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"概述 name version description keywords homepage bugs license 和用户相关的属性: author, contributors files main bin man directories directories.lib directories.bin directories.man directories.doc directories.example repository scripts config dependencies URLs as Dependencies Git URLs as Dependencies GitHub URLs Local Paths devDependencies peerDependencies bundledDependencies optionalDependencies engines engineStrict os cpu preferGlobal private publishConfig DEFAULT VALUES 参考文档列表(https://docs.npmjs.com/)",content:'# npm package.json属性详解\n\n> 本文转自https://www.cnblogs.com/tzyy/p/5193811.html，作者：TZYY\n\n\n# 概述\n\npackage.json必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过npm-config来生成\n\n\n# name\n\npackage.json中最重要的属性是name和version两个属性，这两个属性是必须要有的，否则模块就无法被安装，这两个属性一起形成了一个npm模块的唯一标识符。模块中内容变更的同时，模块版本也应该一起变化。 name属性就是你的模块名称，下面是一些命名规则:\n\n * name必须小于等于214个字节，包括前缀名称在内（如 xxx/xxxmodule）。\n\n * name不能以"_"或"."开头\n\n * 不能含有大写字母\n\n * name会成为url的一部分，不能含有url非法字符\n   \n   下面是官网文档的一些建议：\n\n * 不要使用和node核心模块一样的名称\n\n * name中不要含有"js"和"node"。 It\'s assumed that it\'s js, since you\'re writing a package.json file, and you can specify the engine using the "engines" field. (See below.)\n\n * name属性会成为模块url、命令行中的一个参数或者一个文件夹名称，任何非url安全的字符在name中都不能使用，也不能以"_"或"."开头\n\n * name属性也许会被写在require()的参数中，所以最好取个简短而语义化的值。\n\n * 创建一个模块前可以先到后边的网址查查name是否已经被占用. https://www.npmjs.com/\n   \n   * # 发布一个包的时候，需要检验某个包名是否存在\n     npm search <ModuleName>\n     \n     \n     1\n     2\n     \n\nname属性可以有一些前缀如 e.g. @myorg/mypackage.在npm-scope(7)的文档中可以看到详细说明\n\n\n# version\n\nversion必须可以被npm依赖的一个node-semver模块解析。具体规则见下面的dependencies模块\n\n\n# description\n\n一个描述，方便别人了解你的模块作用，搜索的时候也有用。\n\n\n# keywords\n\n一个字符串数组，方便别人搜索到本模块\n\n\n# homepage\n\n项目主页url 注意: 这个项目主页url和url属性不同，如果你填写了url属性，npm注册工具会认为你把项目发布到其他地方了，获取模块的时候不会从npm官方仓库获取，而是会重定向到url属性配置的地址。 （原文档中用了 spit(吐)这个单词，作者表示他不是在开玩笑:）\n\n\n# bugs\n\n填写一个bug提交地址或者一个邮箱，被你的模块坑到的人可以通过这里吐槽，例如：\n\n{\n    "url" : "https://github.com/owner/project/issues",\n    "email" : "project@hostname.com"\n}\n\n\n1\n2\n3\n4\n\n\nurl和email可以任意填或不填，如果只填一个，可以直接写成一个字符串而不是对象。如果填写了url，npm bugs命令会使用这个url。\n\n\n# license\n\n你应该为你的模块制定一个协议，让用户知道他们有何权限来使用你的模块，以及使用该模块有哪些限制。最简单的，例如你用BSD-3-Clause 或 MIT之类的协议，如下：\n\n{ "license" : "MIT" }\n\n\n1\n\n\n你可以在https://spdx.org/licenses/ 这个地址查阅协议列表 。\n\n\n# 和用户相关的属性: author, contributors\n\nauthor是一个码农， contributors是一个码农数组。 person是一个有一些描述属性的对象，如下 like this:\n\n{\n    "name" : "Barney Rubble",\n    "email" : "b@rubble.com",\n    "url" : "http://barnyrubble.tumblr.com/"\n}\n\n\n1\n2\n3\n4\n5\n\n\n也可以按如下格式缩写，npm会帮着转换:\n\n"Barney Rubble b@rubble.com (http://barnyrubble.tumblr.com/)"\n\n\n1\n\n\nemail和url属性实际上都是可以省略的。描述用户信息的还有一个maintainers（维护者）属性。\n\n\n# files\n\nfiles属性的值是一个数组，内容是模块下文件名或者文件夹名，如果是文件夹名，则文件夹下所有的文件也会被包含进来（除非文件被另一些配置排除了） 你也可以在模块根目录下创建一个.npmignore文件（windows下无法直接创建以"."开头的文件，使用linux命令行工具创建如git bash），写在这个文件里边的文件即便被写在files属性里边也会被排除在外，这个文件的写法".gitignore"类似。\n\n\n# main\n\nmain属性指定了程序的主入口文件。意思是，如果你的模块被命名为foo，用户安装了这个模块并通过require("foo")来使用这个模块，那么require返回的内容就是main属性指定的文件中 module.exports指向的对象。 它应该指向模块根目录下的一个文件。对大对数模块而言，这个属性更多的是让模块有一个主入口文件，然而很多模块并不写这个属性。\n\n\n# bin\n\n很多模块有一个或多个需要配置到PATH路径下的可执行模块，npm让这个工作变得十分简单（实际上npm本身也是通过bin属性安装为一个可执行命令的） 如果要用npm的这个功能，在package.json里边配置一个bin属性。bin属性是一个已命令名称为key，本地文件名称为value的map如下：\n\n{\n    "bin" : { "myapp" : "./cli.js" }\n}\n\n\n1\n2\n3\n\n\n模块安装的时候，若是全局安装，则npm会为bin中配置的文件在bin目录下创建一个软连接（对于windows系统，默认会在C:\\Users\\username\\AppData\\Roaming\\npm目录下），若是局部安装，则会在项目内的./node_modules/.bin/目录下创建一个软链接。 因此，按上面的例子，当你安装myapp的时候，npm就会为cli.js在/usr/local/bin/myapp路径创建一个软链接。 如果你的模块只有一个可执行文件，并且它的命令名称和模块名称一样，你可以只写一个字符串来代替上面那种配置，例如：\n\n{ \n    "name": "my-program",\n    "version": "1.2.5", \n    "bin": "./path/to/program"\n}\n\n\n1\n2\n3\n4\n5\n\n\n作用和如下写法相同:\n\n{ \n    "name": "my-program", \n    "version": "1.2.5", \n    "bin" : { \n        "my-program" : "./path/to/program" \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# man\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称。例如:\n\n{\n    "name" : "foo",\n    "version" : "1.2.3", \n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : "./man/doc.1"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n通过man foo命令会得到 ./man/doc.1 文件的内容。 如果man文件名称不是以模块名称开头的，安装的时候会给加上模块名称前缀。因此，下面这段配置：\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3", \n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建一些文件来作为man foo和man foo-bar命令的结果。 man文件必须以数字结尾，或者如果被压缩了，以.gz结尾。数字表示文件将被安装到man的哪个部分。\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3",\n    "description" : "A packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/foo.2" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建 man foo 和 man 2 foo 两条命令。\n\n\n# directories\n\nCommonJs通过directories来制定一些方法来描述模块的结构，看看npm的package.json文件https://registry.npmjs.org/npm/latest ，可以发现里边有这个字段的内容。 目前这个配置没有任何作用，将来可能会整出一些花样来。\n\n\n# directories.lib\n\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n\n# directories.bin\n\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n\n# directories.man\n\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n\n# directories.doc\n\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n\n# directories.example\n\n放一些示例脚本，或许某一天会有用 - -！\n\n\n# repository\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助。像这样：\n\n"repository" :\n  {\n      "type" : "git",\n      "url" : "https://github.com/npm/npm.git"\n  }\n\n"repository" :\n  { \n      "type" : "svn", \n      "url" : "https://v8.googlecode.com/svn/trunk/"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n若你的模块放在GitHub, GitHub gist, Bitbucket, or GitLab的仓库里，npm install的时候可以使用缩写标记来完成：\n\n"repository": "npm/npm"\n\n"repository": "gist:11081aaa281"\n\n"repository": "bitbucket:example/repo"\n\n"repository": "gitlab:another/repo"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# scripts\n\nscripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令。key是生命周期中的事件，value是要执行的命令。 具体的内容有 install start stop 等，详见 https://docs.npmjs.com/misc/scripts\n\n\n# config\n\n用来设置一些项目不怎么变化的项目配置，例如port等。 用户用的时候可以使用如下用法：\n\nhttp.createServer(...).listen(process.env.npm_package_config_port)\n\n\n1\n\n\n可以通过npm config set foo:port 80来修改config。详见https://docs.npmjs.com/misc/config\n\n{ \n    "name" : "foo", \n    "config" : { "port" : "8080" }\n}\n\n\n1\n2\n3\n4\n\n\n\n# dependencies\n\ndependencies属性是一个对象，配置模块依赖的模块列表，key是模块名称，value是版本范围，版本范围是一个字符，可以被一个或多个空格分割。 dependencies也可以被指定为一个git地址或者一个压缩包地址。 不要把测试工具或transpilers写到dependencies中。 下面是一些写法，详见https://docs.npmjs.com/misc/semver\n\n * version 精确匹配版本\n * >version 必须大于某个版本\n * >=version 大于等于\n * <version 小于\n * <=versionversion 小于\n * ~version "约等于"，具体规则详见semver文档\n * ^version "兼容版本"具体规则详见semver文档\n * 1.2.x 仅一点二点几的版本\n * http://... 见下面url作为denpendencies的说明\n * * 任何版本\n * "" 空字符，和*相同\n * version1 - version2 相当于 >=version1 <=version2.\n * range1 || range2 范围1和范围2满足任意一个都行\n * git... 见下面git url作为denpendencies的说明\n * user/repo See 见下面GitHub仓库的说明\n * tag 发布的一个特殊的标签，见npm-tag的文档 https://docs.npmjs.com/getting-started/using-tags\n * path/path/path 见下面本地模块的说明 下面的写法都是可以的:\n\n{ "dependencies" :\n  { "foo" : "1.0.0 - 2.9999.9999"\n  , "bar" : ">=1.0.2 <2.1.2"\n  , "baz" : ">1.0.2 <=2.3.4"\n  , "boo" : "2.0.1"\n  , "qux" : "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"\n  , "asd" : "http://asdf.com/asdf.tar.gz"\n  , "til" : "~1.2"\n  , "elf" : "~1.2.3"\n  , "two" : "2.x"\n  , "thr" : "3.3.x"\n  , "lat" : "latest"\n  , "dyl" : "file:../dyl"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# URLs as Dependencies\n\n在版本范围的地方可以写一个url指向一个压缩包，模块安装的时候会把这个压缩包下载下来安装到模块本地。\n\n\n# Git URLs as Dependencies\n\nGit url可以像下面一样:\n\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n\n\n1\n2\n3\n4\n5\n\n\ncommit-ish 可以是任意标签，哈希值，或者可以检出的分支，默认是master分支。\n\n\n# GitHub URLs\n\n支持github的 username/modulename 的写法，#后边可以加后缀写明分支hash或标签：\n\n{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "visionmedia/express",\n    "mocha": "visionmedia/mocha#4727d357ea"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Local Paths\n\nnpm2.0.0版本以上可以提供一个本地路径来安装一个本地的模块，通过npm install xxx --save 来安装，格式如下：\n\n../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n\n\n1\n2\n3\n4\n\n\npackage.json 生成的相对路径如下:\n\n{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n这种属性在离线开发或者测试需要用npm install的情况，又不想自己搞一个npm server的时候有用，但是发布模块到公共仓库时不应该使用这种属性。\n\n\n# devDependencies\n\n如果有人想要下载并使用你的模块，也许他们并不希望或需要下载一些你在开发过程中使用的额外的测试或者文档框架。 在这种情况下，最好的方法是把这些依赖添加到devDependencies属性的对象中。 这些模块会在npm link或者npm install的时候被安装，也可以像其他npm配置一样被管理，详见npm的config文档。 对于一些跨平台的构建任务，例如把CoffeeScript编译成JavaScript，就可以通过在package.json的script属性里边配置prepublish脚本来完成这个任务，然后需要依赖的coffee-script模块就写在devDependencies属性种。 例如:\n\n{ "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devDependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepublish": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nprepublish脚本会在发布之前运行，因此用户在使用之前就不用再自己去完成编译的过程了。在开发模式下，运行npm install也会执行这个脚本（见npm script文档），因此可以很方便的调试。\n\n\n# peerDependencies\n\n有时候做一些插件开发，比如grunt等工具的插件，它们往往是在grunt的某个版本的基础上开发的，而在他们的代码中并不会出现require("grunt")这样的依赖，dependencies配置里边也不会写上grunt的依赖，为了说明此模块只能作为插件跑在宿主的某个版本范围下，可以配置peerDependencies：\n\n{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerDependencies": {\n    "tea": "2.x"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面这个配置确保再npm install的时候tea-latte会和2.x版本的tea一起安装，而且它们两个的依赖关系是同级的： ├── tea-latte@1.3.5 └── tea@2.2.0 这个配置的目的是让npm知道，如果要使用此插件模块，请确保安装了兼容版本的宿主模块。\n\n\n# bundledDependencies\n\n上面的单词少个d，写成bundleDependencies也可以。 指定发布的时候会被一起打包的模块。\n\n\n# optionalDependencies\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionalDependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败。 当然，这种模块就需要你自己在代码中处理模块确实的情况了，例如：\n\ntry {\n  var foo = require(\'foo\')\n  var fooVersion = require(\'foo/package.json\').version\n} catch (er) {\n  foo = null\n}\nif ( notGoodFooVersion(fooVersion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.doFooThings()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\noptionalDependencies 中的配置会覆盖dependencies中的配置，最好只在一个地方写。\n\n\n# engines\n\n你可以指定项目运行的node版本范围，如下： { "engines" : { "node" : ">=0.10.3 <0.12" } } 和dependencies一样，如果你不指定版本范围或者指定为*，任何版本的node都可以。 也可以指定一些npm版本可以正确的安装你的模块，例如： { "engines" : { "npm" : "~1.0.20" } } 要注意的是，除非你设置了engine-strict属性，engines属性是仅供参考的。\n\n\n# engineStrict\n\n注意：这个属性已经弃用，将在npm 3.0.0 版本干掉。\n\n\n# os\n\n可以指定你的模块只能在哪个操作系统上跑： "os" : [ "darwin", "linux" ] 也可以指定黑名单而不是白名单： "os" : [ "!win32" ] 服务的操作系统是由process.platform来判断的，这个属性允许黑白名单同时存在，虽然没啥必要这样搞...\n\n\n# cpu\n\n限制模块只能在某某cpu架构下运行 "cpu" : [ "x64", "ia32" ] 同样可以设置黑名单: "cpu" : [ "!arm", "!mips" ] cpu架构通过 process.arch 判断\n\n\n# preferGlobal\n\n如果您的软件包主要用于安装到全局的命令行应用程序，那么该值设置为true ，如果它被安装在本地，则提供一个警告。实际上该配置并没有阻止用户把模块安装到本地，只是防止该模块被错误的使用引起一些问题。\n\n\n# private\n\n如果这个属性被设置为true，npm将拒绝发布它，这是为了防止一个私有模块被无意间发布出去。如果你只想让模块被发布到一个特定的npm仓库，如一个内部的仓库，可与在下面的publishConfig中配置仓库参数。\n\n\n# publishConfig\n\n这个配置是会在模块发布时用到的一些值的集合。如果你不想模块被默认被标记为最新的，或者默认发布到公共仓库，可以在这里配置tag或仓库地址。\n\n\n# DEFAULT VALUES\n\nnpm设置了一些默认参数，如： "scripts": {"start": "node server.js"} 如果模块根目录下有一个server.js文件，那么npm start会默认运行这个文件。 "scripts":{"preinstall": "node-gyp rebuild"} 如果模块根目录下有binding.gyp, npm将默认用node-gyp来编译preinstall的脚本 "contributors": [...] 若模块根目录下有AUTHORS 文件，则npm会按Name (url)格式解析每一行的数据添加到contributors中，可以用#添加行注释\n\n\n# 参考文档列表(https://docs.npmjs.com/)\n\nsemver(7) npm-init(1) npm-version(1) npm-config(1) npm-config(7) npm-help(1) npm-faq(7) npm-install(1) npm-publish(1) npm-rm(1)',normalizedContent:'# npm package.json属性详解\n\n> 本文转自https://www.cnblogs.com/tzyy/p/5193811.html，作者：tzyy\n\n\n# 概述\n\npackage.json必须是一个严格的json文件，而不仅仅是js里边的一个对象。其中很多属性可以通过npm-config来生成\n\n\n# name\n\npackage.json中最重要的属性是name和version两个属性，这两个属性是必须要有的，否则模块就无法被安装，这两个属性一起形成了一个npm模块的唯一标识符。模块中内容变更的同时，模块版本也应该一起变化。 name属性就是你的模块名称，下面是一些命名规则:\n\n * name必须小于等于214个字节，包括前缀名称在内（如 xxx/xxxmodule）。\n\n * name不能以"_"或"."开头\n\n * 不能含有大写字母\n\n * name会成为url的一部分，不能含有url非法字符\n   \n   下面是官网文档的一些建议：\n\n * 不要使用和node核心模块一样的名称\n\n * name中不要含有"js"和"node"。 it\'s assumed that it\'s js, since you\'re writing a package.json file, and you can specify the engine using the "engines" field. (see below.)\n\n * name属性会成为模块url、命令行中的一个参数或者一个文件夹名称，任何非url安全的字符在name中都不能使用，也不能以"_"或"."开头\n\n * name属性也许会被写在require()的参数中，所以最好取个简短而语义化的值。\n\n * 创建一个模块前可以先到后边的网址查查name是否已经被占用. https://www.npmjs.com/\n   \n   * # 发布一个包的时候，需要检验某个包名是否存在\n     npm search <modulename>\n     \n     \n     1\n     2\n     \n\nname属性可以有一些前缀如 e.g. @myorg/mypackage.在npm-scope(7)的文档中可以看到详细说明\n\n\n# version\n\nversion必须可以被npm依赖的一个node-semver模块解析。具体规则见下面的dependencies模块\n\n\n# description\n\n一个描述，方便别人了解你的模块作用，搜索的时候也有用。\n\n\n# keywords\n\n一个字符串数组，方便别人搜索到本模块\n\n\n# homepage\n\n项目主页url 注意: 这个项目主页url和url属性不同，如果你填写了url属性，npm注册工具会认为你把项目发布到其他地方了，获取模块的时候不会从npm官方仓库获取，而是会重定向到url属性配置的地址。 （原文档中用了 spit(吐)这个单词，作者表示他不是在开玩笑:）\n\n\n# bugs\n\n填写一个bug提交地址或者一个邮箱，被你的模块坑到的人可以通过这里吐槽，例如：\n\n{\n    "url" : "https://github.com/owner/project/issues",\n    "email" : "project@hostname.com"\n}\n\n\n1\n2\n3\n4\n\n\nurl和email可以任意填或不填，如果只填一个，可以直接写成一个字符串而不是对象。如果填写了url，npm bugs命令会使用这个url。\n\n\n# license\n\n你应该为你的模块制定一个协议，让用户知道他们有何权限来使用你的模块，以及使用该模块有哪些限制。最简单的，例如你用bsd-3-clause 或 mit之类的协议，如下：\n\n{ "license" : "mit" }\n\n\n1\n\n\n你可以在https://spdx.org/licenses/ 这个地址查阅协议列表 。\n\n\n# 和用户相关的属性: author, contributors\n\nauthor是一个码农， contributors是一个码农数组。 person是一个有一些描述属性的对象，如下 like this:\n\n{\n    "name" : "barney rubble",\n    "email" : "b@rubble.com",\n    "url" : "http://barnyrubble.tumblr.com/"\n}\n\n\n1\n2\n3\n4\n5\n\n\n也可以按如下格式缩写，npm会帮着转换:\n\n"barney rubble b@rubble.com (http://barnyrubble.tumblr.com/)"\n\n\n1\n\n\nemail和url属性实际上都是可以省略的。描述用户信息的还有一个maintainers（维护者）属性。\n\n\n# files\n\nfiles属性的值是一个数组，内容是模块下文件名或者文件夹名，如果是文件夹名，则文件夹下所有的文件也会被包含进来（除非文件被另一些配置排除了） 你也可以在模块根目录下创建一个.npmignore文件（windows下无法直接创建以"."开头的文件，使用linux命令行工具创建如git bash），写在这个文件里边的文件即便被写在files属性里边也会被排除在外，这个文件的写法".gitignore"类似。\n\n\n# main\n\nmain属性指定了程序的主入口文件。意思是，如果你的模块被命名为foo，用户安装了这个模块并通过require("foo")来使用这个模块，那么require返回的内容就是main属性指定的文件中 module.exports指向的对象。 它应该指向模块根目录下的一个文件。对大对数模块而言，这个属性更多的是让模块有一个主入口文件，然而很多模块并不写这个属性。\n\n\n# bin\n\n很多模块有一个或多个需要配置到path路径下的可执行模块，npm让这个工作变得十分简单（实际上npm本身也是通过bin属性安装为一个可执行命令的） 如果要用npm的这个功能，在package.json里边配置一个bin属性。bin属性是一个已命令名称为key，本地文件名称为value的map如下：\n\n{\n    "bin" : { "myapp" : "./cli.js" }\n}\n\n\n1\n2\n3\n\n\n模块安装的时候，若是全局安装，则npm会为bin中配置的文件在bin目录下创建一个软连接（对于windows系统，默认会在c:\\users\\username\\appdata\\roaming\\npm目录下），若是局部安装，则会在项目内的./node_modules/.bin/目录下创建一个软链接。 因此，按上面的例子，当你安装myapp的时候，npm就会为cli.js在/usr/local/bin/myapp路径创建一个软链接。 如果你的模块只有一个可执行文件，并且它的命令名称和模块名称一样，你可以只写一个字符串来代替上面那种配置，例如：\n\n{ \n    "name": "my-program",\n    "version": "1.2.5", \n    "bin": "./path/to/program"\n}\n\n\n1\n2\n3\n4\n5\n\n\n作用和如下写法相同:\n\n{ \n    "name": "my-program", \n    "version": "1.2.5", \n    "bin" : { \n        "my-program" : "./path/to/program" \n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# man\n\n制定一个或通过数组制定一些文件来让linux下的man命令查找文档地址。 如果只有一个文件被指定的话，安装后直接使用man+模块名称，而不管man指定的文件的实际名称。例如:\n\n{\n    "name" : "foo",\n    "version" : "1.2.3", \n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : "./man/doc.1"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n通过man foo命令会得到 ./man/doc.1 文件的内容。 如果man文件名称不是以模块名称开头的，安装的时候会给加上模块名称前缀。因此，下面这段配置：\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3", \n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建一些文件来作为man foo和man foo-bar命令的结果。 man文件必须以数字结尾，或者如果被压缩了，以.gz结尾。数字表示文件将被安装到man的哪个部分。\n\n{ \n    "name" : "foo", \n    "version" : "1.2.3",\n    "description" : "a packaged foo fooer for fooing foos", \n    "main" : "foo.js", \n    "man" : [ "./man/foo.1", "./man/foo.2" ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n会创建 man foo 和 man 2 foo 两条命令。\n\n\n# directories\n\ncommonjs通过directories来制定一些方法来描述模块的结构，看看npm的package.json文件https://registry.npmjs.org/npm/latest ，可以发现里边有这个字段的内容。 目前这个配置没有任何作用，将来可能会整出一些花样来。\n\n\n# directories.lib\n\n告诉用户模块中lib目录在哪，这个配置目前没有任何作用，但是对使用模块的人来说是一个很有用的信息。\n\n\n# directories.bin\n\n如果你在这里指定了bin目录，这个配置下面的文件会被加入到bin路径下，如果你已经在package.json中配置了bin目录，那么这里的配置将不起任何作用。\n\n\n# directories.man\n\n指定一个目录，目录里边都是man文件，这是一种配置man文件的语法糖。\n\n\n# directories.doc\n\n在这个目录里边放一些markdown文件，可能最终有一天它们会被友好的展现出来（应该是在npm的网站上）\n\n\n# directories.example\n\n放一些示例脚本，或许某一天会有用 - -！\n\n\n# repository\n\n指定一个代码存放地址，对想要为你的项目贡献代码的人有帮助。像这样：\n\n"repository" :\n  {\n      "type" : "git",\n      "url" : "https://github.com/npm/npm.git"\n  }\n\n"repository" :\n  { \n      "type" : "svn", \n      "url" : "https://v8.googlecode.com/svn/trunk/"\n  }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n若你的模块放在github, github gist, bitbucket, or gitlab的仓库里，npm install的时候可以使用缩写标记来完成：\n\n"repository": "npm/npm"\n\n"repository": "gist:11081aaa281"\n\n"repository": "bitbucket:example/repo"\n\n"repository": "gitlab:another/repo"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# scripts\n\nscripts属性是一个对象，里边指定了项目的生命周期个各个环节需要执行的命令。key是生命周期中的事件，value是要执行的命令。 具体的内容有 install start stop 等，详见 https://docs.npmjs.com/misc/scripts\n\n\n# config\n\n用来设置一些项目不怎么变化的项目配置，例如port等。 用户用的时候可以使用如下用法：\n\nhttp.createserver(...).listen(process.env.npm_package_config_port)\n\n\n1\n\n\n可以通过npm config set foo:port 80来修改config。详见https://docs.npmjs.com/misc/config\n\n{ \n    "name" : "foo", \n    "config" : { "port" : "8080" }\n}\n\n\n1\n2\n3\n4\n\n\n\n# dependencies\n\ndependencies属性是一个对象，配置模块依赖的模块列表，key是模块名称，value是版本范围，版本范围是一个字符，可以被一个或多个空格分割。 dependencies也可以被指定为一个git地址或者一个压缩包地址。 不要把测试工具或transpilers写到dependencies中。 下面是一些写法，详见https://docs.npmjs.com/misc/semver\n\n * version 精确匹配版本\n * >version 必须大于某个版本\n * >=version 大于等于\n * <version 小于\n * <=versionversion 小于\n * ~version "约等于"，具体规则详见semver文档\n * ^version "兼容版本"具体规则详见semver文档\n * 1.2.x 仅一点二点几的版本\n * http://... 见下面url作为denpendencies的说明\n * * 任何版本\n * "" 空字符，和*相同\n * version1 - version2 相当于 >=version1 <=version2.\n * range1 || range2 范围1和范围2满足任意一个都行\n * git... 见下面git url作为denpendencies的说明\n * user/repo see 见下面github仓库的说明\n * tag 发布的一个特殊的标签，见npm-tag的文档 https://docs.npmjs.com/getting-started/using-tags\n * path/path/path 见下面本地模块的说明 下面的写法都是可以的:\n\n{ "dependencies" :\n  { "foo" : "1.0.0 - 2.9999.9999"\n  , "bar" : ">=1.0.2 <2.1.2"\n  , "baz" : ">1.0.2 <=2.3.4"\n  , "boo" : "2.0.1"\n  , "qux" : "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"\n  , "asd" : "http://asdf.com/asdf.tar.gz"\n  , "til" : "~1.2"\n  , "elf" : "~1.2.3"\n  , "two" : "2.x"\n  , "thr" : "3.3.x"\n  , "lat" : "latest"\n  , "dyl" : "file:../dyl"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# urls as dependencies\n\n在版本范围的地方可以写一个url指向一个压缩包，模块安装的时候会把这个压缩包下载下来安装到模块本地。\n\n\n# git urls as dependencies\n\ngit url可以像下面一样:\n\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n\n\n1\n2\n3\n4\n5\n\n\ncommit-ish 可以是任意标签，哈希值，或者可以检出的分支，默认是master分支。\n\n\n# github urls\n\n支持github的 username/modulename 的写法，#后边可以加后缀写明分支hash或标签：\n\n{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "visionmedia/express",\n    "mocha": "visionmedia/mocha#4727d357ea"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# local paths\n\nnpm2.0.0版本以上可以提供一个本地路径来安装一个本地的模块，通过npm install xxx --save 来安装，格式如下：\n\n../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n\n\n1\n2\n3\n4\n\n\npackage.json 生成的相对路径如下:\n\n{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n这种属性在离线开发或者测试需要用npm install的情况，又不想自己搞一个npm server的时候有用，但是发布模块到公共仓库时不应该使用这种属性。\n\n\n# devdependencies\n\n如果有人想要下载并使用你的模块，也许他们并不希望或需要下载一些你在开发过程中使用的额外的测试或者文档框架。 在这种情况下，最好的方法是把这些依赖添加到devdependencies属性的对象中。 这些模块会在npm link或者npm install的时候被安装，也可以像其他npm配置一样被管理，详见npm的config文档。 对于一些跨平台的构建任务，例如把coffeescript编译成javascript，就可以通过在package.json的script属性里边配置prepublish脚本来完成这个任务，然后需要依赖的coffee-script模块就写在devdependencies属性种。 例如:\n\n{ "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devdependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepublish": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nprepublish脚本会在发布之前运行，因此用户在使用之前就不用再自己去完成编译的过程了。在开发模式下，运行npm install也会执行这个脚本（见npm script文档），因此可以很方便的调试。\n\n\n# peerdependencies\n\n有时候做一些插件开发，比如grunt等工具的插件，它们往往是在grunt的某个版本的基础上开发的，而在他们的代码中并不会出现require("grunt")这样的依赖，dependencies配置里边也不会写上grunt的依赖，为了说明此模块只能作为插件跑在宿主的某个版本范围下，可以配置peerdependencies：\n\n{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerdependencies": {\n    "tea": "2.x"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n上面这个配置确保再npm install的时候tea-latte会和2.x版本的tea一起安装，而且它们两个的依赖关系是同级的： ├── tea-latte@1.3.5 └── tea@2.2.0 这个配置的目的是让npm知道，如果要使用此插件模块，请确保安装了兼容版本的宿主模块。\n\n\n# bundleddependencies\n\n上面的单词少个d，写成bundledependencies也可以。 指定发布的时候会被一起打包的模块。\n\n\n# optionaldependencies\n\n如果一个依赖模块可以被使用， 同时你也希望在该模块找不到或无法获取时npm继续运行，你可以把这个模块依赖放到optionaldependencies配置中。这个配置的写法和dependencies的写法一样，不同的是这里边写的模块安装失败不会导致npm install失败。 当然，这种模块就需要你自己在代码中处理模块确实的情况了，例如：\n\ntry {\n  var foo = require(\'foo\')\n  var fooversion = require(\'foo/package.json\').version\n} catch (er) {\n  foo = null\n}\nif ( notgoodfooversion(fooversion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.dofoothings()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\noptionaldependencies 中的配置会覆盖dependencies中的配置，最好只在一个地方写。\n\n\n# engines\n\n你可以指定项目运行的node版本范围，如下： { "engines" : { "node" : ">=0.10.3 <0.12" } } 和dependencies一样，如果你不指定版本范围或者指定为*，任何版本的node都可以。 也可以指定一些npm版本可以正确的安装你的模块，例如： { "engines" : { "npm" : "~1.0.20" } } 要注意的是，除非你设置了engine-strict属性，engines属性是仅供参考的。\n\n\n# enginestrict\n\n注意：这个属性已经弃用，将在npm 3.0.0 版本干掉。\n\n\n# os\n\n可以指定你的模块只能在哪个操作系统上跑： "os" : [ "darwin", "linux" ] 也可以指定黑名单而不是白名单： "os" : [ "!win32" ] 服务的操作系统是由process.platform来判断的，这个属性允许黑白名单同时存在，虽然没啥必要这样搞...\n\n\n# cpu\n\n限制模块只能在某某cpu架构下运行 "cpu" : [ "x64", "ia32" ] 同样可以设置黑名单: "cpu" : [ "!arm", "!mips" ] cpu架构通过 process.arch 判断\n\n\n# preferglobal\n\n如果您的软件包主要用于安装到全局的命令行应用程序，那么该值设置为true ，如果它被安装在本地，则提供一个警告。实际上该配置并没有阻止用户把模块安装到本地，只是防止该模块被错误的使用引起一些问题。\n\n\n# private\n\n如果这个属性被设置为true，npm将拒绝发布它，这是为了防止一个私有模块被无意间发布出去。如果你只想让模块被发布到一个特定的npm仓库，如一个内部的仓库，可与在下面的publishconfig中配置仓库参数。\n\n\n# publishconfig\n\n这个配置是会在模块发布时用到的一些值的集合。如果你不想模块被默认被标记为最新的，或者默认发布到公共仓库，可以在这里配置tag或仓库地址。\n\n\n# default values\n\nnpm设置了一些默认参数，如： "scripts": {"start": "node server.js"} 如果模块根目录下有一个server.js文件，那么npm start会默认运行这个文件。 "scripts":{"preinstall": "node-gyp rebuild"} 如果模块根目录下有binding.gyp, npm将默认用node-gyp来编译preinstall的脚本 "contributors": [...] 若模块根目录下有authors 文件，则npm会按name (url)格式解析每一行的数据添加到contributors中，可以用#添加行注释\n\n\n# 参考文档列表(https://docs.npmjs.com/)\n\nsemver(7) npm-init(1) npm-version(1) npm-config(1) npm-config(7) npm-help(1) npm-faq(7) npm-install(1) npm-publish(1) npm-rm(1)',charsets:{cjk:!0}},{title:"yaml语言教程",frontmatter:{title:"yaml语言教程",date:"2022-07-25T14:27:01.000Z",permalink:"/pages/4e8444e2d534d14f",categories:["技术","技术文档"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/15.yaml%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B.html",relativePath:"更多/01.技术文档/15.yaml语言教程.md",key:"v-ac040994",path:"/pages/4e8444e2d534d14f/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:15},{level:2,title:"基本语法",slug:"基本语法",normalizedTitle:"基本语法",charIndex:326},{level:2,title:"数据类型",slug:"数据类型",normalizedTitle:"数据类型",charIndex:422},{level:2,title:"YAML 对象",slug:"yaml-对象",normalizedTitle:"yaml 对象",charIndex:576},{level:2,title:"YAML 数组",slug:"yaml-数组",normalizedTitle:"yaml 数组",charIndex:1086},{level:2,title:"复合结构（对象和数组组合）",slug:"复合结构-对象和数组组合",normalizedTitle:"复合结构（对象和数组组合）",charIndex:1594},{level:2,title:"纯量",slug:"纯量",normalizedTitle:"纯量",charIndex:549},{level:2,title:"转换数据格式",slug:"转换数据格式",normalizedTitle:"转换数据格式",charIndex:3050},{level:2,title:"锚点引用",slug:"锚点引用",normalizedTitle:"锚点引用",charIndex:3157}],excerpt:'<h1 id="yaml语言教程"><a class="header-anchor" href="#yaml语言教程">#</a> yaml语言教程</h1>\n<h2 id="简介"><a class="header-anchor" href="#简介">#</a> 简介</h2>\n<p>YAML 是 &quot;YAML Ain\'t a Markup Language&quot;（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：&quot;Yet Another Markup Language&quot;（仍是一种标记语言）。</p>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"简介 基本语法 数据类型 YAML 对象 YAML 数组 复合结构（对象和数组组合） 纯量 转换数据格式 锚点引用",content:"# yaml语言教程\n\n\n# 简介\n\nYAML 是 \"YAML Ain't a Markup Language\"（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种标记语言）。\n\nYAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和YAML非常接近）。\n\nYAML 的配置文件后缀为 .yml，如：runoob.yml 。\n\n> yaml常用来用作配置文件，和json类似\n\n\n# 基本语法\n\n * 大小写敏感\n\n * 使用缩进表示层级关系\n\n * 缩进不允许使用tab，只允许空格\n\n * 缩进的空格数不重要，只要相同层级的元素左对齐即可\n\n * '#'表示注释\n\n\n# 数据类型\n\nYAML 支持以下几种数据类型：\n\n * 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n * 数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）\n * 纯量（scalars）：单个的、不可再分的值\n\n\n# YAML 对象\n\n对象的几种表示形式：\n\n1、对象键值对使用冒号结构表示 key: value，冒号后面要加一个空格。\n\nkey: value\n\n\n1\n\n\n2、也可以使用 key:{key1: value1, key2: value2, ...}。\n\nkey:{child-key1:value1,child-key2:value2}\n\n\n1\n\n\n3、还可以使用缩进表示层级关系；\n\nkey: \n    child-key1: value1\n    child-key2: value2\n\n\n1\n2\n3\n\n\n同2，只是表示形式不同。\n\n4、较为复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value：\n\n?  \n    - complexkey1\n    - complexkey2\n:\n    - complexvalue1\n    - complexvalue2\n\n\n1\n2\n3\n4\n5\n6\n\n\n意思即对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]\n\n\n# YAML 数组\n\n以 - 开头的行表示构成一个数组：\n\n- A\n- B\n- C\n\n\n1\n2\n3\n\n\nYAML 支持多维数组，可以使用行内表示：\n\nkey: [value1, value2, ...]\n\n\n1\n\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n-\n - A\n - B\n - C\n\n\n1\n2\n3\n4\n\n\n一个相对复杂的例子：\n\ncompanies:\n    -\n        id: 1\n        name: company1\n        price: 200W\n    -\n        id: 2\n        name: company2\n        price: 500W\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。\n\n数组也可以使用流式(flow)的方式表示：\n\ncompanies: [{id: 1,name: company1,price: 200W},{id: 2,name: company2,price: 500W}]\n\n\n1\n\n\n\n# 复合结构（对象和数组组合）\n\n数组和对象可以构成复合结构，例：\n\nlanguages:\n  - Ruby\n  - Perl\n  - Python \nwebsites:\n  YAML: yaml.org \n  Ruby: ruby-lang.org \n  Python: python.org \n  Perl: use.perl.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转换为 js 为：\n\n{ \n  languages: [ 'Ruby', 'Perl', 'Python'],\n  websites: {\n    YAML: 'yaml.org',\n    Ruby: 'ruby-lang.org',\n    Python: 'python.org',\n    Perl: 'use.perl.org' \n  } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 纯量\n\n纯量是最基本的，不可再分的值，包括：\n\n * 字符串\n * 布尔值\n * 整数\n * 浮点数\n * Null\n * 时间\n * 日期\n\n使用一个例子来快速了解纯量的基本使用：\n\nboolean: # 布尔值\n    - TRUE  #true,True都可以\n    - FALSE  #false，False都可以\nfloat: # 浮点数\n    - 3.14\n    - 6.8523015e+5  #可以使用科学计数法\nint: # 整数\n    - 123\n    - 0b1010_0111_0100_1010_1110    #二进制表示\nnull: # Null\n    nodeName: 'node'\n    parent: ~  #使用~表示null\nstring: # 字符串\n    - 哈哈 # 字符串默认不使用引号表示\n    - 'Hello world'  #可以使用双引号或者单引号包裹特殊字符\n    - newline\n      newline2    #字符串可以拆成多行，每一行会被转化成一个空格\ndate:\n    - 2018-02-17    #日期必须使用ISO 8601格式，即yyyy-MM-dd\ndatetime: \n    -  2018-02-17T15:02:31+08:00    #时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n多行字符串可以使用|保留换行符，也可以使用>折叠换行。\n\nthis: |\n  Foo\n  Bar\nthat: >\n  Foo\n  Bar\n\n\n1\n2\n3\n4\n5\n6\n\n\n转为js代码如下。\n\n{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }\n\n\n1\n\n\n+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。\n\ns1: |\n  Foo\n \ns2: |+\n  Foo\n \n \ns3: |-\n  Foo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转为json代码如下\n\n{ s1: 'Foo\\n', s2: 'Foo\\n\\n\\n', s3: 'Foo' }\n\n\n1\n\n\n字符串之中可以插入 HTML 标记。\n\nmessage: |\n  <p style=\"color: red\">\n    段落\n  </p>\n\n\n1\n2\n3\n4\n\n\n\n# 转换数据格式\n\n允许使用两个感叹号，强制转换数据类型。\n\ne: !!str 123\nf: !!str true\n\n\n1\n2\n\n\n转换js结果同：\n\n{ e: '123', f: 'true' }\n\n\n1\n\n\n\n# 锚点引用\n\n& 锚点和< span class=\"marked\">* 别名，可以用来引用:\n\ndefaults: &defaults # 添加锚点\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults # <<表示合并，*引用锚点\n\ntest:\n  database: myapp_test\n  <<: *defaults # <<表示合并，*引用锚点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n相当于:\n\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n& 用来建立锚点（defaults），<< 表示合并到当前数据，***** 用来引用锚点。\n\n下面是另一个例子:\n\n- &showell Steve \n- Clark \n- Brian \n- Oren \n- *showell \n\n\n1\n2\n3\n4\n5\n\n\n转为js代码如下:\n\n[ 'Steve', 'Clark', 'Brian', 'Oren', 'Steve' ]\n\n\n1\n\n\n> 参考：\n> \n>  * yaml官网：https://yaml.org/\n>  * yaml与js的转换demo：http://nodeca.github.io/js-yaml/\n>  * 菜鸟教程：https://www.ruanyifeng.com/blog/2016/07/yaml.html",normalizedContent:"# yaml语言教程\n\n\n# 简介\n\nyaml 是 \"yaml ain't a markup language\"（yaml 不是一种标记语言）的递归缩写。在开发的这种语言时，yaml 的意思其实是：\"yet another markup language\"（仍是一种标记语言）。\n\nyaml 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和yaml非常接近）。\n\nyaml 的配置文件后缀为 .yml，如：runoob.yml 。\n\n> yaml常用来用作配置文件，和json类似\n\n\n# 基本语法\n\n * 大小写敏感\n\n * 使用缩进表示层级关系\n\n * 缩进不允许使用tab，只允许空格\n\n * 缩进的空格数不重要，只要相同层级的元素左对齐即可\n\n * '#'表示注释\n\n\n# 数据类型\n\nyaml 支持以下几种数据类型：\n\n * 对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）\n * 数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）\n * 纯量（scalars）：单个的、不可再分的值\n\n\n# yaml 对象\n\n对象的几种表示形式：\n\n1、对象键值对使用冒号结构表示 key: value，冒号后面要加一个空格。\n\nkey: value\n\n\n1\n\n\n2、也可以使用 key:{key1: value1, key2: value2, ...}。\n\nkey:{child-key1:value1,child-key2:value2}\n\n\n1\n\n\n3、还可以使用缩进表示层级关系；\n\nkey: \n    child-key1: value1\n    child-key2: value2\n\n\n1\n2\n3\n\n\n同2，只是表示形式不同。\n\n4、较为复杂的对象格式，可以使用问号加一个空格代表一个复杂的 key，配合一个冒号加一个空格代表一个 value：\n\n?  \n    - complexkey1\n    - complexkey2\n:\n    - complexvalue1\n    - complexvalue2\n\n\n1\n2\n3\n4\n5\n6\n\n\n意思即对象的属性是一个数组 [complexkey1,complexkey2]，对应的值也是一个数组 [complexvalue1,complexvalue2]\n\n\n# yaml 数组\n\n以 - 开头的行表示构成一个数组：\n\n- a\n- b\n- c\n\n\n1\n2\n3\n\n\nyaml 支持多维数组，可以使用行内表示：\n\nkey: [value1, value2, ...]\n\n\n1\n\n\n数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。\n\n-\n - a\n - b\n - c\n\n\n1\n2\n3\n4\n\n\n一个相对复杂的例子：\n\ncompanies:\n    -\n        id: 1\n        name: company1\n        price: 200w\n    -\n        id: 2\n        name: company2\n        price: 500w\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n意思是 companies 属性是一个数组，每一个数组元素又是由 id、name、price 三个属性构成。\n\n数组也可以使用流式(flow)的方式表示：\n\ncompanies: [{id: 1,name: company1,price: 200w},{id: 2,name: company2,price: 500w}]\n\n\n1\n\n\n\n# 复合结构（对象和数组组合）\n\n数组和对象可以构成复合结构，例：\n\nlanguages:\n  - ruby\n  - perl\n  - python \nwebsites:\n  yaml: yaml.org \n  ruby: ruby-lang.org \n  python: python.org \n  perl: use.perl.org\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转换为 js 为：\n\n{ \n  languages: [ 'ruby', 'perl', 'python'],\n  websites: {\n    yaml: 'yaml.org',\n    ruby: 'ruby-lang.org',\n    python: 'python.org',\n    perl: 'use.perl.org' \n  } \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 纯量\n\n纯量是最基本的，不可再分的值，包括：\n\n * 字符串\n * 布尔值\n * 整数\n * 浮点数\n * null\n * 时间\n * 日期\n\n使用一个例子来快速了解纯量的基本使用：\n\nboolean: # 布尔值\n    - true  #true,true都可以\n    - false  #false，false都可以\nfloat: # 浮点数\n    - 3.14\n    - 6.8523015e+5  #可以使用科学计数法\nint: # 整数\n    - 123\n    - 0b1010_0111_0100_1010_1110    #二进制表示\nnull: # null\n    nodename: 'node'\n    parent: ~  #使用~表示null\nstring: # 字符串\n    - 哈哈 # 字符串默认不使用引号表示\n    - 'hello world'  #可以使用双引号或者单引号包裹特殊字符\n    - newline\n      newline2    #字符串可以拆成多行，每一行会被转化成一个空格\ndate:\n    - 2018-02-17    #日期必须使用iso 8601格式，即yyyy-mm-dd\ndatetime: \n    -  2018-02-17t15:02:31+08:00    #时间使用iso 8601格式，时间和日期之间使用t连接，最后使用+代表时区\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n多行字符串可以使用|保留换行符，也可以使用>折叠换行。\n\nthis: |\n  foo\n  bar\nthat: >\n  foo\n  bar\n\n\n1\n2\n3\n4\n5\n6\n\n\n转为js代码如下。\n\n{ this: 'foo\\nbar\\n', that: 'foo bar\\n' }\n\n\n1\n\n\n+表示保留文字块末尾的换行，-表示删除字符串末尾的换行。\n\ns1: |\n  foo\n \ns2: |+\n  foo\n \n \ns3: |-\n  foo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n转为json代码如下\n\n{ s1: 'foo\\n', s2: 'foo\\n\\n\\n', s3: 'foo' }\n\n\n1\n\n\n字符串之中可以插入 html 标记。\n\nmessage: |\n  <p style=\"color: red\">\n    段落\n  </p>\n\n\n1\n2\n3\n4\n\n\n\n# 转换数据格式\n\n允许使用两个感叹号，强制转换数据类型。\n\ne: !!str 123\nf: !!str true\n\n\n1\n2\n\n\n转换js结果同：\n\n{ e: '123', f: 'true' }\n\n\n1\n\n\n\n# 锚点引用\n\n& 锚点和< span class=\"marked\">* 别名，可以用来引用:\n\ndefaults: &defaults # 添加锚点\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  <<: *defaults # <<表示合并，*引用锚点\n\ntest:\n  database: myapp_test\n  <<: *defaults # <<表示合并，*引用锚点\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n相当于:\n\ndefaults:\n  adapter:  postgres\n  host:     localhost\n\ndevelopment:\n  database: myapp_development\n  adapter:  postgres\n  host:     localhost\n\ntest:\n  database: myapp_test\n  adapter:  postgres\n  host:     localhost\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n& 用来建立锚点（defaults），<< 表示合并到当前数据，***** 用来引用锚点。\n\n下面是另一个例子:\n\n- &showell steve \n- clark \n- brian \n- oren \n- *showell \n\n\n1\n2\n3\n4\n5\n\n\n转为js代码如下:\n\n[ 'steve', 'clark', 'brian', 'oren', 'steve' ]\n\n\n1\n\n\n> 参考：\n> \n>  * yaml官网：https://yaml.org/\n>  * yaml与js的转换demo：http://nodeca.github.io/js-yaml/\n>  * 菜鸟教程：https://www.ruanyifeng.com/blog/2016/07/yaml.html",charsets:{cjk:!0}},{title:"Git修改分支名",frontmatter:{title:"Git修改分支名",date:"2022-07-11T10:51:18.000Z",permalink:"/pages/922650/",categories:["技术","技术文档"],tags:["Git"],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/01.%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/20.Git%E4%BF%AE%E6%94%B9%E5%88%86%E6%94%AF%E5%90%8D.html",relativePath:"更多/01.技术文档/20.Git修改分支名.md",key:"v-38be6448",path:"/pages/922650/",headers:[{level:2,title:"同时修改本地分支名和对应的远程分支名",slug:"同时修改本地分支名和对应的远程分支名",normalizedTitle:"同时修改本地分支名和对应的远程分支名",charIndex:2}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"同时修改本地分支名和对应的远程分支名",content:"# 同时修改本地分支名和对应的远程分支名\n\n修改前要确保本地分支的代码是最新的，并且修改后不会影响到同事的代码。\n\n 1. 修改本地分支名\n\ngit branch -m oldBranchName newBranchName\n\n\n1\n\n 2. 删除远程分支\n\ngit push origin :oldBranchName\n# 或者 git push origin --delete oldBranchName\n\n\n1\n2\n\n 3. 改名后的本地分支推送到远程\n\ngit push --set-upstream origin newBranchName\n\n\n1\n",normalizedContent:"# 同时修改本地分支名和对应的远程分支名\n\n修改前要确保本地分支的代码是最新的，并且修改后不会影响到同事的代码。\n\n 1. 修改本地分支名\n\ngit branch -m oldbranchname newbranchname\n\n\n1\n\n 2. 删除远程分支\n\ngit push origin :oldbranchname\n# 或者 git push origin --delete oldbranchname\n\n\n1\n2\n\n 3. 改名后的本地分支推送到远程\n\ngit push --set-upstream origin newbranchname\n\n\n1\n",charsets:{cjk:!0}},{title:"2023杂录",frontmatter:{timeLinePage:!0,title:"2023杂录",article:!1,date:"2023-12-20T03:27:08.000Z",permalink:"/pages/d5f5a3/",author:{name:"dxzh",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/02.%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD/01.2023.html",relativePath:"更多/02.闲言碎语/01.2023.md",key:"v-67a6a4f3",path:"/pages/d5f5a3/",headersStr:null,content:'{ "2012年10月": { "date": "3月16日", "subTitle": "", "desc": "除了加班，还是加班，我讨厌加班！" }, "2022年12月": { "date": "4月18日", "subTitle": "", "desc": "摆烂似乎是近来很普遍的现象，可是我没有摆烂的资格，也还不想摆烂" }, "2023年05月": { "date": "5月27日", "subTitle": "离职感慨", "desc": "终于办完离职了，复杂的情绪开始涌现，每每到这时候，总能深切体会到：人来人往，相聚别离的感动和不舍。晚上与亦师亦友的杰哥一起吃饭聊天，一番玩乐后告了别。 杰哥是个非常优秀的人，他身上有太多闪光点了。我永远感激他对我的欣赏，以及工作中的各种帮助，希望以后我们相遇时，都站在更高处" }, "222sss3": { "date": "5月30日", "subTitle": "", "desc": "不想想太多，好好休息"\n\n},\n"8月22日": {\n    "date": "8月22日",\n    "subTitle": "",\n    "desc": "找个合适的房子都好难呀"\n},\n"09月08日": {\n    "date": "09月08日",\n    "subTitle": "",\n    "desc": "找工作，何时是个头"\n},\n"10月13日": {\n    "date": "10月13日",\n    "subTitle": "",\n    "desc": "年纪越大，越能体会到成年人的无奈。为了生活、为了家庭，为了...妥协，可是又能有什么办法呢"\n},\n"10月28日": {\n    "date": "10月28日",\n    "subTitle": "",\n    "desc": "无论如何，不能失了自信"\n},\n"12月16日": {\n    "date": "12月16日",\n    "subTitle": "",\n    "desc": "慢慢变成自己最讨厌的一类人，算是堕落还是一种突破或进化？"\n}\n\n\n}',normalizedContent:'{ "2012年10月": { "date": "3月16日", "subtitle": "", "desc": "除了加班，还是加班，我讨厌加班！" }, "2022年12月": { "date": "4月18日", "subtitle": "", "desc": "摆烂似乎是近来很普遍的现象，可是我没有摆烂的资格，也还不想摆烂" }, "2023年05月": { "date": "5月27日", "subtitle": "离职感慨", "desc": "终于办完离职了，复杂的情绪开始涌现，每每到这时候，总能深切体会到：人来人往，相聚别离的感动和不舍。晚上与亦师亦友的杰哥一起吃饭聊天，一番玩乐后告了别。 杰哥是个非常优秀的人，他身上有太多闪光点了。我永远感激他对我的欣赏，以及工作中的各种帮助，希望以后我们相遇时，都站在更高处" }, "222sss3": { "date": "5月30日", "subtitle": "", "desc": "不想想太多，好好休息"\n\n},\n"8月22日": {\n    "date": "8月22日",\n    "subtitle": "",\n    "desc": "找个合适的房子都好难呀"\n},\n"09月08日": {\n    "date": "09月08日",\n    "subtitle": "",\n    "desc": "找工作，何时是个头"\n},\n"10月13日": {\n    "date": "10月13日",\n    "subtitle": "",\n    "desc": "年纪越大，越能体会到成年人的无奈。为了生活、为了家庭，为了...妥协，可是又能有什么办法呢"\n},\n"10月28日": {\n    "date": "10月28日",\n    "subtitle": "",\n    "desc": "无论如何，不能失了自信"\n},\n"12月16日": {\n    "date": "12月16日",\n    "subtitle": "",\n    "desc": "慢慢变成自己最讨厌的一类人，算是堕落还是一种突破或进化？"\n}\n\n\n}',charsets:{cjk:!0}},{title:"2分钟规则",frontmatter:{title:"2分钟规则",date:"2020-11-09T11:05:29.000Z",permalink:"/pages/baaa02/",categories:["更多","实用技巧"],tags:["实用技巧","文摘"],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/03.%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/01.2%E5%88%86%E9%92%9F%E8%A7%84%E5%88%99.html",relativePath:"更多/03.实用技巧/01.2分钟规则.md",key:"v-191e087c",path:"/pages/baaa02/",excerpt:"<p>每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。</p>\n<ul>\n<li>看一本书 → 看一页书</li>\n<li>写一篇文章 → 写一句话</li>\n<li>跑10公里 → 穿上跑鞋</li>\n<li>做100次俯卧撑 → 做1次俯卧撑</li>\n<li>多吃蔬菜水果 → 吃一个水果</li>\n<li>编写一个程序 → 编写一个函数 → 编写一行代码</li>\n</ul>\n",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。\n\n * 看一本书 → 看一页书\n * 写一篇文章 → 写一句话\n * 跑10公里 → 穿上跑鞋\n * 做100次俯卧撑 → 做1次俯卧撑\n * 多吃蔬菜水果 → 吃一个水果\n * 编写一个程序 → 编写一个函数 → 编写一行代码\n\n这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。\n\n * 阅读一页 → 阅读10页 → 读完第一章\n * 写一个句子 → 写文章的开头 → 写出正文\n * 穿上跑鞋 → 步行5分钟 → 跑步5分钟\n\n一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。\n\n> 本文摘录自 https://hoanhan.co/2-minute-rule",normalizedContent:"每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。\n\n * 看一本书 → 看一页书\n * 写一篇文章 → 写一句话\n * 跑10公里 → 穿上跑鞋\n * 做100次俯卧撑 → 做1次俯卧撑\n * 多吃蔬菜水果 → 吃一个水果\n * 编写一个程序 → 编写一个函数 → 编写一行代码\n\n这样做的目的是使上手变得超级容易，让你先上手再说。一旦开始做了（这可能是最艰难的一步），你就会开始有动力，可能会继续做下去。\n\n * 阅读一页 → 阅读10页 → 读完第一章\n * 写一个句子 → 写文章的开头 → 写出正文\n * 穿上跑鞋 → 步行5分钟 → 跑步5分钟\n\n一旦开始，继续做下去就会容易得多。有时，你甚至会发现，自己在不知不觉间已经完成了任务。\n\n> 本文摘录自 https://hoanhan.co/2-minute-rule",charsets:{cjk:!0}},{title:"费曼学习法",frontmatter:{title:"费曼学习法",date:"2021-07-16T10:04:14.000Z",permalink:"/pages/f2a556/",categories:["更多","学习"],tags:["学习方法"],author:{name:"dxzh",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/00.%E8%B4%B9%E6%9B%BC%E5%AD%A6%E4%B9%A0%E6%B3%95.html",relativePath:"更多/04.学习/00.费曼学习法.md",key:"v-654b00f2",path:"/pages/f2a556/",headers:[{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:102}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"步骤",content:"费曼学习法，我很喜欢的一个学习方法，简单来说，就是：通过向别人清楚的解说某一件事或是写一篇浅显易懂的教程文章，来确认自己是否真正弄懂了这件事。 可以说是在通过向别讲解过程中来对自身的 查缺补漏。\n\n\n# 步骤\n\n费曼学习法分为4个步骤:\n\n 1. 确定学习目标\n\n你想学习的概念、内容、主题是什么。\n\n 2. 模拟教学学习法\n\n你要模拟自己是一位老师，面对完全不懂这个领域的人，用自己的话，尽可能具体形象地讲诉。这样的讲诉有助于你活学活用，触类旁通，联系生活具体情境。\n\n 3. 回顾\n\n反思第2步遇到的问题，哪些地方卡壳了，哪些地方对方没有真正听懂。找出问题的要害，把握关键环节。\n\n 4. 简化\n\n把这些遇到问题的地方，重新梳理理解，尽可能了解更多背景和相关知识，再用尽可能简化的方式重新表达，设法看穿本质。然后，返回第2步。\n\n> 参考：\n> \n> 《费曼学习法：为何被称为史上最牛的学习法，它的本质究竟是什么？》\n> \n> 《费曼学习法》",normalizedContent:"费曼学习法，我很喜欢的一个学习方法，简单来说，就是：通过向别人清楚的解说某一件事或是写一篇浅显易懂的教程文章，来确认自己是否真正弄懂了这件事。 可以说是在通过向别讲解过程中来对自身的 查缺补漏。\n\n\n# 步骤\n\n费曼学习法分为4个步骤:\n\n 1. 确定学习目标\n\n你想学习的概念、内容、主题是什么。\n\n 2. 模拟教学学习法\n\n你要模拟自己是一位老师，面对完全不懂这个领域的人，用自己的话，尽可能具体形象地讲诉。这样的讲诉有助于你活学活用，触类旁通，联系生活具体情境。\n\n 3. 回顾\n\n反思第2步遇到的问题，哪些地方卡壳了，哪些地方对方没有真正听懂。找出问题的要害，把握关键环节。\n\n 4. 简化\n\n把这些遇到问题的地方，重新梳理理解，尽可能了解更多背景和相关知识，再用尽可能简化的方式重新表达，设法看穿本质。然后，返回第2步。\n\n> 参考：\n> \n> 《费曼学习法：为何被称为史上最牛的学习法，它的本质究竟是什么？》\n> \n> 《费曼学习法》",charsets:{cjk:!0}},{title:"笔记方法",frontmatter:{title:"笔记方法",date:"2020-07-16T11:00:55.000Z",permalink:"/pages/e60c81/",categories:["更多","学习"],tags:["笔记方法"],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/01.%E7%AC%94%E8%AE%B0%E6%96%B9%E6%B3%95.html",relativePath:"更多/04.学习/01.笔记方法.md",key:"v-6e3a7659",path:"/pages/e60c81/",headers:[{level:2,title:"康奈尔笔记法",slug:"康奈尔笔记法",normalizedTitle:"康奈尔笔记法",charIndex:2},{level:2,title:"思维导图法",slug:"思维导图法",normalizedTitle:"思维导图法",charIndex:15},{level:2,title:"金三角笔记法",slug:"金三角笔记法",normalizedTitle:"金三角笔记法",charIndex:27},{level:2,title:"曼陀罗九宫格笔记法",slug:"曼陀罗九宫格笔记法",normalizedTitle:"曼陀罗九宫格笔记法",charIndex:40},{level:2,title:"记号记录法",slug:"记号记录法",normalizedTitle:"记号记录法",charIndex:56},{level:2,title:"六色笔记法",slug:"六色笔记法",normalizedTitle:"六色笔记法",charIndex:68},{level:2,title:"加工笔记法",slug:"加工笔记法",normalizedTitle:"加工笔记法",charIndex:80},{level:2,title:"整理笔记要点1-科学标记重点",slug:"整理笔记要点1-科学标记重点",normalizedTitle:"整理笔记要点1-科学标记重点",charIndex:92},{level:2,title:"整理笔记要点2-修改不涂改",slug:"整理笔记要点2-修改不涂改",normalizedTitle:"整理笔记要点2-修改不涂改",charIndex:113}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"康奈尔笔记法 思维导图法 金三角笔记法 曼陀罗九宫格笔记法 记号记录法 六色笔记法 加工笔记法 整理笔记要点1-科学标记重点 整理笔记要点2-修改不涂改",content:"# 康奈尔笔记法\n\n\n\n\n# 思维导图法\n\n\n\n\n# 金三角笔记法\n\n\n\n\n# 曼陀罗九宫格笔记法\n\n\n\n\n# 记号记录法\n\n\n\n\n# 六色笔记法\n\n\n\n\n# 加工笔记法\n\n\n\n\n# 整理笔记要点1-科学标记重点\n\n\n\n\n# 整理笔记要点2-修改不涂改\n\n",normalizedContent:"# 康奈尔笔记法\n\n\n\n\n# 思维导图法\n\n\n\n\n# 金三角笔记法\n\n\n\n\n# 曼陀罗九宫格笔记法\n\n\n\n\n# 记号记录法\n\n\n\n\n# 六色笔记法\n\n\n\n\n# 加工笔记法\n\n\n\n\n# 整理笔记要点1-科学标记重点\n\n\n\n\n# 整理笔记要点2-修改不涂改\n\n",charsets:{cjk:!0}},{title:"提高学习效率的策略",frontmatter:{title:"提高学习效率的策略",date:"2020-01-04T11:54:14.000Z",permalink:"/pages/a8692ab3bdcb4588",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/02.%E6%8F%90%E9%AB%98%E5%AD%A6%E4%B9%A0%E6%95%88%E7%8E%87%E7%9A%84%E7%AD%96%E7%95%A5.html",relativePath:"更多/04.学习/02.提高学习效率的策略.md",key:"v-6c07392f",path:"/pages/a8692ab3bdcb4588/",headers:[{level:3,title:"检索式学习",slug:"检索式学习",normalizedTitle:"检索式学习",charIndex:222},{level:3,title:"频繁的集中练习只会产生短期记忆",slug:"频繁的集中练习只会产生短期记忆",normalizedTitle:"频繁的集中练习只会产生短期记忆",charIndex:634},{level:3,title:"间隔练习使知识存储更牢固",slug:"间隔练习使知识存储更牢固",normalizedTitle:"间隔练习使知识存储更牢固",charIndex:958},{level:3,title:"穿插练习有助于长期记忆",slug:"穿插练习有助于长期记忆",normalizedTitle:"穿插练习有助于长期记忆",charIndex:1346},{level:3,title:"多样化练习促进知识的活学活用",slug:"多样化练习促进知识的活学活用",normalizedTitle:"多样化练习促进知识的活学活用",charIndex:1728},{level:3,title:"小总结",slug:"小总结",normalizedTitle:"小总结",charIndex:1918},{level:3,title:"知识的“滚雪球”效应",slug:"知识的-滚雪球-效应",normalizedTitle:"知识的“滚雪球”效应",charIndex:2183}],excerpt:'<h1 id="提高学习效率的策略"><a class="header-anchor" href="#提高学习效率的策略">#</a> 提高学习效率的策略</h1>\n<p>推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的<strong>检索练习</strong>——例如小的测试和自测，<strong>间隔练习</strong>、<strong>穿插</strong>不同但相关科目或技能的练习（<strong>多样化练习</strong>），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。</p>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"检索式学习 频繁的集中练习只会产生短期记忆 间隔练习使知识存储更牢固 穿插练习有助于长期记忆 多样化练习促进知识的活学活用 小总结 知识的“滚雪球”效应",content:"# 提高学习效率的策略\n\n推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的检索练习——例如小的测试和自测，间隔练习、穿插不同但相关科目或技能的练习（多样化练习），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。\n\n\n# 检索式学习\n\n练习从记忆中检索新知识或新技能是有效的学习工具，也是保持长久记忆的有力武器。但凡需要大脑记忆、需要在将来回忆的东西，都可以用到它——对于事实、复杂的概念、解决问题的技巧、运动技能来说都适用。\n\n那么到底什么是检索式学习呢？说说我理解的检索式学习：在脑中检索知识，比如课后的一个小测试、对某个知识点用笔默写出来，甚至去参加面试，等等，都可以理解为检索式学习。\n\n努力检索有助于人们获得更好的学习效果，产生更持久的记忆。我们很容易相信，学东西时越轻松，学习效果越好，但研究表明，事实恰恰相反。只有当头脑被迫工作时，才会将所学的东西记得更牢靠。在检索时所付出的努力越大——只要真正做到这一点检索就会更好地强化你的所学。在第一次检测后，推迟后续检索练习要比立即练习更能强化记忆，因为延迟后再检索需要会费更大力气。\n\n反复检索不仅能让记忆更持久，还能让知识在更多变的环境中更容易被检索，而且可以解决更多的问题。\n\n\n# 频繁的集中练习只会产生短期记忆\n\n人们顽固地相信，自己把心思放在一件事上，拼命重复就能学得更好，认为这些观点经受住了时间的考验，而且“练习，练习，再练习”的明显收效再次证明了这种方法的好处。但是，科学家们把习得技能阶段的这种成绩称为“暂时的优势”，并把它同“潜在的习惯优势”区分开来。形成习惯优势有种种技巧，例如有间隔的练习、有穿插内容的练习，以及多样化练习，这些技巧恰恰会放缓有明显成果的学习进程，它们不会在练习中提高我们的表现。我们从表面上看不到成绩提高，也就没有付出努力的动力（大多数人的学习心理就是这样，在看不到成果的时候容易失去动力）。填鸭式练习是集中练习的一种形式，它一直被比作贪食症——吃得不少，但没过多久基本上都吐出来了。\n\n\n# 间隔练习使知识存储更牢固\n\n把学习与练习间隔开来分期进行，让两者之间隔上一定时间，这样做就能让学习成果更加显著、记忆更加牢固，能有效地形成习惯优势。间隔多长时间才够？答案很简单：从最低限度上说，间隔的时间足够出现一点儿遗忘就对了。练习环节中间出现一点儿遗忘是好事，只要它能让人更加努力地练习就行。话说回来，你肯定不愿意忘掉太多东西，以至于检索最终变成了对资料的重新学习。间隔一段时间再练习能巩固记忆。睡眠似乎在巩固记忆的工作中扮演了重要角色，所以在两次练习间至少间隔一天应该是不错的做法。 要当心熟悉这个陷阱：你感觉自己明白了某样东西，觉得不再需要练习了。如果想走捷径，这种熟悉会让你在自测时受伤。道格拉斯·拉尔森说：“你必须自觉地说，好吧，我要强迫自己把这些全想起来，要是我想不起来，那我是忘掉了什么，我怎，么会不知道那个呢?’如果是教师出题测验，那就一下子变成你\n\n\n# 穿插练习有助于长期记忆\n\n穿插练习两样或更多的内容同样也提供了一种间隔。穿插内容练习有助于发展人们辨识不同问题的能力，也是在培养人们从不断增加的解决方案中寻找合适工具的能力。进行穿插内容练习，不能是完成一个科目的全部练习再跳到下一个科目。你需要在每个科目的练习完成前就跳到下一个科目。我们的一个朋友这样描述自己的经历，“我去上了一堂冰球课，学习滑冰、控球、射门。滑冰练习还没进行多长时间，自己刚刚有点儿上手的感觉，教练就转到控球练习上了，这让我感到非常沮丧。灰心地到家后，我说，‘为什么教练不让我们一次把技能练好呢？”其实他是遇上了少有的好教练。这位教练懂得分散精力练习不同技能要比下力气一次掌握一件事更有效果。球员感到沮丧是因为并没有在短时间内看到成果，但到下一周，无论是滑冰、控球，还是其他内容，他都会获得全面进步，效果会好于每次只专心练习一项技能。\n\n\n# 多样化练习促进知识的活学活用\n\n与穿插内容练习一样，多样化练习有助于学习者树立更开阔的心理模式。这是一种能力，掌握它的人可以评估不断变化的条件，并调整应对方式进行适应。可以说，穿插内容练习与多样化练习有助于学习者超越暂时性记忆，步入更高层次的概念性学习，并把它们应用到实际情景中，从而获得更全面、更深刻、更持久的学习效果。这些学习成果在运动技能中就表现为潜在的习惯优势。\n\n\n# 小总结\n\n有间隔、有内容穿插出现，以及内容多样化，其实就是我们生活的本来面貌。程序员每开发一个项目，都是一次测验，也是一次检索练习的锻炼。每次常规的拦车检查对于警察来说都是一次测验，而且每次检查都不一样，这会加强警察的外显记忆与内隐记忆。只要他上心，今后的工作就会更有效率。人们常说的一句话是“从经验中学习”。有些人似乎从来不学习，学与不学的一个区别可能就在于，人们是否培养了反思（总结）的习惯。反思（总结）是检索练习的一种形式（发生了什么？我是怎么做的？怎样才能有用？），而且辅以细化加强（下次我要采取别的什么方法？）\n\n\n# 知识的“滚雪球”效应\n\n学习的过程至少可以分成三步：最开始是对短期工作记忆中信息的编码。这时信息还没有被巩固成长期记忆中坚实的知识表征。巩固会辨识并稳定记忆线索，赋予其含义，把它们与过去的经验以及长期记忆中已经存储下来的其他知识联系起来。检索会更新所学的东西，并让你做到学以致用。\n\n学习总是建立在已知基础之上。我们是通过与已知建立联系这种方式来解读事件和记忆事件的。\n\n长期记忆的容量基本上是无限的。你知道得越多，就越有可能为新知识建立联系。\n\n由于长期记忆的容量颇大，所以关键是要有一种能力，让你在需要的时候锁定并回忆已知。回忆所学知识的难易程度取决于对信息的重复使用（保持检索路径不会被忘却），也取决于你是否建立起了强大的检索线索，因为它能重新激活你的记忆。\n\n阶段性地检索所学，有助于强化记忆间的联系，也能强化回忆知识的线索，同时还能弱化连通冲突记忆的路径。检索练习若是没什么难度，那就不能强化所学的知识；练习难度越大，收效才越大。\n\n当你从短期记忆中回忆所学时，例如快速频繁地进行练习，是不需要花什么心思的，也不会有长期性的收效。但当你过一段时间再回忆时，当你对所学的东西有些遗忘时，你就不得不努力重建这一切。这种耗费心力的检索既能强化记忆，又能让所学再次具有可塑性，引发对所学知识的再巩固。再巩固可以用新信息更新你的记忆，同时可以将它们与最近学到的东西联系起来。\n\n重复进行费力的回忆或是练习，有助于把所学的知识整合成心智模型。在心智模型中，一套彼此相关的概念或一系列运动技能被融会贯通，形成一个有意义的整体。它能适应随后的各种环境，并发挥作用。开车时的感知和操控就是一个例子。在面对弧线球时知道如何打出全垒打也是同一个道理。\n\n练习的条件如果发生了变化，或是在检索中穿插安排了对其他资料的练习，我们就能强化自己的辨析与归纳能力，凭借全面发展，我们还能把所学的知识用在以后的新环境中。穿插与多样化建立了新的联系，拓展并进一步深化了记忆中的知识，同时增加了检索线索的数量。、\n\n试着自己想出答案，而不是坐等别人给你答案，或是在拿到解决方案前自行尝试解决一个问题，会产生更好的学习效果，也能让你把正确的答案或解决方案记得更持久。即便有时你会犯错，只要有纠正性反馈就没问题。\n\n——以上内容摘自《认知天性》，结合本人的个人理解，更多内容请查看该书籍。\n\n",normalizedContent:"# 提高学习效率的策略\n\n推荐一本关于学习方法的书《认知天性》，里面有讲到有一些简单实用的学习策略，能让大家学的更好、记得更牢，而且这些策略人人可用，时时可用。这些方法包括各种形式的检索练习——例如小的测试和自测，间隔练习、穿插不同但相关科目或技能的练习（多样化练习），在别人教给你解决方案前自己先试着解决问题，从不同类型问题中提取基本原理和规则。由于学习是反复的过程，需要复习早先学过的东西，持续更新已知，并把它们和新知识联系起来。\n\n\n# 检索式学习\n\n练习从记忆中检索新知识或新技能是有效的学习工具，也是保持长久记忆的有力武器。但凡需要大脑记忆、需要在将来回忆的东西，都可以用到它——对于事实、复杂的概念、解决问题的技巧、运动技能来说都适用。\n\n那么到底什么是检索式学习呢？说说我理解的检索式学习：在脑中检索知识，比如课后的一个小测试、对某个知识点用笔默写出来，甚至去参加面试，等等，都可以理解为检索式学习。\n\n努力检索有助于人们获得更好的学习效果，产生更持久的记忆。我们很容易相信，学东西时越轻松，学习效果越好，但研究表明，事实恰恰相反。只有当头脑被迫工作时，才会将所学的东西记得更牢靠。在检索时所付出的努力越大——只要真正做到这一点检索就会更好地强化你的所学。在第一次检测后，推迟后续检索练习要比立即练习更能强化记忆，因为延迟后再检索需要会费更大力气。\n\n反复检索不仅能让记忆更持久，还能让知识在更多变的环境中更容易被检索，而且可以解决更多的问题。\n\n\n# 频繁的集中练习只会产生短期记忆\n\n人们顽固地相信，自己把心思放在一件事上，拼命重复就能学得更好，认为这些观点经受住了时间的考验，而且“练习，练习，再练习”的明显收效再次证明了这种方法的好处。但是，科学家们把习得技能阶段的这种成绩称为“暂时的优势”，并把它同“潜在的习惯优势”区分开来。形成习惯优势有种种技巧，例如有间隔的练习、有穿插内容的练习，以及多样化练习，这些技巧恰恰会放缓有明显成果的学习进程，它们不会在练习中提高我们的表现。我们从表面上看不到成绩提高，也就没有付出努力的动力（大多数人的学习心理就是这样，在看不到成果的时候容易失去动力）。填鸭式练习是集中练习的一种形式，它一直被比作贪食症——吃得不少，但没过多久基本上都吐出来了。\n\n\n# 间隔练习使知识存储更牢固\n\n把学习与练习间隔开来分期进行，让两者之间隔上一定时间，这样做就能让学习成果更加显著、记忆更加牢固，能有效地形成习惯优势。间隔多长时间才够？答案很简单：从最低限度上说，间隔的时间足够出现一点儿遗忘就对了。练习环节中间出现一点儿遗忘是好事，只要它能让人更加努力地练习就行。话说回来，你肯定不愿意忘掉太多东西，以至于检索最终变成了对资料的重新学习。间隔一段时间再练习能巩固记忆。睡眠似乎在巩固记忆的工作中扮演了重要角色，所以在两次练习间至少间隔一天应该是不错的做法。 要当心熟悉这个陷阱：你感觉自己明白了某样东西，觉得不再需要练习了。如果想走捷径，这种熟悉会让你在自测时受伤。道格拉斯·拉尔森说：“你必须自觉地说，好吧，我要强迫自己把这些全想起来，要是我想不起来，那我是忘掉了什么，我怎，么会不知道那个呢?’如果是教师出题测验，那就一下子变成你\n\n\n# 穿插练习有助于长期记忆\n\n穿插练习两样或更多的内容同样也提供了一种间隔。穿插内容练习有助于发展人们辨识不同问题的能力，也是在培养人们从不断增加的解决方案中寻找合适工具的能力。进行穿插内容练习，不能是完成一个科目的全部练习再跳到下一个科目。你需要在每个科目的练习完成前就跳到下一个科目。我们的一个朋友这样描述自己的经历，“我去上了一堂冰球课，学习滑冰、控球、射门。滑冰练习还没进行多长时间，自己刚刚有点儿上手的感觉，教练就转到控球练习上了，这让我感到非常沮丧。灰心地到家后，我说，‘为什么教练不让我们一次把技能练好呢？”其实他是遇上了少有的好教练。这位教练懂得分散精力练习不同技能要比下力气一次掌握一件事更有效果。球员感到沮丧是因为并没有在短时间内看到成果，但到下一周，无论是滑冰、控球，还是其他内容，他都会获得全面进步，效果会好于每次只专心练习一项技能。\n\n\n# 多样化练习促进知识的活学活用\n\n与穿插内容练习一样，多样化练习有助于学习者树立更开阔的心理模式。这是一种能力，掌握它的人可以评估不断变化的条件，并调整应对方式进行适应。可以说，穿插内容练习与多样化练习有助于学习者超越暂时性记忆，步入更高层次的概念性学习，并把它们应用到实际情景中，从而获得更全面、更深刻、更持久的学习效果。这些学习成果在运动技能中就表现为潜在的习惯优势。\n\n\n# 小总结\n\n有间隔、有内容穿插出现，以及内容多样化，其实就是我们生活的本来面貌。程序员每开发一个项目，都是一次测验，也是一次检索练习的锻炼。每次常规的拦车检查对于警察来说都是一次测验，而且每次检查都不一样，这会加强警察的外显记忆与内隐记忆。只要他上心，今后的工作就会更有效率。人们常说的一句话是“从经验中学习”。有些人似乎从来不学习，学与不学的一个区别可能就在于，人们是否培养了反思（总结）的习惯。反思（总结）是检索练习的一种形式（发生了什么？我是怎么做的？怎样才能有用？），而且辅以细化加强（下次我要采取别的什么方法？）\n\n\n# 知识的“滚雪球”效应\n\n学习的过程至少可以分成三步：最开始是对短期工作记忆中信息的编码。这时信息还没有被巩固成长期记忆中坚实的知识表征。巩固会辨识并稳定记忆线索，赋予其含义，把它们与过去的经验以及长期记忆中已经存储下来的其他知识联系起来。检索会更新所学的东西，并让你做到学以致用。\n\n学习总是建立在已知基础之上。我们是通过与已知建立联系这种方式来解读事件和记忆事件的。\n\n长期记忆的容量基本上是无限的。你知道得越多，就越有可能为新知识建立联系。\n\n由于长期记忆的容量颇大，所以关键是要有一种能力，让你在需要的时候锁定并回忆已知。回忆所学知识的难易程度取决于对信息的重复使用（保持检索路径不会被忘却），也取决于你是否建立起了强大的检索线索，因为它能重新激活你的记忆。\n\n阶段性地检索所学，有助于强化记忆间的联系，也能强化回忆知识的线索，同时还能弱化连通冲突记忆的路径。检索练习若是没什么难度，那就不能强化所学的知识；练习难度越大，收效才越大。\n\n当你从短期记忆中回忆所学时，例如快速频繁地进行练习，是不需要花什么心思的，也不会有长期性的收效。但当你过一段时间再回忆时，当你对所学的东西有些遗忘时，你就不得不努力重建这一切。这种耗费心力的检索既能强化记忆，又能让所学再次具有可塑性，引发对所学知识的再巩固。再巩固可以用新信息更新你的记忆，同时可以将它们与最近学到的东西联系起来。\n\n重复进行费力的回忆或是练习，有助于把所学的知识整合成心智模型。在心智模型中，一套彼此相关的概念或一系列运动技能被融会贯通，形成一个有意义的整体。它能适应随后的各种环境，并发挥作用。开车时的感知和操控就是一个例子。在面对弧线球时知道如何打出全垒打也是同一个道理。\n\n练习的条件如果发生了变化，或是在检索中穿插安排了对其他资料的练习，我们就能强化自己的辨析与归纳能力，凭借全面发展，我们还能把所学的知识用在以后的新环境中。穿插与多样化建立了新的联系，拓展并进一步深化了记忆中的知识，同时增加了检索线索的数量。、\n\n试着自己想出答案，而不是坐等别人给你答案，或是在拿到解决方案前自行尝试解决一个问题，会产生更好的学习效果，也能让你把正确的答案或解决方案记得更持久。即便有时你会犯错，只要有纠正性反馈就没问题。\n\n——以上内容摘自《认知天性》，结合本人的个人理解，更多内容请查看该书籍。\n\n",charsets:{cjk:!0}},{title:"提高记忆的技巧",frontmatter:{title:"提高记忆的技巧",date:"2020-01-03T14:34:48.000Z",permalink:"/pages/996822b2a2ca6e3b",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/03.%E6%8F%90%E9%AB%98%E8%AE%B0%E5%BF%86%E7%9A%84%E6%8A%80%E5%B7%A7.html",relativePath:"更多/04.学习/03.提高记忆的技巧.md",key:"v-5c84c830",path:"/pages/996822b2a2ca6e3b/",excerpt:'<h1 id="提高记忆的技巧"><a class="header-anchor" href="#提高记忆的技巧">#</a> 提高记忆的技巧</h1>\n<ol>\n<li><strong>多个感官并用</strong>\n记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。</li>\n</ol>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"# 提高记忆的技巧\n\n 1. 多个感官并用 记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。\n\n 2. 重复记忆 每天留出半个到一个小时，梳理总结今天所学的内容。每一章复习完成后做系统的知识整理。\n\n 3. 建立关联 把你所学的新知识与已有的认知建立联系，对于记忆事半功倍。\n\n 4. 场景记忆 把知识具象化为一个场景，想象自己在何时何地能用这些知识，与自身发生联系。\n\n 5. 提出问题 每学习一个知识点，试着提问，然后给出答案。用了就记住了。",normalizedContent:"# 提高记忆的技巧\n\n 1. 多个感官并用 记忆时调用一切感官。没人的话可以大声阅读，有人的话可以默念，轻微摇晃手指等，有助于保持专注。\n\n 2. 重复记忆 每天留出半个到一个小时，梳理总结今天所学的内容。每一章复习完成后做系统的知识整理。\n\n 3. 建立关联 把你所学的新知识与已有的认知建立联系，对于记忆事半功倍。\n\n 4. 场景记忆 把知识具象化为一个场景，想象自己在何时何地能用这些知识，与自身发生联系。\n\n 5. 提出问题 每学习一个知识点，试着提问，然后给出答案。用了就记住了。",charsets:{cjk:!0}},{title:"自律小建议",frontmatter:{title:"自律小建议",date:"2020-01-03T14:35:18.000Z",permalink:"/pages/c3f302a03c8daf79",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/04.%E8%87%AA%E5%BE%8B%E5%B0%8F%E5%BB%BA%E8%AE%AE.html",relativePath:"更多/04.学习/04.自律小建议.md",key:"v-717289f4",path:"/pages/c3f302a03c8daf79/",excerpt:'<h1 id="自律小建议"><a class="header-anchor" href="#自律小建议">#</a> 自律小建议</h1>\n<ul>\n<li><strong>培养专注</strong>\n<ul>\n<li>练习冥想、瑜伽等</li>\n</ul>\n</li>\n<li><strong>排除外界干扰</strong>\n<ul>\n<li>手机调到勿扰，在图书馆学习等</li>\n</ul>\n</li>\n</ul>\n',lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"# 自律小建议\n\n * 培养专注\n   * 练习冥想、瑜伽等\n * 排除外界干扰\n   * 手机调到勿扰，在图书馆学习等\n\n * 规定学习时间\n   \n   * 番茄时间管理——使用番茄时间管理法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。\n     \n     > 人的大脑在记忆一个东西的时候，有短期记忆和长期记忆之分。大脑编码内容进行长期记忆，需要一个过程的，可能是几个小时或几天，集中练习就给不了这个过程，所以集中练习带来的效果是短期记忆，而进行间隔练习，大脑则有时间进行充分的编码，学习到的知识就会储存为长期记忆。\n     > \n     > 推荐几种间歇锻炼方法：体能训练、课间操、眼保操、拉伸训练...\n     > \n     > 有好的身体可以使大脑更清醒哟~\n\n * 限制娱乐时间\n   \n   * 减少使用娱乐app的时间（苹果手机可设定屏幕使用时间）\n   \n   * 推荐观看>B站某位UP主的视频《每天只看半小时手机，坚持一周后我有哪些变化？》\n\n * 戒网瘾（特别是游戏）\n   \n   * 除了手机、游戏以外，周围有很多美好的事物值得我们去关注。\n\n * 设定目标\n   \n   * 想要更好的薪水和职位？多花点时间在学习上吧~\n   * 潜意识暗示自己，建立信心，让自己变得更优秀，然后去挑战更高的目标\n\n * 优秀的人仍在不断努力\n   \n   * 且看大神 阮一峰github 提交记录",normalizedContent:"# 自律小建议\n\n * 培养专注\n   * 练习冥想、瑜伽等\n * 排除外界干扰\n   * 手机调到勿扰，在图书馆学习等\n\n * 规定学习时间\n   \n   * 番茄时间管理——使用番茄时间管理法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。\n     \n     > 人的大脑在记忆一个东西的时候，有短期记忆和长期记忆之分。大脑编码内容进行长期记忆，需要一个过程的，可能是几个小时或几天，集中练习就给不了这个过程，所以集中练习带来的效果是短期记忆，而进行间隔练习，大脑则有时间进行充分的编码，学习到的知识就会储存为长期记忆。\n     > \n     > 推荐几种间歇锻炼方法：体能训练、课间操、眼保操、拉伸训练...\n     > \n     > 有好的身体可以使大脑更清醒哟~\n\n * 限制娱乐时间\n   \n   * 减少使用娱乐app的时间（苹果手机可设定屏幕使用时间）\n   \n   * 推荐观看>b站某位up主的视频《每天只看半小时手机，坚持一周后我有哪些变化？》\n\n * 戒网瘾（特别是游戏）\n   \n   * 除了手机、游戏以外，周围有很多美好的事物值得我们去关注。\n\n * 设定目标\n   \n   * 想要更好的薪水和职位？多花点时间在学习上吧~\n   * 潜意识暗示自己，建立信心，让自己变得更优秀，然后去挑战更高的目标\n\n * 优秀的人仍在不断努力\n   \n   * 且看大神 阮一峰github 提交记录",charsets:{cjk:!0}},{title:"处理问题的思路",frontmatter:{title:"处理问题的思路",date:"2020-01-03T14:36:02.000Z",permalink:"/pages/9ba2b8fb13de1957",categories:["更多","学习"],tags:[null],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/05.%E5%A4%84%E7%90%86%E9%97%AE%E9%A2%98%E7%9A%84%E6%80%9D%E8%B7%AF.html",relativePath:"更多/04.学习/05.处理问题的思路.md",key:"v-289fd3bc",path:"/pages/9ba2b8fb13de1957/",headers:[{level:2,title:"工作中遇到问题？",slug:"工作中遇到问题",normalizedTitle:"工作中遇到问题？",charIndex:14},{level:2,title:"这个问题我该怎么解决呢？",slug:"这个问题我该怎么解决呢",normalizedTitle:"这个问题我该怎么解决呢？",charIndex:86}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"工作中遇到问题？ 这个问题我该怎么解决呢？",content:"# 处理问题的思路\n\n\n# 工作中遇到问题？\n\n遇到问题卡住了，可以先休息一会儿，调整一下状态，喝杯水走走放松放松，然后想想有没有遗漏的地方，或者其他的解决方案呢\n\n\n# 这个问题我该怎么解决呢？\n\n 1. 学会搜索\n    \n    * 关键词\n    \n    * 多关键词\n    \n    * 加入时间\n    \n    * 加入特定的社区\n    \n    * site用法\n\n 2. 高阶搜索方法\n    \n    * 英文搜索（必应搜索、google搜索，很多英文文档或文章相对来说层数结构很清晰）\n    * 视频站搜索（http://www.youtube.com/、http://egghead.io）\n    * 百度盘搜索\n    * 指定文件后缀\n\n 3. 寻求帮助\n    \n    * 找同学\n    \n    * 找同事\n    \n    * 找朋友\n    \n    * 找社区\n\n 4. 开拓思路——发散性解决问题\n    \n    * 去问问原作者？\n    * 去发个邮件/twitter/facebook?\n    * 去找Boss要资源？\n    * 加入公共社区参与讨论?\n    * ...",normalizedContent:"# 处理问题的思路\n\n\n# 工作中遇到问题？\n\n遇到问题卡住了，可以先休息一会儿，调整一下状态，喝杯水走走放松放松，然后想想有没有遗漏的地方，或者其他的解决方案呢\n\n\n# 这个问题我该怎么解决呢？\n\n 1. 学会搜索\n    \n    * 关键词\n    \n    * 多关键词\n    \n    * 加入时间\n    \n    * 加入特定的社区\n    \n    * site用法\n\n 2. 高阶搜索方法\n    \n    * 英文搜索（必应搜索、google搜索，很多英文文档或文章相对来说层数结构很清晰）\n    * 视频站搜索（http://www.youtube.com/、http://egghead.io）\n    * 百度盘搜索\n    * 指定文件后缀\n\n 3. 寻求帮助\n    \n    * 找同学\n    \n    * 找同事\n    \n    * 找朋友\n    \n    * 找社区\n\n 4. 开拓思路——发散性解决问题\n    \n    * 去问问原作者？\n    * 去发个邮件/twitter/facebook?\n    * 去找boss要资源？\n    * 加入公共社区参与讨论?\n    * ...",charsets:{cjk:!0}},{title:"搜索引擎使用技巧",frontmatter:{title:"搜索引擎使用技巧",date:"2020-05-24T11:44:19.000Z",permalink:"/pages/ce818a",categories:["更多","学习"],tags:["搜索技巧"],author:{name:"xugaoyi",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/04.%E5%AD%A6%E4%B9%A0/10.%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",relativePath:"更多/04.学习/10.搜索引擎使用技巧.md",key:"v-7a48598d",path:"/pages/ce818a/",headers:[{level:3,title:"技巧1：排除干扰项",slug:"技巧1-排除干扰项",normalizedTitle:"技巧1：排除干扰项",charIndex:117},{level:3,title:"技巧2：精确搜索",slug:"技巧2-精确搜索",normalizedTitle:"技巧2：精确搜索",charIndex:263},{level:3,title:"技巧3：指定网站内搜索",slug:"技巧3-指定网站内搜索",normalizedTitle:"技巧3：指定网站内搜索",charIndex:354},{level:3,title:"技巧4：指定文件格式",slug:"技巧4-指定文件格式",normalizedTitle:"技巧4：指定文件格式",charIndex:458},{level:3,title:"技巧5：指定在标题搜索",slug:"技巧5-指定在标题搜索",normalizedTitle:"技巧5：指定在标题搜索",charIndex:544},{level:3,title:"技巧6：指定在内容中搜索",slug:"技巧6-指定在内容中搜索",normalizedTitle:"技巧6：指定在内容中搜索",charIndex:595},{level:3,title:"技巧7：多种搜索技巧叠加使用",slug:"技巧7-多种搜索技巧叠加使用",normalizedTitle:"技巧7：多种搜索技巧叠加使用",charIndex:658},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:739}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"技巧1：排除干扰项 技巧2：精确搜索 技巧3：指定网站内搜索 技巧4：指定文件格式 技巧5：指定在标题搜索 技巧6：指定在内容中搜索 技巧7：多种搜索技巧叠加使用 注意事项",content:'搜索引擎相信大家经常在使用，但是有时候想搜某个信息时却搜出来一大堆不相关的（百度：你们都在看我干什么？）。下面我们来介绍几种搜索技巧，可以提升搜索效率，助你快速查资料，妈妈再也不担心我的学习了（\'妈~我真的是在找学习资料\'）\n\n\n# 技巧1：排除干扰项\n\n方式：关键词1+空格+减号+关键词2，即 关键词1 -关键词2\n\n功能：排除一些不想要的关键词\n\n示例：\n\n锤子 -锤子手机\n\n\n1\n\n\n示例中将在搜索结果排除与锤子手机相关的，只显示锤子本来的样子。\n\n> 经过百度搜索的测试，有的关键词能排除掉，有的并不好使\n\n\n# 技巧2：精确搜索\n\n方式：给关键词加双引号，"关键词"\n\n功能：只搜索引号里的字，少一个字或者把字拆开都不行\n\n示例：\n\n"达拉不崩吧"\n\n\n1\n\n\n> 注意是英文的双引号\n\n\n# 技巧3：指定网站内搜索\n\n方式：site:域名 关键词\n\n功能：只搜索指定域名的内容\n\n示例：\n\nsite:zhihu.com 前端\n\n\n1\n\n\n有一些站内自带的搜索并不好用，可以尝试这个搜索技巧。\n\n\n# 技巧4：指定文件格式\n\n方式：filetype:文件格式 关键词\n\n示例：\n\nfiletype:avi 你懂的\n\n\n1\n\n\n常见文件格式有doc、pdf、ppt等\n\n\n# 技巧5：指定在标题搜索\n\n方式：intitle:关键词\n\n功能：搜索的关键词要出现在标题当中\n\n\n# 技巧6：指定在内容中搜索\n\n方式：intext:关键词、allintext:关键词1 关键词2、inurl:关键词2\n\n\n# 技巧7：多种搜索技巧叠加使用\n\n示例：\n\nsite:zhihu.com 前端 intitle:js\n\n\n1\n\n\n多种技巧和关键词叠加使用，中间空格隔开。\n\n\n# 注意事项\n\n以上搜索技巧使用的符号均是英文符号。',normalizedContent:'搜索引擎相信大家经常在使用，但是有时候想搜某个信息时却搜出来一大堆不相关的（百度：你们都在看我干什么？）。下面我们来介绍几种搜索技巧，可以提升搜索效率，助你快速查资料，妈妈再也不担心我的学习了（\'妈~我真的是在找学习资料\'）\n\n\n# 技巧1：排除干扰项\n\n方式：关键词1+空格+减号+关键词2，即 关键词1 -关键词2\n\n功能：排除一些不想要的关键词\n\n示例：\n\n锤子 -锤子手机\n\n\n1\n\n\n示例中将在搜索结果排除与锤子手机相关的，只显示锤子本来的样子。\n\n> 经过百度搜索的测试，有的关键词能排除掉，有的并不好使\n\n\n# 技巧2：精确搜索\n\n方式：给关键词加双引号，"关键词"\n\n功能：只搜索引号里的字，少一个字或者把字拆开都不行\n\n示例：\n\n"达拉不崩吧"\n\n\n1\n\n\n> 注意是英文的双引号\n\n\n# 技巧3：指定网站内搜索\n\n方式：site:域名 关键词\n\n功能：只搜索指定域名的内容\n\n示例：\n\nsite:zhihu.com 前端\n\n\n1\n\n\n有一些站内自带的搜索并不好用，可以尝试这个搜索技巧。\n\n\n# 技巧4：指定文件格式\n\n方式：filetype:文件格式 关键词\n\n示例：\n\nfiletype:avi 你懂的\n\n\n1\n\n\n常见文件格式有doc、pdf、ppt等\n\n\n# 技巧5：指定在标题搜索\n\n方式：intitle:关键词\n\n功能：搜索的关键词要出现在标题当中\n\n\n# 技巧6：指定在内容中搜索\n\n方式：intext:关键词、allintext:关键词1 关键词2、inurl:关键词2\n\n\n# 技巧7：多种搜索技巧叠加使用\n\n示例：\n\nsite:zhihu.com 前端 intitle:js\n\n\n1\n\n\n多种技巧和关键词叠加使用，中间空格隔开。\n\n\n# 注意事项\n\n以上搜索技巧使用的符号均是英文符号。',charsets:{cjk:!0}},{title:"windows软件分享",frontmatter:{title:"windows软件分享",date:"2023-12-14T10:45:02.000Z",permalink:"/pages/f9c772/",article:!1,categories:["更多","资源分享"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/05.%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/windows%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB.html",relativePath:"更多/05.资源分享/windows软件分享.md",key:"v-7e6738a8",path:"/pages/f9c772/",headers:[{level:2,title:"开发工具",slug:"开发工具",normalizedTitle:"开发工具",charIndex:27},{level:2,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:91}],headersStr:"开发工具 其它",content:"# 软件分享\n\n分享的链接密码均为：dxzh\n\n\n# 开发工具\n\n内含：\n\n * Navicat15安装包和破解工具\n * Xshell-7 免费教育版\n * \n\n百度网盘\n\n\n# 其它\n\n百度网盘",normalizedContent:"# 软件分享\n\n分享的链接密码均为：dxzh\n\n\n# 开发工具\n\n内含：\n\n * navicat15安装包和破解工具\n * xshell-7 免费教育版\n * \n\n百度网盘\n\n\n# 其它\n\n百度网盘",charsets:{cjk:!0}},{title:"电子书分享",frontmatter:{title:"电子书分享",date:"2023-12-14T10:44:45.000Z",permalink:"/pages/ebee4f/",article:!1,categories:["更多","资源分享"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E6%9B%B4%E5%A4%9A/05.%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/%E7%94%B5%E5%AD%90%E4%B9%A6%E5%88%86%E4%BA%AB.html",relativePath:"更多/05.资源分享/电子书分享.md",key:"v-08cd15fa",path:"/pages/ebee4f/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:52},{level:2,title:"Java",slug:"java",normalizedTitle:"java",charIndex:63}],headersStr:"Python Java",content:"# 分享说明\n\n资源来自于网络，仅供学习用途，若有涉及侵权，请及时告知，相关内容我会及时删除。\n\n\n# Python\n\n\n# Java",normalizedContent:"# 分享说明\n\n资源来自于网络，仅供学习用途，若有涉及侵权，请及时告知，相关内容我会及时删除。\n\n\n# python\n\n\n# java",charsets:{cjk:!0}},{title:"使用Anoconda创建虚拟环境和管理包",frontmatter:{title:"使用Anoconda创建虚拟环境和管理包",date:"2023-06-18T02:43:03.000Z",permalink:"/pages/4b8622/",categories:["编程","Python"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/01.Python/02.Python%E4%B8%AD%E4%BD%BF%E7%94%A8Anoconda.html",relativePath:"编程/01.Python/02.Python中使用Anoconda.md",key:"v-c59b6078",path:"/pages/4b8622/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:2},{level:2,title:"使用虚拟环境的意义",slug:"使用虚拟环境的意义",normalizedTitle:"使用虚拟环境的意义",charIndex:246},{level:2,title:"它与venv的对比？如何选择？",slug:"它与venv的对比-如何选择",normalizedTitle:"它与venv的对比？如何选择？",charIndex:556},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:175},{level:3,title:"windows版本安装",slug:"windows版本安装",normalizedTitle:"windows版本安装",charIndex:1127},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:246},{level:3,title:"环境操作",slug:"环境操作",normalizedTitle:"环境操作",charIndex:1439},{level:3,title:"源操作",slug:"源操作",normalizedTitle:"源操作",charIndex:1942},{level:3,title:"包/库操作",slug:"包-库操作",normalizedTitle:"包/库操作",charIndex:2260},{level:2,title:"常用源",slug:"常用源",normalizedTitle:"常用源",charIndex:2792},{level:3,title:"查看、编辑源文件",slug:"查看、编辑源文件",normalizedTitle:"查看、编辑源文件",charIndex:3367},{level:3,title:"源模版",slug:"源模版",normalizedTitle:"源模版",charIndex:3480}],headersStr:"简介 使用虚拟环境的意义 它与venv的对比？如何选择？ 安装 windows版本安装 使用 环境操作 源操作 包/库操作 常用源 查看、编辑源文件 源模版",content:"# 简介\n\nconda 分为 anaconda 和 miniconda，anaconda 是一个包含了许多常用库的集合版本，miniconda 是精简版本（只包含conda、pip、zlib、python 以及它们所需的包）。\n\nAnaconda是一个开源的Python发行版，集成了Python解释器、一些常用的科学计算库和工具。通过它可以很方便地安装python以及其它一些语言的库，更重要的是可以为项目创建虚拟环境，隔离多个项目的占用的系统资源和依赖。\n\nAnaconda官网\n\n\n# 使用虚拟环境的意义\n\n在使用Python语言时，通过pip命令来安装第三方包，但是由于pip的特性，系统中只能安装每个包的一个版本。但是在实际项目开发中，不同项目可能需要第三方包的不同版本，迫使我们需要根据实际需求不断进行更新或卸载相应的包，而如果我们直接使用本地的Python环境，会导致整体的开发环境相当混乱而不易管理，这时候我们就需要开辟一个独立干净的空间进行开发和部署，也就是需要用到虚拟环境。\n\n所谓虚拟环境是一个包含了特定 Python 解析器以及一些软件包的自包含目录，不同的应用程序可以使用不同的虚拟环境，从而解决了依赖冲突问题，而且虚拟环境中只需要安装应用相关的包或者模块，减轻了包管理的负担\n\n\n# 它与venv的对比？如何选择？\n\nVenv是Python的内置模块，通过它也可以创建虚拟环境。Venv与Anaconda的区别主要在于：\n\n * 包管理的方式不同：\n   \n   venv创建的虚拟环境使用pip来安装和管理包。Conda创建的虚拟环境使用Conda自己的包管理系统来安装和管理包,它既可以使用conda install来安装包，也可以使用pip来安装包。\n\n * 跨平台支持有差异：\n   \n   通常，venv更适用于纯python项目，而conda是一个支持多种编程语言(如Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN)的跨平台的包管理系统，可以在Windows、Linux和macOS等操作系统上使用。\n\n * 对python版本的依赖有差别：\n   \n   conda相比virtualenv/venv最重要的一点，因为在用virtualenv/venv时环境中Python的版本受系统Python版本的限制，而在使用conda时，环境里Python的版本则不受系统Python版本的限制\n\n总结：venv创建的虚拟环境通常更轻量级,Conda更适合于复杂的项目，特别是涉及到多种语言或非Python依赖项的项目。\n\n\n# 安装\n\n\n# windows版本安装\n\n 1. 选择合适的版本\n\n 2. 运行对应的exe程序，根据程序引导，一直next即可\n\n 3. 手动配置Conda的环境变量\n\n需要添加的环境变量如下所示(E:\\Anaconda 为AnaConda安装时选择的目录，视情况修改)：\n\nE:\\Anaconda \nE:\\Anaconda\\Scripts \nE:\\Anaconda\\Library\\mingw-w64\\bin\nE:\\Anaconda\\Library\\usr\\bin \nE:\\Anaconda\\Library\\bin\n\n\n1\n2\n3\n4\n5\n\n\n\n# 使用\n\n * 查看conda版本\n\nconda --version\n\n\n1\n\n\n\n# 环境操作\n\n * 为python项目创建conda环境\n\n# env_name为自定义环境名称，而后是包信息\n# 示例，创建一个python版本3.8、名为env_name的的虚拟环境\n\nconda create -n env_name python=3.8\n\n#如果不指定后面的python=3.8 则只是一个系统的基本模块\n\n\n1\n2\n3\n4\n5\n6\n\n * 进入和退出环境\n\n# 进入环境(首次安装完成需要重启终端使其生效)\nconda activate env_name  \t\t\n\n# 退出环境\nconda deactivate\t\t\t\t\n\n\n1\n2\n3\n4\n5\n\n * 当前存在的conda虚拟环境\n\nconda env list\n\n\n1\n\n * 删除虚拟环境\n\n#删除指定环境\nconda env remove -n env_name\n\n#删除所有环境\nconda remove -n env_name --all\n\n\n1\n2\n3\n4\n5\n\n * 重命名环境\n\n# 将 py3 重命名为 torch\nconda create -n torch --clone py3  \t\n\n\n1\n2\n\n\n\n# 源操作\n\n * 更新源,并在用户目录下生成 .condarc文件\n\nconda config --set show_channel_urls yes\n\n\n1\n\n * 查看当前下载源\n\nconda config --show channels\n\n\n1\n\n * 添加镜像源\n\n# url替换为源地址\nconda config --add channels <url>\n\n\n1\n2\n\n * 删除镜像源\n\n#替换url\n#删除单个源\nconda config--remove channels <url>\n\n#删除所有镜像源，恢复默认\nconda config --remove-key channels\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 包/库操作\n\n * 查找\n\n#替换lib_name为目标库/包\nconda search <lib_name>\n\n\n\n1\n2\n3\n\n * 安装\n\nconda install <lib_name>\n\n#示例\nconda install torch=1.16\n\n\n1\n2\n3\n4\n\n * 离线安装包\n\n# path 替换为 `.tar.bz2`文件所在路径和文件名\nconda install --use-local <path>\n\n# 示例\nconda install --use-local Z:\\down_tmp\\zip\\win-64_pytorch-2.1.1-py3.8_cuda11.8_cudnn8_0.tar.bz2\n\n\n1\n2\n3\n4\n5\n\n * 查看已安装的库\n\n# 查看 env_name下的库\nconda list -n env_name  \t\n\n\n1\n2\n\n * 更新已安装的库\n\n#单个更新\nconda update <lib_name>\n\n# 全部更新\nconda update --all \n\n\n1\n2\n3\n4\n5\n\n * 删除包/库\n\nconda remove --name env_name <lib_name>\n\n\n1\n\n\n\n# 常用源\n\n * 清华源\n\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\n\n\n1\n2\n3\n4\n\n * 中国科学技术大学\n\nhttps://mirrors.ustc.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n\n\n1\n2\n\n * 上海交通大学源\n\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/free/\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/cloud/conda-forge/\n\n\n1\n2\n3\n\n\n\n# 查看、编辑源文件\n\n 1. 终端输入下面的命令，在当前目录下生成一个.condarc的文件\n\nconda config --set show_channel_urls yes\n\n\n1\n\n 2. 编辑文件\n\n\n\n\n1\n\n\n\n# 源模版\n\nchannels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n",normalizedContent:"# 简介\n\nconda 分为 anaconda 和 miniconda，anaconda 是一个包含了许多常用库的集合版本，miniconda 是精简版本（只包含conda、pip、zlib、python 以及它们所需的包）。\n\nanaconda是一个开源的python发行版，集成了python解释器、一些常用的科学计算库和工具。通过它可以很方便地安装python以及其它一些语言的库，更重要的是可以为项目创建虚拟环境，隔离多个项目的占用的系统资源和依赖。\n\nanaconda官网\n\n\n# 使用虚拟环境的意义\n\n在使用python语言时，通过pip命令来安装第三方包，但是由于pip的特性，系统中只能安装每个包的一个版本。但是在实际项目开发中，不同项目可能需要第三方包的不同版本，迫使我们需要根据实际需求不断进行更新或卸载相应的包，而如果我们直接使用本地的python环境，会导致整体的开发环境相当混乱而不易管理，这时候我们就需要开辟一个独立干净的空间进行开发和部署，也就是需要用到虚拟环境。\n\n所谓虚拟环境是一个包含了特定 python 解析器以及一些软件包的自包含目录，不同的应用程序可以使用不同的虚拟环境，从而解决了依赖冲突问题，而且虚拟环境中只需要安装应用相关的包或者模块，减轻了包管理的负担\n\n\n# 它与venv的对比？如何选择？\n\nvenv是python的内置模块，通过它也可以创建虚拟环境。venv与anaconda的区别主要在于：\n\n * 包管理的方式不同：\n   \n   venv创建的虚拟环境使用pip来安装和管理包。conda创建的虚拟环境使用conda自己的包管理系统来安装和管理包,它既可以使用conda install来安装包，也可以使用pip来安装包。\n\n * 跨平台支持有差异：\n   \n   通常，venv更适用于纯python项目，而conda是一个支持多种编程语言(如python, r, ruby, lua, scala, java, javascript, c/c++, fortran)的跨平台的包管理系统，可以在windows、linux和macos等操作系统上使用。\n\n * 对python版本的依赖有差别：\n   \n   conda相比virtualenv/venv最重要的一点，因为在用virtualenv/venv时环境中python的版本受系统python版本的限制，而在使用conda时，环境里python的版本则不受系统python版本的限制\n\n总结：venv创建的虚拟环境通常更轻量级,conda更适合于复杂的项目，特别是涉及到多种语言或非python依赖项的项目。\n\n\n# 安装\n\n\n# windows版本安装\n\n 1. 选择合适的版本\n\n 2. 运行对应的exe程序，根据程序引导，一直next即可\n\n 3. 手动配置conda的环境变量\n\n需要添加的环境变量如下所示(e:\\anaconda 为anaconda安装时选择的目录，视情况修改)：\n\ne:\\anaconda \ne:\\anaconda\\scripts \ne:\\anaconda\\library\\mingw-w64\\bin\ne:\\anaconda\\library\\usr\\bin \ne:\\anaconda\\library\\bin\n\n\n1\n2\n3\n4\n5\n\n\n\n# 使用\n\n * 查看conda版本\n\nconda --version\n\n\n1\n\n\n\n# 环境操作\n\n * 为python项目创建conda环境\n\n# env_name为自定义环境名称，而后是包信息\n# 示例，创建一个python版本3.8、名为env_name的的虚拟环境\n\nconda create -n env_name python=3.8\n\n#如果不指定后面的python=3.8 则只是一个系统的基本模块\n\n\n1\n2\n3\n4\n5\n6\n\n * 进入和退出环境\n\n# 进入环境(首次安装完成需要重启终端使其生效)\nconda activate env_name  \t\t\n\n# 退出环境\nconda deactivate\t\t\t\t\n\n\n1\n2\n3\n4\n5\n\n * 当前存在的conda虚拟环境\n\nconda env list\n\n\n1\n\n * 删除虚拟环境\n\n#删除指定环境\nconda env remove -n env_name\n\n#删除所有环境\nconda remove -n env_name --all\n\n\n1\n2\n3\n4\n5\n\n * 重命名环境\n\n# 将 py3 重命名为 torch\nconda create -n torch --clone py3  \t\n\n\n1\n2\n\n\n\n# 源操作\n\n * 更新源,并在用户目录下生成 .condarc文件\n\nconda config --set show_channel_urls yes\n\n\n1\n\n * 查看当前下载源\n\nconda config --show channels\n\n\n1\n\n * 添加镜像源\n\n# url替换为源地址\nconda config --add channels <url>\n\n\n1\n2\n\n * 删除镜像源\n\n#替换url\n#删除单个源\nconda config--remove channels <url>\n\n#删除所有镜像源，恢复默认\nconda config --remove-key channels\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 包/库操作\n\n * 查找\n\n#替换lib_name为目标库/包\nconda search <lib_name>\n\n\n\n1\n2\n3\n\n * 安装\n\nconda install <lib_name>\n\n#示例\nconda install torch=1.16\n\n\n1\n2\n3\n4\n\n * 离线安装包\n\n# path 替换为 `.tar.bz2`文件所在路径和文件名\nconda install --use-local <path>\n\n# 示例\nconda install --use-local z:\\down_tmp\\zip\\win-64_pytorch-2.1.1-py3.8_cuda11.8_cudnn8_0.tar.bz2\n\n\n1\n2\n3\n4\n5\n\n * 查看已安装的库\n\n# 查看 env_name下的库\nconda list -n env_name  \t\n\n\n1\n2\n\n * 更新已安装的库\n\n#单个更新\nconda update <lib_name>\n\n# 全部更新\nconda update --all \n\n\n1\n2\n3\n4\n5\n\n * 删除包/库\n\nconda remove --name env_name <lib_name>\n\n\n1\n\n\n\n# 常用源\n\n * 清华源\n\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\nhttps://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\n\n\n1\n2\n3\n4\n\n * 中国科学技术大学\n\nhttps://mirrors.ustc.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.ustc.edu.cn/anaconda/pkgs/free/\n\n\n1\n2\n\n * 上海交通大学源\n\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/main/\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/pkgs/free/\nhttps://mirrors.sjtug.sjtu.edu.cn/anaconda/cloud/conda-forge/\n\n\n1\n2\n3\n\n\n\n# 查看、编辑源文件\n\n 1. 终端输入下面的命令，在当前目录下生成一个.condarc的文件\n\nconda config --set show_channel_urls yes\n\n\n1\n\n 2. 编辑文件\n\n\n\n\n1\n\n\n\n# 源模版\n\nchannels:\n  - defaults\nshow_channel_urls: true\ndefault_channels:\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r\n  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2\ncustom_channels:\n  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n",charsets:{cjk:!0}},{title:"python中几种常见数据结构的使用",frontmatter:{title:"python中几种常见数据结构的使用",date:"2021-08-27T06:48:36.000Z",permalink:"/pages/b2bcaa/",categories:["编程","Python"],tags:["Python"],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/01.Python/03.python%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E4%BD%BF%E7%94%A8.html",relativePath:"编程/01.Python/03.python中几种常见数据结构的使用.md",key:"v-69c7b3ed",path:"/pages/b2bcaa/",headers:[{level:2,title:"python中几种常见数据结构及其使用",slug:"python中几种常见数据结构及其使用",normalizedTitle:"python中几种常见数据结构及其使用",charIndex:2},{level:3,title:"列表(list)",slug:"列表-list",normalizedTitle:"列表(list)",charIndex:26},{level:4,title:"使用列表",slug:"使用列表",normalizedTitle:"使用列表",charIndex:110},{level:4,title:"常用方法",slug:"常用方法",normalizedTitle:"常用方法",charIndex:246},{level:3,title:"元组",slug:"元组",normalizedTitle:"元组",charIndex:504},{level:4,title:"使用元组",slug:"使用元组",normalizedTitle:"使用元组",charIndex:559},{level:4,title:"常见方法",slug:"常见方法",normalizedTitle:"常见方法",charIndex:1228},{level:3,title:"集合",slug:"集合",normalizedTitle:"集合",charIndex:1268},{level:4,title:"使用集合",slug:"使用集合",normalizedTitle:"使用集合",charIndex:1363},{level:3,title:"字典",slug:"字典",normalizedTitle:"字典",charIndex:1448},{level:4,title:"使用字典",slug:"使用字典",normalizedTitle:"使用字典",charIndex:1488},{level:4,title:"常用方法",slug:"常用方法-2",normalizedTitle:"常用方法",charIndex:246}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"python中几种常见数据结构及其使用 列表(list) 使用列表 常用方法 元组 使用元组 常见方法 集合 使用集合 字典 使用字典 常用方法",content:"# python中几种常见数据结构及其使用\n\n\n# 列表(list)\n\n列表是最常用的Python数据类型，它可以作为一个方括号内的逗号分隔值出现。\n\n * 特点：\n   \n   列表的数据项不需要具有相同的类型\n\n# 使用列表\n\n * 定义列表\n\na=[]\n\n\n1\n\n * 删除列表元素\n\n#按值删除\na.remove(x)\n\n#按索引删除\ndel a[i]\n\n\n1\n2\n3\n4\n5\n\n * 遍历列表\n\n    for i in a:\n        print(i)\n\n\n1\n2\n\n\n# 常用方法\n\n方法                 描述\nlist.append(x)     列表末尾添加一个元素x\nlist.insert(i,x)   列表指定位置插入一个元素x\nlist.remove(x)     列表中删除第一个值为x的元素\nlist.pop(i)        删除列表中指定位置的元素，并返回删除的元素\nlist.clear()       删除列表所有元素\nlist.count(x)      返回列表中元素x出现的次数\nlist.reverse()     翻转列表元素\n\n\n# 元组\n\n * 定义：\n\n> 元组由多个用逗号隔开的值组成\n\n * 特点：\n\n(1)元组中的元素不可变；\n\n# 使用元组\n\n * 定义元组\n\n#空元组定义\ne= ()\n\n#非空元组定义\ne=123,'hello','world','aaaaa'\n\n\n1\n2\n3\n4\n5\n\n * 访问元组\n\n\ntup1 = ('physics', 'chemistry', 1997, 2000)\ntup2 = (1, 2, 3, 4, 5, 6, 7 )\n \nprint \"tup1[0]: \", tup1[0]\nprint \"tup2[1:5]: \", tup2[1:5]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 修改元组\n\n> 元组中的元素值是不允许修改的，但我们可以对元组进行连接组合\n\n# 定义\ntup1 = (12, 34.56)\ntup2 = ('abc', 'xyz')\n \n# 以下修改元组元素操作是非法的。\n# tup1[0] = 100\n \n# 创建一个新的元组\ntup3 = tup1 + tup2\nprint tup3\n\n# 输出\n(12, 34.56, 'abc', 'xyz')\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n * 删除元组\n\n> 元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组\n\ntup = ('physics', 'chemistry', 1997, 2000)\n \nprint tup\ndel tup\nprint \"After deleting tup : \"\nprint tup\n\n# 执行后，元组被删除，输出会报错\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 常见方法\n\n方法       描述\nlen(e)   取得元组元素个数\n\n\n# 集合\n\n * 定义：\n\n> 集合是由不重复元素组成的无序容器。\n\n * 特点：\n   \n   （1）元素不重复；\n   \n   （2）集合对象支持合集、交集、差集、对称差分等数学运算\n\n# 使用集合\n\n * 定义集合\n\n#空集合\na=set()\n\n#非空集合\na={'apple','banana','orange'}\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 字典\n\n * 定义：\n\n> 字典即为包含‘键值对’的集合，键必须是唯一的\n\n# 使用字典\n\n * 定义字典\n\n#示例\na={'name':'bb','age':'16'}\n\na['score']=90\n\n\n\n1\n2\n3\n4\n5\n\n * 取得字典键\n\nprint(list(a))\n\n\n1\n\n * 循环同时取得键值\n\nfor k,v in a.items():\n    print(k,v)\n\n\n\n1\n2\n3\n\n\n# 常用方法\n\n方法                            描述\ndict.keys()                   以列表返回一个字典所有的键\ndict.values()                 以列表返回字典中的所有值\ndict.get(key, default=None)   返回指定键的值，如果值不在字典中返回default值\ndict.has_key(key)             如果键在字典dict里返回true，否则返回false",normalizedContent:"# python中几种常见数据结构及其使用\n\n\n# 列表(list)\n\n列表是最常用的python数据类型，它可以作为一个方括号内的逗号分隔值出现。\n\n * 特点：\n   \n   列表的数据项不需要具有相同的类型\n\n# 使用列表\n\n * 定义列表\n\na=[]\n\n\n1\n\n * 删除列表元素\n\n#按值删除\na.remove(x)\n\n#按索引删除\ndel a[i]\n\n\n1\n2\n3\n4\n5\n\n * 遍历列表\n\n    for i in a:\n        print(i)\n\n\n1\n2\n\n\n# 常用方法\n\n方法                 描述\nlist.append(x)     列表末尾添加一个元素x\nlist.insert(i,x)   列表指定位置插入一个元素x\nlist.remove(x)     列表中删除第一个值为x的元素\nlist.pop(i)        删除列表中指定位置的元素，并返回删除的元素\nlist.clear()       删除列表所有元素\nlist.count(x)      返回列表中元素x出现的次数\nlist.reverse()     翻转列表元素\n\n\n# 元组\n\n * 定义：\n\n> 元组由多个用逗号隔开的值组成\n\n * 特点：\n\n(1)元组中的元素不可变；\n\n# 使用元组\n\n * 定义元组\n\n#空元组定义\ne= ()\n\n#非空元组定义\ne=123,'hello','world','aaaaa'\n\n\n1\n2\n3\n4\n5\n\n * 访问元组\n\n\ntup1 = ('physics', 'chemistry', 1997, 2000)\ntup2 = (1, 2, 3, 4, 5, 6, 7 )\n \nprint \"tup1[0]: \", tup1[0]\nprint \"tup2[1:5]: \", tup2[1:5]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 修改元组\n\n> 元组中的元素值是不允许修改的，但我们可以对元组进行连接组合\n\n# 定义\ntup1 = (12, 34.56)\ntup2 = ('abc', 'xyz')\n \n# 以下修改元组元素操作是非法的。\n# tup1[0] = 100\n \n# 创建一个新的元组\ntup3 = tup1 + tup2\nprint tup3\n\n# 输出\n(12, 34.56, 'abc', 'xyz')\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n * 删除元组\n\n> 元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组\n\ntup = ('physics', 'chemistry', 1997, 2000)\n \nprint tup\ndel tup\nprint \"after deleting tup : \"\nprint tup\n\n# 执行后，元组被删除，输出会报错\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 常见方法\n\n方法       描述\nlen(e)   取得元组元素个数\n\n\n# 集合\n\n * 定义：\n\n> 集合是由不重复元素组成的无序容器。\n\n * 特点：\n   \n   （1）元素不重复；\n   \n   （2）集合对象支持合集、交集、差集、对称差分等数学运算\n\n# 使用集合\n\n * 定义集合\n\n#空集合\na=set()\n\n#非空集合\na={'apple','banana','orange'}\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 字典\n\n * 定义：\n\n> 字典即为包含‘键值对’的集合，键必须是唯一的\n\n# 使用字典\n\n * 定义字典\n\n#示例\na={'name':'bb','age':'16'}\n\na['score']=90\n\n\n\n1\n2\n3\n4\n5\n\n * 取得字典键\n\nprint(list(a))\n\n\n1\n\n * 循环同时取得键值\n\nfor k,v in a.items():\n    print(k,v)\n\n\n\n1\n2\n3\n\n\n# 常用方法\n\n方法                            描述\ndict.keys()                   以列表返回一个字典所有的键\ndict.values()                 以列表返回字典中的所有值\ndict.get(key, default=none)   返回指定键的值，如果值不在字典中返回default值\ndict.has_key(key)             如果键在字典dict里返回true，否则返回false",charsets:{cjk:!0}},{title:"学习python多线程",frontmatter:{title:"学习python多线程",date:"2022-06-23T11:59:34.000Z",permalink:"/pages/eeda61/",categories:["编程","Python"],tags:["Python"],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/01.Python/04.%E5%AD%A6%E4%B9%A0python%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B.html",relativePath:"编程/01.Python/04.学习python中的多线程.md",key:"v-678a9398",path:"/pages/eeda61/",headers:[{level:2,title:"python中的多线程",slug:"python中的多线程",normalizedTitle:"python中的多线程",charIndex:2},{level:3,title:"实现多线程",slug:"实现多线程",normalizedTitle:"实现多线程",charIndex:366},{level:4,title:"创建线程",slug:"创建线程",normalizedTitle:"创建线程",charIndex:375},{level:4,title:"守护线程",slug:"守护线程",normalizedTitle:"守护线程",charIndex:1649},{level:4,title:"主线程等待子线程结束",slug:"主线程等待子线程结束",normalizedTitle:"主线程等待子线程结束",charIndex:2212}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"python中的多线程 实现多线程 创建线程 守护线程 主线程等待子线程结束",content:"# python中的多线程\n\n * 什么是线程？\n\n> 线程（Thread）也叫轻量级进程，是操作系统能够进行运算调度的最小单位，它被包涵在进程之中，是进程中的实际运作单位。线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。\n\n * 使用多线程的好处？\n\n（1）多线程可以同时执行多个任务，充分利用 CPU 资源，提高程序的并发性\n\n（2）加速程序执行：多线程可以将一个任务拆分成多个子任务，然后并行执行每个子任务，从而缩短任务的执行时间，并加快程序的执行速度。\n\n（3）提高程序的响应速度：当主线程需要等待某个操作的完成时，如果在等待的同时运行其他任务，可以有效提高程序的响应速度。\n\n\n# 实现多线程\n\n# 创建线程\n\n * 普通创建方式：\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)\n    print('2s')\n    time.sleep(1)\n    print('1s')\n    time.sleep(1)\n    print('0s')\n    time.sleep(1)\n\nif __name__ == '__main__':\n    t1 = threading.Thread(target=run, args=(\"t1\",))\n    t2 = threading.Thread(target=run, args=(\"t2\",))\n    t1.start()\n    t2.start()\n\n----------------------------------\n#输出内容\n>>> task t1\n>>> task t2\n>>> 2s\n>>> 2s\n>>> 1s\n>>> 1s\n>>> 0s\n>>> 0s\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n * 继承threading.Thread类，重写run方法\n\nimport threading\nimport time\n\nclass MyThread(threading.Thread):\n    def __init__(self, n):\n        super(MyThread, self).__init__()  # 重构run函数必须要写\n        self.n = n\n\n    def run(self):\n        print(\"task\", self.n)\n        time.sleep(1)\n        print('2s')\n        time.sleep(1)\n        print('1s')\n        time.sleep(1)\n        print('0s')\n        time.sleep(1)\n\nif __name__ == \"__main__\":\n    t1 = MyThread(\"t1\")\n    t2 = MyThread(\"t2\")\n    t1.start()\n    t2.start()\n    \n----------------------------------\n# 输出内容\n>>> task t1\n>>> task t2\n>>> 2s\n>>> 2s\n>>> 1s\n>>> 1s\n>>> 0s\n>>> 0s\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n# 守护线程\n\n守护线程即是将子线程作为主线程的守护线程，当主线程结束后，子线程也会跟着结束。其实现方法如下所示：\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)       #此时子线程停1s\n    print('3')\n    time.sleep(1)\n    print('2')\n    time.sleep(1)\n    print('1')\n\nif __name__ == '__main__':\n    t = threading.Thread(target=run, args=(\"t1\",))\n    t.setDaemon(True)   #把子进程设置为守护线程，必须在start()之前设置\n    t.start()\n    print(\"end\")\n    \n----------------------------------\n\n>>> task t1\n>>> end\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n可以发现，设置守护线程之后，当主线程结束时，子线程也将立即结束，不再执行\n\n# 主线程等待子线程结束\n\n想要让守护线程执行结束之后，主线程再结束，我们可以使用join方法，让主线程等待子线程执行\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)       #此时子线程停1s\n    print('3')\n    time.sleep(1)\n    print('2')\n    time.sleep(1)\n    print('1')\n\nif __name__ == '__main__':\n    t = threading.Thread(target=run, args=(\"t1\",))\n    t.setDaemon(True)   #把子进程设置为守护线程，必须在start()之前设置\n    t.start()\n    t.join() # 设置主线程等待子线程结束\n    print(\"end\")\n\n----------------------------------\n\n>>> task t1\n>>> 3\n>>> 2\n>>> 1\n>>> end\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n",normalizedContent:"# python中的多线程\n\n * 什么是线程？\n\n> 线程（thread）也叫轻量级进程，是操作系统能够进行运算调度的最小单位，它被包涵在进程之中，是进程中的实际运作单位。线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。\n\n * 使用多线程的好处？\n\n（1）多线程可以同时执行多个任务，充分利用 cpu 资源，提高程序的并发性\n\n（2）加速程序执行：多线程可以将一个任务拆分成多个子任务，然后并行执行每个子任务，从而缩短任务的执行时间，并加快程序的执行速度。\n\n（3）提高程序的响应速度：当主线程需要等待某个操作的完成时，如果在等待的同时运行其他任务，可以有效提高程序的响应速度。\n\n\n# 实现多线程\n\n# 创建线程\n\n * 普通创建方式：\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)\n    print('2s')\n    time.sleep(1)\n    print('1s')\n    time.sleep(1)\n    print('0s')\n    time.sleep(1)\n\nif __name__ == '__main__':\n    t1 = threading.thread(target=run, args=(\"t1\",))\n    t2 = threading.thread(target=run, args=(\"t2\",))\n    t1.start()\n    t2.start()\n\n----------------------------------\n#输出内容\n>>> task t1\n>>> task t2\n>>> 2s\n>>> 2s\n>>> 1s\n>>> 1s\n>>> 0s\n>>> 0s\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n * 继承threading.thread类，重写run方法\n\nimport threading\nimport time\n\nclass mythread(threading.thread):\n    def __init__(self, n):\n        super(mythread, self).__init__()  # 重构run函数必须要写\n        self.n = n\n\n    def run(self):\n        print(\"task\", self.n)\n        time.sleep(1)\n        print('2s')\n        time.sleep(1)\n        print('1s')\n        time.sleep(1)\n        print('0s')\n        time.sleep(1)\n\nif __name__ == \"__main__\":\n    t1 = mythread(\"t1\")\n    t2 = mythread(\"t2\")\n    t1.start()\n    t2.start()\n    \n----------------------------------\n# 输出内容\n>>> task t1\n>>> task t2\n>>> 2s\n>>> 2s\n>>> 1s\n>>> 1s\n>>> 0s\n>>> 0s\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n# 守护线程\n\n守护线程即是将子线程作为主线程的守护线程，当主线程结束后，子线程也会跟着结束。其实现方法如下所示：\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)       #此时子线程停1s\n    print('3')\n    time.sleep(1)\n    print('2')\n    time.sleep(1)\n    print('1')\n\nif __name__ == '__main__':\n    t = threading.thread(target=run, args=(\"t1\",))\n    t.setdaemon(true)   #把子进程设置为守护线程，必须在start()之前设置\n    t.start()\n    print(\"end\")\n    \n----------------------------------\n\n>>> task t1\n>>> end\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n可以发现，设置守护线程之后，当主线程结束时，子线程也将立即结束，不再执行\n\n# 主线程等待子线程结束\n\n想要让守护线程执行结束之后，主线程再结束，我们可以使用join方法，让主线程等待子线程执行\n\nimport threading\nimport time\n\ndef run(n):\n    print(\"task\", n)\n    time.sleep(1)       #此时子线程停1s\n    print('3')\n    time.sleep(1)\n    print('2')\n    time.sleep(1)\n    print('1')\n\nif __name__ == '__main__':\n    t = threading.thread(target=run, args=(\"t1\",))\n    t.setdaemon(true)   #把子进程设置为守护线程，必须在start()之前设置\n    t.start()\n    t.join() # 设置主线程等待子线程结束\n    print(\"end\")\n\n----------------------------------\n\n>>> task t1\n>>> 3\n>>> 2\n>>> 1\n>>> end\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n",charsets:{cjk:!0}},{title:"Shell学习笔记",frontmatter:{title:"Shell学习笔记",date:"2022-03-26T22:24:15.000Z",permalink:"/pages/6bd99a/",categories:["编程","Shell"],tags:["Shell","Linux"],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/03.Shell/01.Shell%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html",relativePath:"编程/03.Shell/01.Shell学习笔记.md",key:"v-6754c807",path:"/pages/6bd99a/",headers:[{level:2,title:"Shell编程",slug:"shell编程",normalizedTitle:"shell编程",charIndex:2},{level:3,title:"shell 基础",slug:"shell-基础",normalizedTitle:"shell 基础",charIndex:153},{level:3,title:"${} 变量操作",slug:"变量操作",normalizedTitle:"${} 变量操作",charIndex:3996}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"Shell编程 shell 基础 ${} 变量操作",content:'# Shell编程\n\n * 关于Shell\n\n> Shell 是一种用户与操作系统内核进行交互的命令行解释器（command-line interpreter），也是一种编程语言。\n> \n> 用户可以通过 Shell 运行系统命令、执行脚本、管理文件和目录、进行文件操作、编写简单的自动化任务等。\n\n\n# shell 基础\n\n 1.  .sh 文件第一行需要声明所用 shell ，通常为：#!/bin/bash\n\n 2.  多个命令可用分号间隔并执行，如：A ; B ；C。\n\n 3.  执行.sh文件要给予其 x 权限，即：u + x\n\n 4.  取变量值方法为在变量前增加美元符号，例：$HOME,当存在冲突时，要加转义字符 "\\"\n\n 5.  将命令赋值给变量的方法：\n     \n     * (1) 使用反引号字符（``）;\n     \n     * (2) 使用$()\n\n 6.  输入重定向，即将文件内容输出到命令中，基本语法为 command < inputfile\n     \n     (1)有两种输入重定向方式，分别为 < 和 << .\n      示例：对a.txt 文件中的文本进行排序\n      sort < a.txt\n     \n     (2)内联输入重定向，语法为command << mark ,mark为指定的标记符，用来标记输入数据的开始和结束.\n     示例：\n     `wc << EOF\n     >string1\n     >string2\n     >string3\n     >EOF\n     `\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     \n\n 7.  输出重定向，即将命令结果输出到文件中，基本语法为 command > outputfile\n     \n     （1）有两种重定向方式，分别为 > 和 >> .\n     （2）两种方式的区别：> 是写入到文件，故而会清空原文件内容，>> 则是追加到文件末尾.\n     \n     \n     \n     1\n     2\n     3\n     \n\n 8.  管道命令，用 | 符号将前一个命令的输出作为后一个命令的输入，基本语法为 command1 | command2\n\n 9.  数学表达式操作,基本语法为：$[operation]，即用中括号 括住数学表达式,示例： var1=$[3 * 9]\n\n 10. 查看命令退出码 $?，用以判断命令是否正常结束。通常，退出码为0时表示命令成功结束，否则为命令执行出错异常退出;退出状态码区间 0~255。\n\n 11. 可用 exit 指定退出码，例：exit 30\n\n 12. if-then 语法结构\n     \n     if command\n     then\n         commands\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n     \n     或\n     \n     if command ; then\n     commands\n     fi\n     \n     \n     1\n     2\n     3\n     \n\n 13. if-then-else语法结构\n     \n     if command \n     then \n         commands\n     else\n         commands\n     fi\n     \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     \n\n 14. test 命令语法结构： test conditions ，其主要用途为：\n     \n     * 数值比较\n     * 字符串比较\n     * 文件比较\n     \n     也可用另一种表达方式：\n     \n     if [condition]\n     then\n         commands\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 15. 多条件判断语法\n     \n     * [condition1] && [condition2]\n     \n     * [condition1] || [condition2]\n\n 16. if-then 高级特性\n     （1）使用双括号运算数学表达式，基本语法为((expression))。示例：\n     \n     if (( $val ** 2 > 90))\n     then\n         ((val2 = $val * 10))\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n     \n     （2）使用双方括号进行模式匹配，基本语法为[[expression]]。示例：\n     \n     if [[ $USER == r* ]]\n     \n     \n     1\n     \n\n 17. for 循环的基本语法：\n     \n     for i in list\n     do\n         commands\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 18. 字段分隔符IFS 用以分割长字符串\n     \n     #默认分隔符为空格\n     #当需要调整分隔符为回车或其他字符时，使用下面的代码改变IFS的值\n     IFS=$\'\\n\'\n     \n     #可指定多个分隔符,将字符拼接起来即可，如：\n     IFS=$\'\\n\':;\n     \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     \n\n 19. for 循环搭配通配符 ,示例：\n     \n     for f in /home/test/*\n     \n     \n     1\n     \n\n 20. C语言风格for循环，示例：\n     \n     for ((i=1;i<10;i++))\n     \n     \n     1\n     \n\n 21. while 循环语法：\n     \n     while test command\n     do\n         commands\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 22. until 语法：\n\n 23. case 语法：\n\n 24. break、continue使用 与其它语言相似，break可指定跳出层数。\n\n 25. 循环输出处理方式\n\n * 重定向方式，示例:\n   \n   for ((a=1;a<10;a++))\n   do\n       echo "a is $a"\n   done > demo.txt\n   \n   \n   1\n   2\n   3\n   4\n   \n * 管线方式，示例：\n   \n   for(....)\n   do\n       .....\n   done | sort\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n 23. 命令行参数说明\n     \n     * $0 : 程序名\n     \n     * $1-9 : 参数1-参数9\n     \n     * ${10-...} :超过9个参数的参数表示\n     \n     * $# : 表示参数个数\n     \n     * $* : 表示所有参数构成的单个字符串\n     \n     * $@ : 表示所有参数构成的同一字符串的多个独立的单词\n\n 24. 读取用户输入\n     \n     (1)read 命令\n     \n     * read 提示\n       read -p "...." name\n     \n     * read 超时 : -t后为设定的秒数\n       read -t 10 -p "" name\n     \n     * read 隐藏输入 read -s -p "" password\n     \n     * read 读取文件\n     \n     cat file1 | while read line\n     do\n         .....\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 25. 捕捉信号\n\n 26. 后台运行脚本，在后面加 & 符号\n\n 27. 定期执行命令： crontab\n\n 28. 函数编程\n\n(1)基本函数语法\n\nfunction a{\n    commands\n}\n\n\n1\n2\n3\n\n\n或\n\na(){\n    commands\n}\n\n\n1\n2\n3\n\n\n(2)使用return 返回值\n\n(3)使用echo 输出值\n\n(4)局部变量和全局变量\n\n * 局部变量定义需在变量前使用 local\n\n * 全局变量的定义可以使用global\n\n(5)变量的传递及处理\n\n(6)库文件创建/引入：source 或 .\n\n\n# ${} 变量操作\n\n 1. 取变量值\n    说明：取得对应变量的值，等同$var\n\n#示例\na=hello\necho ${a}\n\n#输出：hello\n\n\n1\n2\n3\n4\n5\n\n 2. 取变量长度\n\n#示例\na=hello\necho ${#a}\n\n#输出：5\n\n\n1\n2\n3\n4\n5\n\n 3. 进行变量替换：${var/word1/word2} 说明：将变量中的指定字符替换成目标字符\n\n#示例\na="My name is Bob"\necho ${a/My/Your}\n\n#输出:  Your name is Bob\n\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# shell编程\n\n * 关于shell\n\n> shell 是一种用户与操作系统内核进行交互的命令行解释器（command-line interpreter），也是一种编程语言。\n> \n> 用户可以通过 shell 运行系统命令、执行脚本、管理文件和目录、进行文件操作、编写简单的自动化任务等。\n\n\n# shell 基础\n\n 1.  .sh 文件第一行需要声明所用 shell ，通常为：#!/bin/bash\n\n 2.  多个命令可用分号间隔并执行，如：a ; b ；c。\n\n 3.  执行.sh文件要给予其 x 权限，即：u + x\n\n 4.  取变量值方法为在变量前增加美元符号，例：$home,当存在冲突时，要加转义字符 "\\"\n\n 5.  将命令赋值给变量的方法：\n     \n     * (1) 使用反引号字符（``）;\n     \n     * (2) 使用$()\n\n 6.  输入重定向，即将文件内容输出到命令中，基本语法为 command < inputfile\n     \n     (1)有两种输入重定向方式，分别为 < 和 << .\n      示例：对a.txt 文件中的文本进行排序\n      sort < a.txt\n     \n     (2)内联输入重定向，语法为command << mark ,mark为指定的标记符，用来标记输入数据的开始和结束.\n     示例：\n     `wc << eof\n     >string1\n     >string2\n     >string3\n     >eof\n     `\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     \n\n 7.  输出重定向，即将命令结果输出到文件中，基本语法为 command > outputfile\n     \n     （1）有两种重定向方式，分别为 > 和 >> .\n     （2）两种方式的区别：> 是写入到文件，故而会清空原文件内容，>> 则是追加到文件末尾.\n     \n     \n     \n     1\n     2\n     3\n     \n\n 8.  管道命令，用 | 符号将前一个命令的输出作为后一个命令的输入，基本语法为 command1 | command2\n\n 9.  数学表达式操作,基本语法为：$[operation]，即用中括号 括住数学表达式,示例： var1=$[3 * 9]\n\n 10. 查看命令退出码 $?，用以判断命令是否正常结束。通常，退出码为0时表示命令成功结束，否则为命令执行出错异常退出;退出状态码区间 0~255。\n\n 11. 可用 exit 指定退出码，例：exit 30\n\n 12. if-then 语法结构\n     \n     if command\n     then\n         commands\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n     \n     或\n     \n     if command ; then\n     commands\n     fi\n     \n     \n     1\n     2\n     3\n     \n\n 13. if-then-else语法结构\n     \n     if command \n     then \n         commands\n     else\n         commands\n     fi\n     \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     \n\n 14. test 命令语法结构： test conditions ，其主要用途为：\n     \n     * 数值比较\n     * 字符串比较\n     * 文件比较\n     \n     也可用另一种表达方式：\n     \n     if [condition]\n     then\n         commands\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 15. 多条件判断语法\n     \n     * [condition1] && [condition2]\n     \n     * [condition1] || [condition2]\n\n 16. if-then 高级特性\n     （1）使用双括号运算数学表达式，基本语法为((expression))。示例：\n     \n     if (( $val ** 2 > 90))\n     then\n         ((val2 = $val * 10))\n     fi\n     \n     \n     1\n     2\n     3\n     4\n     \n     \n     （2）使用双方括号进行模式匹配，基本语法为[[expression]]。示例：\n     \n     if [[ $user == r* ]]\n     \n     \n     1\n     \n\n 17. for 循环的基本语法：\n     \n     for i in list\n     do\n         commands\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 18. 字段分隔符ifs 用以分割长字符串\n     \n     #默认分隔符为空格\n     #当需要调整分隔符为回车或其他字符时，使用下面的代码改变ifs的值\n     ifs=$\'\\n\'\n     \n     #可指定多个分隔符,将字符拼接起来即可，如：\n     ifs=$\'\\n\':;\n     \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     \n\n 19. for 循环搭配通配符 ,示例：\n     \n     for f in /home/test/*\n     \n     \n     1\n     \n\n 20. c语言风格for循环，示例：\n     \n     for ((i=1;i<10;i++))\n     \n     \n     1\n     \n\n 21. while 循环语法：\n     \n     while test command\n     do\n         commands\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 22. until 语法：\n\n 23. case 语法：\n\n 24. break、continue使用 与其它语言相似，break可指定跳出层数。\n\n 25. 循环输出处理方式\n\n * 重定向方式，示例:\n   \n   for ((a=1;a<10;a++))\n   do\n       echo "a is $a"\n   done > demo.txt\n   \n   \n   1\n   2\n   3\n   4\n   \n * 管线方式，示例：\n   \n   for(....)\n   do\n       .....\n   done | sort\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n 23. 命令行参数说明\n     \n     * $0 : 程序名\n     \n     * $1-9 : 参数1-参数9\n     \n     * ${10-...} :超过9个参数的参数表示\n     \n     * $# : 表示参数个数\n     \n     * $* : 表示所有参数构成的单个字符串\n     \n     * $@ : 表示所有参数构成的同一字符串的多个独立的单词\n\n 24. 读取用户输入\n     \n     (1)read 命令\n     \n     * read 提示\n       read -p "...." name\n     \n     * read 超时 : -t后为设定的秒数\n       read -t 10 -p "" name\n     \n     * read 隐藏输入 read -s -p "" password\n     \n     * read 读取文件\n     \n     cat file1 | while read line\n     do\n         .....\n     done\n     \n     \n     1\n     2\n     3\n     4\n     \n\n 25. 捕捉信号\n\n 26. 后台运行脚本，在后面加 & 符号\n\n 27. 定期执行命令： crontab\n\n 28. 函数编程\n\n(1)基本函数语法\n\nfunction a{\n    commands\n}\n\n\n1\n2\n3\n\n\n或\n\na(){\n    commands\n}\n\n\n1\n2\n3\n\n\n(2)使用return 返回值\n\n(3)使用echo 输出值\n\n(4)局部变量和全局变量\n\n * 局部变量定义需在变量前使用 local\n\n * 全局变量的定义可以使用global\n\n(5)变量的传递及处理\n\n(6)库文件创建/引入：source 或 .\n\n\n# ${} 变量操作\n\n 1. 取变量值\n    说明：取得对应变量的值，等同$var\n\n#示例\na=hello\necho ${a}\n\n#输出：hello\n\n\n1\n2\n3\n4\n5\n\n 2. 取变量长度\n\n#示例\na=hello\necho ${#a}\n\n#输出：5\n\n\n1\n2\n3\n4\n5\n\n 3. 进行变量替换：${var/word1/word2} 说明：将变量中的指定字符替换成目标字符\n\n#示例\na="my name is bob"\necho ${a/my/your}\n\n#输出:  your name is bob\n\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0}},{title:"shell中的条件判断",frontmatter:{title:"shell中的条件判断",date:"2022-04-12T19:29:24.000Z",permalink:"/pages/84cf23/",categories:["编程","Shell"],tags:["Shell","Linux"],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/03.Shell/02.Shell%E4%B8%AD%E7%9A%84%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD.html",relativePath:"编程/03.Shell/02.Shell中的条件判断.md",key:"v-3403cb1c",path:"/pages/84cf23/",headers:[{level:2,title:"shell做条件判断",slug:"shell做条件判断",normalizedTitle:"shell做条件判断",charIndex:2},{level:3,title:"test 判断表达式",slug:"test-判断表达式",normalizedTitle:"test 判断表达式",charIndex:17},{level:3,title:"基本语法",slug:"基本语法",normalizedTitle:"基本语法",charIndex:61},{level:4,title:"数值比较",slug:"数值比较",normalizedTitle:"数值比较",charIndex:41},{level:4,title:"字符串比较",slug:"字符串比较",normalizedTitle:"字符串比较",charIndex:46},{level:4,title:"文件比较",slug:"文件比较",normalizedTitle:"文件比较",charIndex:52},{level:4,title:"高级特性",slug:"高级特性",normalizedTitle:"高级特性",charIndex:749}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"shell做条件判断 test 判断表达式 基本语法 数值比较 字符串比较 文件比较 高级特性",content:"# shell做条件判断\n\n\n# test 判断表达式\n\n> test 通常可用于数值比较、字符串比较、文件比较\n\n\n# 基本语法\n\n#常规写法\nif test commands\nthen\n  commands\nelse\n  commands\nfi\n\n#或使用'[]'符号代替\nif [command]\nthen\n  commands\nelse\n  commands\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 数值比较\n\n(1)\n\n# 字符串比较\n\n(1)判断内容为空\n\n# 写法一：不推荐\na=''\nif test $a\nthen\n  echo '内容为空'\nelse\nthen\n  echo '内容不为空'\nfi\n\n#或使用'[]'符号代替\n\nif [ -z \"$a\" ]\nthen\n  ...\nelse\n  ...\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 文件比较\n\n(1) 判断文件是否存在\n\nif [ -e $file]\n\n(2)判断文件存在并且是目录\n\nif [ -d $file]\n\n(3)判断file是文件\n\nif [ -f $file ]\n\n(4)判断文件存在且可读\n\nif [ -r $file ]\n\n(5)判断文件存在且可写\n\nif [ -w $file ]\n\n(6)判断文件存在且可执行\n\nif [ -x $file ]\n\n(7)判断文件存在并且非空\n\nif [ -s $file ]\n\n(8)判断文件存在且归当前用户所有\n\nif [ -o $file ]\n\n(9)判断文件存在且默认组与当前用户一致\n\nif [ -g $file ]\n\n# 高级特性\n\n 1. 整数运算和比较，用(())\n\n#示例1：赋值\na=10\nb=$(( $a * 5 ))\necho \"$b\"\n\n输出: 50\n\n\n#示例2：判断\nif (( $var \\> 90 ))\n....\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 2. 条件判断和字符串比较，用[[]]\n\n# 示例1：模式匹配\nu=hello\nif [[ $u == h* ]]\nthen \n  echo \"yes\"\nfi\n\n#输出:  yes\n\n# 示例2：判断文件file.txt存在且变量内容为hello\nif [[ -e file.txt && $var == \"hello\" ]]\n...\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",normalizedContent:"# shell做条件判断\n\n\n# test 判断表达式\n\n> test 通常可用于数值比较、字符串比较、文件比较\n\n\n# 基本语法\n\n#常规写法\nif test commands\nthen\n  commands\nelse\n  commands\nfi\n\n#或使用'[]'符号代替\nif [command]\nthen\n  commands\nelse\n  commands\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 数值比较\n\n(1)\n\n# 字符串比较\n\n(1)判断内容为空\n\n# 写法一：不推荐\na=''\nif test $a\nthen\n  echo '内容为空'\nelse\nthen\n  echo '内容不为空'\nfi\n\n#或使用'[]'符号代替\n\nif [ -z \"$a\" ]\nthen\n  ...\nelse\n  ...\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 文件比较\n\n(1) 判断文件是否存在\n\nif [ -e $file]\n\n(2)判断文件存在并且是目录\n\nif [ -d $file]\n\n(3)判断file是文件\n\nif [ -f $file ]\n\n(4)判断文件存在且可读\n\nif [ -r $file ]\n\n(5)判断文件存在且可写\n\nif [ -w $file ]\n\n(6)判断文件存在且可执行\n\nif [ -x $file ]\n\n(7)判断文件存在并且非空\n\nif [ -s $file ]\n\n(8)判断文件存在且归当前用户所有\n\nif [ -o $file ]\n\n(9)判断文件存在且默认组与当前用户一致\n\nif [ -g $file ]\n\n# 高级特性\n\n 1. 整数运算和比较，用(())\n\n#示例1：赋值\na=10\nb=$(( $a * 5 ))\necho \"$b\"\n\n输出: 50\n\n\n#示例2：判断\nif (( $var \\> 90 ))\n....\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 2. 条件判断和字符串比较，用[[]]\n\n# 示例1：模式匹配\nu=hello\nif [[ $u == h* ]]\nthen \n  echo \"yes\"\nfi\n\n#输出:  yes\n\n# 示例2：判断文件file.txt存在且变量内容为hello\nif [[ -e file.txt && $var == \"hello\" ]]\n...\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n",charsets:{cjk:!0}},{title:"shell脚本内一些set 命令的使用",frontmatter:{title:"shell脚本内一些set 命令的使用",date:"2023-03-01T21:32:54.000Z",permalink:"/pages/554077/",categories:["编程","Shell"],tags:["Linux","Shell"],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/03.Shell/03.shell%E8%84%9A%E6%9C%AC%E4%B8%ADset%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8.html",relativePath:"编程/03.Shell/03.shell脚本中set命令的使用.md",key:"v-c3570448",path:"/pages/554077/",headers:[{level:2,title:"set -e",slug:"set-e",normalizedTitle:"set -e",charIndex:73},{level:2,title:"set -u",slug:"set-u",normalizedTitle:"set -u",charIndex:756},{level:2,title:"set -x 和set +x",slug:"set-x-和set-x",normalizedTitle:"set -x 和set +x",charIndex:1036},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1760}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"set -e set -u set -x 和set +x 总结",content:'# shell脚本内一些set 命令的使用\n\n在shell脚本中添加set指令能设置所使用shell的执行方式，可依照不同的需求来做设置\n\n\n# set -e\n\n没有使用set -e的时候，shell脚本默认遇到错误也可以继续执行下去。这在一些重要场景下是很危险的操作，因为很有可能因为很小的错误引发一连串的大问题，因而，我们需要使用set -e去限制错误脚本的运行。\n\n * 下面以一个简单的示例说明set -e的作用：\n\n待执行的test.sh中，尝试列出h.sh的内容\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\ncat h.sh\necho "this is my script file"\n\n\n\n1\n2\n3\n4\n5\n\n\n而若本地不存在这个"h.sh"文件，此时执行test.sh就会报错,其输出像这样：\n\ncat: h.sh: No such file or directory\nthis is my script file\n\n\n1\n2\n\n\n可以看到，即使脚本遇到错误，后续的命令依旧执行了。而有些时候，我们希望程序执行遇到错误时不要再继续了，而是应该退出，此时就应该在脚本中加上set -e\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\nset -e\n\ncat h.sh\necho "this is my script file"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n此时，当我们再次执行test.sh脚本时，程序的输出内容将会发生改变：\n\ncat: h.sh: No such file or directory\n\n\n1\n\n\n可以看到，在脚本运行遇到错误后，会输出错误信息，然后就不再执行后续的命令了。\n\n\n# set -u\n\n该命令用以检查脚本内的变量，如果有变量未被定义将终止脚本。适用于脚本的自我检测。\n\n * 下面是一个简单的脚本示例\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\nset -u\necho $A\necho "helloworld"\n\n\n1\n2\n3\n4\n5\n\n\n执行test.sh后，终端会输出下面的错误信息:\n\n./test.sh: line 3: A: unbound variable\n\n\n1\n\n\n通过错误信息，我们可以看到，由于变量A没有事先定义，导致程序自检未通过，从而报错，脚本终止了。\n\n\n# set -x 和set +x\n\n"set -x"和"set +x"是用于shell调试的，它们其实是一个显示脚本执行过程并将脚本内的变量的值暴露出来的一个开关，-x 是开，+x 等于是默认的关闭，一般情况下，脚本是关闭这个显示过程的。\n\n下面是一个使用示例：\n\n[dxzh@centos7 demo]$ cat ./test.sh \n#!/bin/bash\nset -x\nc=$(pwd)\ns=$(pwd)/a.sh\nif [ -d $c ]\nthen\n    echo $c is a dictionary\nfi\nset +x\nif [ -f $s ]\nthen\n    echo "$s is a file"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在执行./test.sh后，它将会输出下面的结果：\n\n++ pwd\n+ c=/home/dxzh/scripts/demo\n++ pwd\n+ s=/home/dxzh/scripts/demo/a.sh\n+ \'[\' -d /home/dxzh/scripts/demo \']\'\n+ echo /home/dxzh/scripts/demo is a dictionary\n/home/dxzh/scripts/demo is a dictionary\n+ set +x\n/home/dxzh/scripts/demo/a.sh is a file\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n可以看到，在set -x命令后，程序中的每条含变量的的语句都被打印出来了，且能直观看到变量值，而在set +x 命令后，对应的变量值则不会被打印和显示。\n\n\n# 总结\n\nset -e (debug断点模式)，这个在脚本的流程控制中常常用到，比如，某一个脚本，不希望见到任何错误（返回值非零表示错误），因为这个错误对于脚本工作很重要，比如安装脚本，前面都错了，后面的行还在执行，有可能造成灾难性的后果，这将大大的提高脚本的健壮性。\n\nset -u (专门针对变量的模式)，如果有未赋值定义的变量，通常对程序意味着冗余，无效，这不是我们所希望的事情。（如果，shell使用了大量的变量的话），或者，某个变量为空，而在脚本内rm -rf 变量，此时，set -u将会保护你，因为，如果为空，而又没有-u，rm -rf 命令将会删除一切，这个时候，你设置了set -u 可能会救你一命！！！\n\nset -x 显示脚本执行过程，并显示脚本对变量的处理结果。如果，某一个脚本使用了大量的变量，而我们希望能看到这些变量的传递，使用是否正确，那么，set -x 将是你很好的选择。（快速定位问题，尤其是变量所产生的问题）\n\n综上，set -ue可以保证shell脚本的健壮性！！！set -x 可以为你提供可视化的变量值检查。如果有危险命令，比如> 重定向，rm -rf 删除，这些，请尽量使用这些set。',normalizedContent:'# shell脚本内一些set 命令的使用\n\n在shell脚本中添加set指令能设置所使用shell的执行方式，可依照不同的需求来做设置\n\n\n# set -e\n\n没有使用set -e的时候，shell脚本默认遇到错误也可以继续执行下去。这在一些重要场景下是很危险的操作，因为很有可能因为很小的错误引发一连串的大问题，因而，我们需要使用set -e去限制错误脚本的运行。\n\n * 下面以一个简单的示例说明set -e的作用：\n\n待执行的test.sh中，尝试列出h.sh的内容\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\ncat h.sh\necho "this is my script file"\n\n\n\n1\n2\n3\n4\n5\n\n\n而若本地不存在这个"h.sh"文件，此时执行test.sh就会报错,其输出像这样：\n\ncat: h.sh: no such file or directory\nthis is my script file\n\n\n1\n2\n\n\n可以看到，即使脚本遇到错误，后续的命令依旧执行了。而有些时候，我们希望程序执行遇到错误时不要再继续了，而是应该退出，此时就应该在脚本中加上set -e\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\nset -e\n\ncat h.sh\necho "this is my script file"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n此时，当我们再次执行test.sh脚本时，程序的输出内容将会发生改变：\n\ncat: h.sh: no such file or directory\n\n\n1\n\n\n可以看到，在脚本运行遇到错误后，会输出错误信息，然后就不再执行后续的命令了。\n\n\n# set -u\n\n该命令用以检查脚本内的变量，如果有变量未被定义将终止脚本。适用于脚本的自我检测。\n\n * 下面是一个简单的脚本示例\n\n[root@centos7 ~]# cat test.sh \n#!/bin/bash\nset -u\necho $a\necho "helloworld"\n\n\n1\n2\n3\n4\n5\n\n\n执行test.sh后，终端会输出下面的错误信息:\n\n./test.sh: line 3: a: unbound variable\n\n\n1\n\n\n通过错误信息，我们可以看到，由于变量a没有事先定义，导致程序自检未通过，从而报错，脚本终止了。\n\n\n# set -x 和set +x\n\n"set -x"和"set +x"是用于shell调试的，它们其实是一个显示脚本执行过程并将脚本内的变量的值暴露出来的一个开关，-x 是开，+x 等于是默认的关闭，一般情况下，脚本是关闭这个显示过程的。\n\n下面是一个使用示例：\n\n[dxzh@centos7 demo]$ cat ./test.sh \n#!/bin/bash\nset -x\nc=$(pwd)\ns=$(pwd)/a.sh\nif [ -d $c ]\nthen\n    echo $c is a dictionary\nfi\nset +x\nif [ -f $s ]\nthen\n    echo "$s is a file"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n在执行./test.sh后，它将会输出下面的结果：\n\n++ pwd\n+ c=/home/dxzh/scripts/demo\n++ pwd\n+ s=/home/dxzh/scripts/demo/a.sh\n+ \'[\' -d /home/dxzh/scripts/demo \']\'\n+ echo /home/dxzh/scripts/demo is a dictionary\n/home/dxzh/scripts/demo is a dictionary\n+ set +x\n/home/dxzh/scripts/demo/a.sh is a file\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n可以看到，在set -x命令后，程序中的每条含变量的的语句都被打印出来了，且能直观看到变量值，而在set +x 命令后，对应的变量值则不会被打印和显示。\n\n\n# 总结\n\nset -e (debug断点模式)，这个在脚本的流程控制中常常用到，比如，某一个脚本，不希望见到任何错误（返回值非零表示错误），因为这个错误对于脚本工作很重要，比如安装脚本，前面都错了，后面的行还在执行，有可能造成灾难性的后果，这将大大的提高脚本的健壮性。\n\nset -u (专门针对变量的模式)，如果有未赋值定义的变量，通常对程序意味着冗余，无效，这不是我们所希望的事情。（如果，shell使用了大量的变量的话），或者，某个变量为空，而在脚本内rm -rf 变量，此时，set -u将会保护你，因为，如果为空，而又没有-u，rm -rf 命令将会删除一切，这个时候，你设置了set -u 可能会救你一命！！！\n\nset -x 显示脚本执行过程，并显示脚本对变量的处理结果。如果，某一个脚本使用了大量的变量，而我们希望能看到这些变量的传递，使用是否正确，那么，set -x 将是你很好的选择。（快速定位问题，尤其是变量所产生的问题）\n\n综上，set -ue可以保证shell脚本的健壮性！！！set -x 可以为你提供可视化的变量值检查。如果有危险命令，比如> 重定向，rm -rf 删除，这些，请尽量使用这些set。',charsets:{cjk:!0}},{title:"收集的一些shell练习题",frontmatter:{title:"收集的一些shell练习题",date:"2023-08-03T20:27:17.000Z",permalink:"/pages/e3a119/",categories:["编程","Shell"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E7%BC%96%E7%A8%8B/03.Shell/04.%E4%B8%80%E4%BA%9Bshell%E7%BB%83%E4%B9%A0%E9%A2%98.html",relativePath:"编程/03.Shell/04.一些shell练习题.md",key:"v-6142e01a",path:"/pages/e3a119/",headers:[{level:2,title:"练习题",slug:"练习题",normalizedTitle:"练习题",charIndex:2},{level:3,title:"基本语法",slug:"基本语法",normalizedTitle:"基本语法",charIndex:10},{level:3,title:"三剑客(sed/awk/grep)",slug:"三剑客-sed-awk-grep",normalizedTitle:"三剑客(sed/awk/grep)",charIndex:1964},{level:3,title:"进阶应用",slug:"进阶应用",normalizedTitle:"进阶应用",charIndex:3296}],lastUpdated:"2023/12/10 06:20:53",lastUpdatedTimestamp:1702160453e3,headersStr:"练习题 基本语法 三剑客(sed/awk/grep) 进阶应用",content:'# 练习题\n\n\n# 基本语法\n\n * 循环ping192.168.110网段的所有主机\n\n#!/bin/bash\ni=1\nfor i in {1..254}\ndo\n    # 参数说明-c指定ping次数，-w 指定ping超时时间, -i为ping间隔\n   ping -c 2 -w 3 -i 0.3 192.168.110.$i $> /dev/null\n  if [ $? -eq 0 ] ;then\n echo "192.168.110.$i is yes"\n else\n echo "192.168.110.$i is no" \n fi\n let i++\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n * for批量创建用户\n\nuser=$`cat /opt/user.txt`\nfor i in $user\ndo\n   useradd $i\n   echo "1234" | passwd --stdin $i\n\ndone\n~    \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 编写脚本文件example1.sh，存放在/home/cauc/scripts目录下。 脚本功能为：查找某文件是否存在（以参数形式），若存在，则将其权限设置为用户主可读可改，其他人无任何权限。否则则返回无此文件的信息。\n\n#!/bin/bash\nif [ -e $1 ]\nthen\n\tchmod 600 $1\nelse\n\techo "The file $1 does not exist"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 编写脚本文件sum.sh，存放在/home/cauc/scripts目录下。脚本功能为：计算从1加到100的和并返回结果\n\n#!/bin/bash\ns=0\nfor((i=0;i<=100;i++))\ndo\n\ts=$(($s+$i));\ndone\necho "the sum is:$s"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 编写 shell脚本， 首先显示当天日期， 然后查找给定的用户是否在系统中工作（who 命令）。 如果在系统中，就输出一条欢迎语句（例如 hello， xxx！）；如果不在系统中，就输出一条语句（waiting for xxx！）\n\n#!/bin/bash\ndate\nif who|grep "^$1"\nthen\n\techo "hello,$1!"\nelse\n\techo "waiting for $1!"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 为指定用户发送在线消息\n\n（1）若指定用户不在线（未登陆系统），则每10分钟（实验中为了测试效果，可改为3s）试一次，直至用户登录系统后再发送信息\n\n（2）用户名与消息通过为止参数传递给脚本\n\n#!/bin/bash\nusername=$1\n#判断格式参数是否为空\nif [ $# -lt 1 ]\n then\n echo "Usage:`basename $0` <username> [<message>]"\n exit 1\nfi\n#判断账号是否存在\nif grep "^$username:" /etc/passwd &> /dev/nell;then :\n  else\n        echo "用户不存在"\n        exit 2\nfi\n#判断用户是否在线\nuntil who | grep "$username" &> /dev/null\ndo\n        echo "用户不在线,正在尝试连接"\n        sleep 3\ndone\nmes=$*\necho "$mes" | write "$username"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n * 编写一个shell脚本以输出一个文本文件nowcoder.txt中的行数\n\necho $(wc -l < ./a.sh )\n\n\n1\n\n * 查看日志的时候，经常会从文件的末尾往前查看，请你写一个bash shell脚本以输出一个文本文件nowcoder.txt中的最后5行。\n\ntail -n 5 < nowcoder.txt\n\n\n\n1\n2\n\n * 编写一个bash脚本以输出一个文本文件nowcoder.txt中第5行的内容。\n\n# 方法1\nawk "NR==5" nowcoder.txt\n\n# 方法2\nhead -n 5 ./nowcoder.txt | tail -n 1\n\n# 方法3\ncat nowcoder.txt | sed -n \'5,5p\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三剑客(sed/awk/grep)\n\n * 编写一个shell脚本以输出一个文本文件nowcoder.txt中空行的行号（空行可能连续，从1开始输出）\n\n# 方法1\n# 参数说明：-n打印行号，\'^\\s*$\' 表示开头到结尾0个或多个空白字符\ngrep -n \'^\\s*$\' ./nowcoder.txt\n\ngrep -n \'^$\' ./nowcoder.txt\n\n# 方法2\nawk \'/^\\s*$/{print NR}\' nowcoder.txt\n\n# 方法3\ncat nowcoder.txt | sed -n \'5,5p\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 写一个 bash脚本以去掉一个文本文件nowcoder.txt中的空行\n\n# 方法1\ngrep -v \'^$\' nowcoder.txt\n\n# 方法2\n$ cat ./nowcoder.txt | sed -n \'/^$/!p\'\n\n# 方法3\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 写一个bash脚本以统计一个文本文件nowcoder.txt中字母数小于8的单词。\n\n# 方法1\nfor i in $(cat nowcoder.txt)\ndo\n   # echo "$i"\n   count=$(( $(echo $i | wc -c) - 1 ))\n   if [ $count -lt 8 ]\n   then\n      echo $i\n   fi\ndone\n\n\n# 方法2\nawk -F" " \'{for(i=1;i<=NF;i++){if(length($i) < 8){print $i}}}\' nowcoder.txt\n\n# 方法3 \ncat nowcoder.txt | sed \'s/ /\\n/g\' | awk \'{if(length($0)<8) print}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n * 统计所有进程占用内存百分比的和\n\n# 方法1\nsum=0\nfor i in $(ps -aux | awk \'{print $6}\' nowcoder.txt)\ndo\n   ((sum+=$i))\ndone\necho $sum  \n\n# 方法2\ncat nowcoder.txt | gawk \'{sum+=$4}END{print sum}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * 写一个 bash脚本以统计一个文本文件 nowcoder.txt 中每个单词出现的个数。\n\n示例:\n\n假设 nowcoder.txt 内容如下：\n\nwelcome nowcoder\nwelcome to nowcoder\nnowcoder\n\n\n1\n2\n3\n\n\n你的脚本应当输出（以词频升序排列）：\n\nto 1\nwelcome 2\nnowcoder 3\n\n\n1\n2\n3\n\n\n# 方法1\nawk \'{for(i=1;i<=NF;i++) a[$i]+=1}END{for(x in a) print x,a[x]}\' nowcoder.txt\n\n\n1\n2\n\n\n\n# 进阶应用',normalizedContent:'# 练习题\n\n\n# 基本语法\n\n * 循环ping192.168.110网段的所有主机\n\n#!/bin/bash\ni=1\nfor i in {1..254}\ndo\n    # 参数说明-c指定ping次数，-w 指定ping超时时间, -i为ping间隔\n   ping -c 2 -w 3 -i 0.3 192.168.110.$i $> /dev/null\n  if [ $? -eq 0 ] ;then\n echo "192.168.110.$i is yes"\n else\n echo "192.168.110.$i is no" \n fi\n let i++\ndone\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n * for批量创建用户\n\nuser=$`cat /opt/user.txt`\nfor i in $user\ndo\n   useradd $i\n   echo "1234" | passwd --stdin $i\n\ndone\n~    \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 编写脚本文件example1.sh，存放在/home/cauc/scripts目录下。 脚本功能为：查找某文件是否存在（以参数形式），若存在，则将其权限设置为用户主可读可改，其他人无任何权限。否则则返回无此文件的信息。\n\n#!/bin/bash\nif [ -e $1 ]\nthen\n\tchmod 600 $1\nelse\n\techo "the file $1 does not exist"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 编写脚本文件sum.sh，存放在/home/cauc/scripts目录下。脚本功能为：计算从1加到100的和并返回结果\n\n#!/bin/bash\ns=0\nfor((i=0;i<=100;i++))\ndo\n\ts=$(($s+$i));\ndone\necho "the sum is:$s"\n\n\n1\n2\n3\n4\n5\n6\n7\n\n * 编写 shell脚本， 首先显示当天日期， 然后查找给定的用户是否在系统中工作（who 命令）。 如果在系统中，就输出一条欢迎语句（例如 hello， xxx！）；如果不在系统中，就输出一条语句（waiting for xxx！）\n\n#!/bin/bash\ndate\nif who|grep "^$1"\nthen\n\techo "hello,$1!"\nelse\n\techo "waiting for $1!"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 为指定用户发送在线消息\n\n（1）若指定用户不在线（未登陆系统），则每10分钟（实验中为了测试效果，可改为3s）试一次，直至用户登录系统后再发送信息\n\n（2）用户名与消息通过为止参数传递给脚本\n\n#!/bin/bash\nusername=$1\n#判断格式参数是否为空\nif [ $# -lt 1 ]\n then\n echo "usage:`basename $0` <username> [<message>]"\n exit 1\nfi\n#判断账号是否存在\nif grep "^$username:" /etc/passwd &> /dev/nell;then :\n  else\n        echo "用户不存在"\n        exit 2\nfi\n#判断用户是否在线\nuntil who | grep "$username" &> /dev/null\ndo\n        echo "用户不在线,正在尝试连接"\n        sleep 3\ndone\nmes=$*\necho "$mes" | write "$username"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n * 编写一个shell脚本以输出一个文本文件nowcoder.txt中的行数\n\necho $(wc -l < ./a.sh )\n\n\n1\n\n * 查看日志的时候，经常会从文件的末尾往前查看，请你写一个bash shell脚本以输出一个文本文件nowcoder.txt中的最后5行。\n\ntail -n 5 < nowcoder.txt\n\n\n\n1\n2\n\n * 编写一个bash脚本以输出一个文本文件nowcoder.txt中第5行的内容。\n\n# 方法1\nawk "nr==5" nowcoder.txt\n\n# 方法2\nhead -n 5 ./nowcoder.txt | tail -n 1\n\n# 方法3\ncat nowcoder.txt | sed -n \'5,5p\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 三剑客(sed/awk/grep)\n\n * 编写一个shell脚本以输出一个文本文件nowcoder.txt中空行的行号（空行可能连续，从1开始输出）\n\n# 方法1\n# 参数说明：-n打印行号，\'^\\s*$\' 表示开头到结尾0个或多个空白字符\ngrep -n \'^\\s*$\' ./nowcoder.txt\n\ngrep -n \'^$\' ./nowcoder.txt\n\n# 方法2\nawk \'/^\\s*$/{print nr}\' nowcoder.txt\n\n# 方法3\ncat nowcoder.txt | sed -n \'5,5p\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 写一个 bash脚本以去掉一个文本文件nowcoder.txt中的空行\n\n# 方法1\ngrep -v \'^$\' nowcoder.txt\n\n# 方法2\n$ cat ./nowcoder.txt | sed -n \'/^$/!p\'\n\n# 方法3\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n * 写一个bash脚本以统计一个文本文件nowcoder.txt中字母数小于8的单词。\n\n# 方法1\nfor i in $(cat nowcoder.txt)\ndo\n   # echo "$i"\n   count=$(( $(echo $i | wc -c) - 1 ))\n   if [ $count -lt 8 ]\n   then\n      echo $i\n   fi\ndone\n\n\n# 方法2\nawk -f" " \'{for(i=1;i<=nf;i++){if(length($i) < 8){print $i}}}\' nowcoder.txt\n\n# 方法3 \ncat nowcoder.txt | sed \'s/ /\\n/g\' | awk \'{if(length($0)<8) print}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n * 统计所有进程占用内存百分比的和\n\n# 方法1\nsum=0\nfor i in $(ps -aux | awk \'{print $6}\' nowcoder.txt)\ndo\n   ((sum+=$i))\ndone\necho $sum  \n\n# 方法2\ncat nowcoder.txt | gawk \'{sum+=$4}end{print sum}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * 写一个 bash脚本以统计一个文本文件 nowcoder.txt 中每个单词出现的个数。\n\n示例:\n\n假设 nowcoder.txt 内容如下：\n\nwelcome nowcoder\nwelcome to nowcoder\nnowcoder\n\n\n1\n2\n3\n\n\n你的脚本应当输出（以词频升序排列）：\n\nto 1\nwelcome 2\nnowcoder 3\n\n\n1\n2\n3\n\n\n# 方法1\nawk \'{for(i=1;i<=nf;i++) a[$i]+=1}end{for(x in a) print x,a[x]}\' nowcoder.txt\n\n\n1\n2\n\n\n\n# 进阶应用',charsets:{cjk:!0}},{title:"关于运维工程师",frontmatter:{title:"关于运维工程师",date:"2022-08-22T19:00:37.000Z",permalink:"/pages/9fa080/",categories:["运维"],titleTag:"转载",tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/00.%E5%85%B3%E4%BA%8E%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88.html",relativePath:"运维/00.关于运维工程师.md",key:"v-4a0f2628",path:"/pages/9fa080/",headers:[{level:2,title:"做一名好的运维工程师，你需要知道、做到：",slug:"做一名好的运维工程师-你需要知道、做到",normalizedTitle:"做一名好的运维工程师，你需要知道、做到：",charIndex:117},{level:3,title:"一、保障业务长期稳定运行",slug:"一、保障业务长期稳定运行",normalizedTitle:"一、保障业务长期稳定运行",charIndex:142},{level:4,title:"1、业务跑在什么上面？",slug:"_1、业务跑在什么上面",normalizedTitle:"1、业务跑在什么上面？",charIndex:175},{level:4,title:"2、业务出了问题怎么及时知道？",slug:"_2、业务出了问题怎么及时知道",normalizedTitle:"2、业务出了问题怎么及时知道？",charIndex:313},{level:4,title:"3、在家里收到报警，但服务器是内网IP，怎么也得解决问题吧？",slug:"_3、在家里收到报警-但服务器是内网ip-怎么也得解决问题吧",normalizedTitle:"3、在家里收到报警，但服务器是内网ip，怎么也得解决问题吧？",charIndex:405},{level:3,title:"二、保障数据安全可靠",slug:"二、保障数据安全可靠",normalizedTitle:"二、保障数据安全可靠",charIndex:507},{level:4,title:"1、有时需要手动改数据库内容？",slug:"_1、有时需要手动改数据库内容",normalizedTitle:"1、有时需要手动改数据库内容？",charIndex:539},{level:4,title:"2、万一数据库服务器硬件坏了怎么办？",slug:"_2、万一数据库服务器硬件坏了怎么办",normalizedTitle:"2、万一数据库服务器硬件坏了怎么办？",charIndex:582},{level:4,title:"3、数据库要还原怎么办？",slug:"_3、数据库要还原怎么办",normalizedTitle:"3、数据库要还原怎么办？",charIndex:633},{level:4,title:"4、如果是用户上传的图片或文件服务器坏了怎么办？",slug:"_4、如果是用户上传的图片或文件服务器坏了怎么办",normalizedTitle:"4、如果是用户上传的图片或文件服务器坏了怎么办？",charIndex:710},{level:4,title:"5、小心黑客，要增加服务器安全性？",slug:"_5、小心黑客-要增加服务器安全性",normalizedTitle:"5、小心黑客，要增加服务器安全性？",charIndex:804},{level:3,title:"三、大性能",slug:"三、大性能",normalizedTitle:"三、大性能",charIndex:880},{level:4,title:"1、越来越多的用户来访问我们的网站，一台web服务器抗不住了怎么办？",slug:"_1、越来越多的用户来访问我们的网站-一台web服务器抗不住了怎么办",normalizedTitle:"1、越来越多的用户来访问我们的网站，一台web服务器抗不住了怎么办？",charIndex:889},{level:4,title:"2、用户注册发表的文章与评论太多，一台数据库抗不住了怎么办？",slug:"_2、用户注册发表的文章与评论太多-一台数据库抗不住了怎么办",normalizedTitle:"2、用户注册发表的文章与评论太多，一台数据库抗不住了怎么办？",charIndex:1013},{level:4,title:"3、N多用户上传下载文件，磁盘抗不住了怎么办？",slug:"_3、n多用户上传下载文件-磁盘抗不住了怎么办",normalizedTitle:"3、n多用户上传下载文件，磁盘抗不住了怎么办？",charIndex:1165},{level:4,title:"4、网站上好多图片，总有用户反应网站加载太慢，怎么办？",slug:"_4、网站上好多图片-总有用户反应网站加载太慢-怎么办",normalizedTitle:"4、网站上好多图片，总有用户反应网站加载太慢，怎么办？",charIndex:1244},{level:4,title:"5、运营商是个大难题，他们之间的带宽好像很小，联通IP访问我电信网站怎么就这么慢呢？",slug:"_5、运营商是个大难题-他们之间的带宽好像很小-联通ip访问我电信网站怎么就这么慢呢",normalizedTitle:"5、运营商是个大难题，他们之间的带宽好像很小，联通ip访问我电信网站怎么就这么慢呢？",charIndex:1339},{level:3,title:"四、自动化",slug:"四、自动化",normalizedTitle:"四、自动化",charIndex:1476},{level:4,title:"1、公司新买100台服务器，公司竟然就1个移动光驱，这装系统得到什么时候？",slug:"_1、公司新买100台服务器-公司竟然就1个移动光驱-这装系统得到什么时候",normalizedTitle:"1、公司新买100台服务器，公司竟然就1个移动光驱，这装系统得到什么时候？",charIndex:1504},{level:4,title:"2、每次装完机要优化很多内容，什么文件描述符、端口、软件安装啊，手动操作不累死去？",slug:"_2、每次装完机要优化很多内容-什么文件描述符、端口、软件安装啊-手动操作不累死去",normalizedTitle:"2、每次装完机要优化很多内容，什么文件描述符、端口、软件安装啊，手动操作不累死去？",charIndex:1579},{level:4,title:"3、系统装完后登陆要输入密码，这么多台啊？",slug:"_3、系统装完后登陆要输入密码-这么多台啊",normalizedTitle:"3、系统装完后登陆要输入密码，这么多台啊？",charIndex:1647},{level:4,title:"4、要批量把新代码发布到线上服务器，怎么办？",slug:"_4、要批量把新代码发布到线上服务器-怎么办",normalizedTitle:"4、要批量把新代码发布到线上服务器，怎么办？",charIndex:1702},{level:3,title:"五、其他",slug:"五、其他",normalizedTitle:"五、其他",charIndex:1765},{level:4,title:"1、搭整套测试环境需要5台服务器，但公司穷的只有一台空闲服务器？",slug:"_1、搭整套测试环境需要5台服务器-但公司穷的只有一台空闲服务器",normalizedTitle:"1、搭整套测试环境需要5台服务器，但公司穷的只有一台空闲服务器？",charIndex:1773},{level:4,title:"2、研发人员的代码控制，权限控制，总要运维人员管呀？",slug:"_2、研发人员的代码控制-权限控制-总要运维人员管呀",normalizedTitle:"2、研发人员的代码控制，权限控制，总要运维人员管呀？",charIndex:1889},{level:3,title:"结尾：",slug:"结尾",normalizedTitle:"结尾：",charIndex:1939},{level:2,title:"文章来源",slug:"文章来源",normalizedTitle:"文章来源",charIndex:2112}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"做一名好的运维工程师，你需要知道、做到： 一、保障业务长期稳定运行 1、业务跑在什么上面？ 2、业务出了问题怎么及时知道？ 3、在家里收到报警，但服务器是内网IP，怎么也得解决问题吧？ 二、保障数据安全可靠 1、有时需要手动改数据库内容？ 2、万一数据库服务器硬件坏了怎么办？ 3、数据库要还原怎么办？ 4、如果是用户上传的图片或文件服务器坏了怎么办？ 5、小心黑客，要增加服务器安全性？ 三、大性能 1、越来越多的用户来访问我们的网站，一台web服务器抗不住了怎么办？ 2、用户注册发表的文章与评论太多，一台数据库抗不住了怎么办？ 3、N多用户上传下载文件，磁盘抗不住了怎么办？ 4、网站上好多图片，总有用户反应网站加载太慢，怎么办？ 5、运营商是个大难题，他们之间的带宽好像很小，联通IP访问我电信网站怎么就这么慢呢？ 四、自动化 1、公司新买100台服务器，公司竟然就1个移动光驱，这装系统得到什么时候？ 2、每次装完机要优化很多内容，什么文件描述符、端口、软件安装啊，手动操作不累死去？ 3、系统装完后登陆要输入密码，这么多台啊？ 4、要批量把新代码发布到线上服务器，怎么办？ 五、其他 1、搭整套测试环境需要5台服务器，但公司穷的只有一台空闲服务器？ 2、研发人员的代码控制，权限控制，总要运维人员管呀？ 结尾： 文章来源",content:"# 关于运维工程师，你需要知道这些！\n\n\n# 运维工程师主要工作是做什么？\n\n总结两句话：\n\n1、保障业务长期稳定运行（如网站服务器、游戏服务器等）。\n\n2、保障数据安全可靠（如用户名密码、游戏数据、博客文章、交易数据等）。\n\n\n# 做一名好的运维工程师，你需要知道、做到：\n\n\n# 一、保障业务长期稳定运行\n\n出一点点差错，用户就要投诉了。\n\n# 1、业务跑在什么上面？\n\n网站服务器一般是apache,nginx,tomcat等。但是真正跑通流程还需要Mysql数据库来存储用户密码及其它。很多程序都要php的解析，所以LNMP、LAMP(即nginx、apache、mysql、php)环境部署是必须掌握的技能。\n\n# 2、业务出了问题怎么及时知道？\n\n这就需要监控软件来邮件或短信来通知你，常用的有zabbix,nagios等。报警发邮件，也得一个邮件程序呀，sendmail或postfix。\n\n# 3、在家里收到报警，但服务器是内网IP，怎么也得解决问题吧？\n\n在公司搭建openvpn或pptp或openswan，在家里通过VPN拨入内网，24小时解决问题…唉，半夜爬起来解决问题也没工资。\n\n\n# 二、保障数据安全可靠\n\n出一点点差错，领导要找你喝茶了。\n\n# 1、有时需要手动改数据库内容？\n\n所以要会基本的Mysql数据库增删查改命令。\n\n# 2、万一数据库服务器硬件坏了怎么办？\n\n需要有个备库以备不时之需，所以需要Mysql主从复制。\n\n# 3、数据库要还原怎么办？\n\n所以需要在crond中定期全备Mysql数据，以便还原使用。如果要还原到指定时间点，还要学会Mysql增量备份与恢复。\n\n# 4、如果是用户上传的图片或文件服务器坏了怎么办？\n\n定时备份可能还不够，需要使用rsync加inotify来实时备份。以便任一时刻主服务器坏掉，也能保障所有图片有备份可以用来恢复。\n\n# 5、小心黑客，要增加服务器安全性？\n\nssh轻易不能让外人访问，那么就设置只允许公司的IP或跳板机IP访问，这些都通过iptables来控制。\n\n\n# 三、大性能\n\n# 1、越来越多的用户来访问我们的网站，一台web服务器抗不住了怎么办？\n\n那就需要多台web服务器来负担，但多台服务器之间怎么进行负载均衡呢，这就需要用到nginx反向代理或LVS+keepalived或haproxy+heartbeat了。\n\n# 2、用户注册发表的文章与评论太多，一台数据库抗不住了怎么办？\n\n数据库压力分为读和写，如果写抗不住，需要进行分表分库到多个服务器上。如果是读压力不够了，可以使用mysql-proxy读写分离， 来分担读的压力。更简单方便的方法，把数据库里的内容放到内存上，这就用上memcache或redis了。\n\n# 3、N多用户上传下载文件，磁盘抗不住了怎么办？\n\n把多块磁盘做成raid，或者使用分布式存储文件系统如MFS，GlusterFS来提高磁盘的读写能力。\n\n# 4、网站上好多图片，总有用户反应网站加载太慢，怎么办？\n\n这时可以把网站上的图片通过squid或varnish缓存到网站前端，尽可能的增加访问速度，当然，最好是购买商业的CDN加速。\n\n# 5、运营商是个大难题，他们之间的带宽好像很小，联通IP访问我电信网站怎么就这么慢呢？\n\n这时可以使用bind自建一个DNS服务器，把网站的DNS记录指向自建DNS服务器上，配置好解析规则，以后联通IP解析到联通网站上， 电信IP解析到电信网站上，体验就会好很多啦。\n\n\n# 四、自动化\n\n * 终极目标：跑死机器，闲死人。\n\n# 1、公司新买100台服务器，公司竟然就1个移动光驱，这装系统得到什么时候？\n\n使用kickstart或cobbler来网络远程自动安装系统吧。\n\n# 2、每次装完机要优化很多内容，什么文件描述符、端口、软件安装啊，手动操作不累死去？\n\n赶紧学会shell，将解放非常多的工作量。\n\n# 3、系统装完后登陆要输入密码，这么多台啊？\n\n使用expect吧，自动读取提示来输入密码，并执行命令。\n\n# 4、要批量把新代码发布到线上服务器，怎么办？\n\n使用saltstack或puppet或ansible吧，绝对爽歪歪。\n\n\n# 五、其他\n\n# 1、搭整套测试环境需要5台服务器，但公司穷的只有一台空闲服务器？\n\n学会xen或kvm或docker吧，虚拟出多台服务器，就能解决资源问题了。特别是docker，强烈推荐，以后某个研发人员让你部署一套新环境，分分钟帮他解决。\n\n# 2、研发人员的代码控制，权限控制，总要运维人员管呀？\n\nsvn或git，这个是肯定要有的。\n\n\n# 结尾：\n\n现在我们在回过头来思考，运维工程师平时干些啥呢？\n\n * 1、 随时解决报警故障。\n\n * 2、 业务程序更新。\n\n * 3、 编写一些脚本，监控或完成其他可自动完成功能。\n\n * 4、 运维架构完善，部署一些用起来更方便更可靠或性能更好的开源工具以及制定运维流程规范。\n\n * 5、 打杂，如调交换机，装系统，部署新环境等。\n\n\n# 文章来源\n\n * csdn-King-Blog",normalizedContent:"# 关于运维工程师，你需要知道这些！\n\n\n# 运维工程师主要工作是做什么？\n\n总结两句话：\n\n1、保障业务长期稳定运行（如网站服务器、游戏服务器等）。\n\n2、保障数据安全可靠（如用户名密码、游戏数据、博客文章、交易数据等）。\n\n\n# 做一名好的运维工程师，你需要知道、做到：\n\n\n# 一、保障业务长期稳定运行\n\n出一点点差错，用户就要投诉了。\n\n# 1、业务跑在什么上面？\n\n网站服务器一般是apache,nginx,tomcat等。但是真正跑通流程还需要mysql数据库来存储用户密码及其它。很多程序都要php的解析，所以lnmp、lamp(即nginx、apache、mysql、php)环境部署是必须掌握的技能。\n\n# 2、业务出了问题怎么及时知道？\n\n这就需要监控软件来邮件或短信来通知你，常用的有zabbix,nagios等。报警发邮件，也得一个邮件程序呀，sendmail或postfix。\n\n# 3、在家里收到报警，但服务器是内网ip，怎么也得解决问题吧？\n\n在公司搭建openvpn或pptp或openswan，在家里通过vpn拨入内网，24小时解决问题…唉，半夜爬起来解决问题也没工资。\n\n\n# 二、保障数据安全可靠\n\n出一点点差错，领导要找你喝茶了。\n\n# 1、有时需要手动改数据库内容？\n\n所以要会基本的mysql数据库增删查改命令。\n\n# 2、万一数据库服务器硬件坏了怎么办？\n\n需要有个备库以备不时之需，所以需要mysql主从复制。\n\n# 3、数据库要还原怎么办？\n\n所以需要在crond中定期全备mysql数据，以便还原使用。如果要还原到指定时间点，还要学会mysql增量备份与恢复。\n\n# 4、如果是用户上传的图片或文件服务器坏了怎么办？\n\n定时备份可能还不够，需要使用rsync加inotify来实时备份。以便任一时刻主服务器坏掉，也能保障所有图片有备份可以用来恢复。\n\n# 5、小心黑客，要增加服务器安全性？\n\nssh轻易不能让外人访问，那么就设置只允许公司的ip或跳板机ip访问，这些都通过iptables来控制。\n\n\n# 三、大性能\n\n# 1、越来越多的用户来访问我们的网站，一台web服务器抗不住了怎么办？\n\n那就需要多台web服务器来负担，但多台服务器之间怎么进行负载均衡呢，这就需要用到nginx反向代理或lvs+keepalived或haproxy+heartbeat了。\n\n# 2、用户注册发表的文章与评论太多，一台数据库抗不住了怎么办？\n\n数据库压力分为读和写，如果写抗不住，需要进行分表分库到多个服务器上。如果是读压力不够了，可以使用mysql-proxy读写分离， 来分担读的压力。更简单方便的方法，把数据库里的内容放到内存上，这就用上memcache或redis了。\n\n# 3、n多用户上传下载文件，磁盘抗不住了怎么办？\n\n把多块磁盘做成raid，或者使用分布式存储文件系统如mfs，glusterfs来提高磁盘的读写能力。\n\n# 4、网站上好多图片，总有用户反应网站加载太慢，怎么办？\n\n这时可以把网站上的图片通过squid或varnish缓存到网站前端，尽可能的增加访问速度，当然，最好是购买商业的cdn加速。\n\n# 5、运营商是个大难题，他们之间的带宽好像很小，联通ip访问我电信网站怎么就这么慢呢？\n\n这时可以使用bind自建一个dns服务器，把网站的dns记录指向自建dns服务器上，配置好解析规则，以后联通ip解析到联通网站上， 电信ip解析到电信网站上，体验就会好很多啦。\n\n\n# 四、自动化\n\n * 终极目标：跑死机器，闲死人。\n\n# 1、公司新买100台服务器，公司竟然就1个移动光驱，这装系统得到什么时候？\n\n使用kickstart或cobbler来网络远程自动安装系统吧。\n\n# 2、每次装完机要优化很多内容，什么文件描述符、端口、软件安装啊，手动操作不累死去？\n\n赶紧学会shell，将解放非常多的工作量。\n\n# 3、系统装完后登陆要输入密码，这么多台啊？\n\n使用expect吧，自动读取提示来输入密码，并执行命令。\n\n# 4、要批量把新代码发布到线上服务器，怎么办？\n\n使用saltstack或puppet或ansible吧，绝对爽歪歪。\n\n\n# 五、其他\n\n# 1、搭整套测试环境需要5台服务器，但公司穷的只有一台空闲服务器？\n\n学会xen或kvm或docker吧，虚拟出多台服务器，就能解决资源问题了。特别是docker，强烈推荐，以后某个研发人员让你部署一套新环境，分分钟帮他解决。\n\n# 2、研发人员的代码控制，权限控制，总要运维人员管呀？\n\nsvn或git，这个是肯定要有的。\n\n\n# 结尾：\n\n现在我们在回过头来思考，运维工程师平时干些啥呢？\n\n * 1、 随时解决报警故障。\n\n * 2、 业务程序更新。\n\n * 3、 编写一些脚本，监控或完成其他可自动完成功能。\n\n * 4、 运维架构完善，部署一些用起来更方便更可靠或性能更好的开源工具以及制定运维流程规范。\n\n * 5、 打杂，如调交换机，装系统，部署新环境等。\n\n\n# 文章来源\n\n * csdn-king-blog",charsets:{cjk:!0}},{title:"centos包管理相关",frontmatter:{title:"centos包管理相关",date:"2021-11-22T06:42:32.000Z",permalink:"/pages/f3e444/",categories:["运维","Linux","Centos"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/01.Centos/01.centos%E5%8C%85%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3.html",relativePath:"运维/01.Linux/01.Centos/01.centos包管理相关.md",key:"v-116e9d56",path:"/pages/f3e444/",headers:[{level:2,title:"基本知识",slug:"基本知识",normalizedTitle:"基本知识",charIndex:85},{level:3,title:"1. yum 与 rpm 区别？",slug:"_1-yum-与-rpm-区别",normalizedTitle:"1. yum 与 rpm 区别？",charIndex:94},{level:3,title:'2.".repo"文件是什么？',slug:"_2-repo-文件是什么",normalizedTitle:"2.&quot;.repo&quot;文件是什么？",charIndex:null},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:54},{level:3,title:"yum 命令",slug:"yum-命令",normalizedTitle:"yum 命令",charIndex:387},{level:3,title:"rpm 命令(全称：RedHat Package Manager)",slug:"rpm-命令-全称-redhat-package-manager",normalizedTitle:"rpm 命令(全称：redhat package manager)",charIndex:893},{level:2,title:"解决离线安装缺少依赖的问题",slug:"解决离线安装缺少依赖的问题",normalizedTitle:"解决离线安装缺少依赖的问题",charIndex:1283},{level:3,title:"方法1：使用downloadonly插件",slug:"方法1-使用downloadonly插件",normalizedTitle:"方法1：使用downloadonly插件",charIndex:1301},{level:3,title:"方法2：使用Yumdownloader软件包",slug:"方法2-使用yumdownloader软件包",normalizedTitle:"方法2：使用yumdownloader软件包",charIndex:1644},{level:3,title:"方法3：使用repotrack（推荐）",slug:"方法3-使用repotrack-推荐",normalizedTitle:"方法3：使用repotrack（推荐）",charIndex:1921},{level:3,title:"下载之后的安装",slug:"下载之后的安装",normalizedTitle:"下载之后的安装",charIndex:2179}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:'基本知识 1. yum 与 rpm 区别？ 2.".repo"文件是什么？ 常用命令 yum 命令 rpm 命令(全称：RedHat Package Manager) 解决离线安装缺少依赖的问题 方法1：使用downloadonly插件 方法2：使用Yumdownloader软件包 方法3：使用repotrack（推荐） 下载之后的安装',content:'# centos/redhat包管理\n\n本篇文章整理记录了centos/redhat系统中包管理的相关概念和常用命令，并给出离线安装包时缺少依赖的几种解决办法。\n\n\n# 基本知识\n\n\n# 1. yum 与 rpm 区别？\n\n> yum基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\n\n\n# 2.".repo"文件是什么？\n\n * .repo文件是什么\n\n> repo文件是Fedora中yum源（软件仓库）的配置文件，通常一个repo文件定义了一个或者多个软件仓库的细节内容，例如我们将从哪里下载需要安装或者升级的软件包，repo文件中的设置内容将被yum读取和应用！\n\n * .repo文件通常所在位置?\n\n> /etc/yum.repos.d/\n\n\n# 常用命令\n\n\n# yum 命令\n\n# 安装软件包\nsudo yum install [package]\n\n# 删除软件包及其依赖\nsudo yum remove [package]\n\n# 升级软件包\nsudo yum update [package]\n\n# 查看软件包信息\nsudo yum info [package]\n\n# 清理本地缓存\nsudo yum clean all \n# 清理插件缓存\nsudo yum clean plugins\n\n# 构建缓存\nsudo yum makecache\n\n# 查找软件包\nsudo yum search [package]\n\n# 查看包依赖信息\nsudo yum deplist [package]\n\n# 显示可用仓库\nsudo yum repolist enabled\n\n# 显示已安装包\nyum list installed\n\n# 显示可更新包\nyum list updates\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# rpm 命令(全称：RedHat Package Manager)\n\n * 安装rpm 包\n\n# -i:安装，-v:显示详细信息,-h:显示安装进度\nrpm -ivh [package]\n\n# 忽略报错强制安装\nrpm --force -ivh [package]\n\n# 不检测依赖安装\nrpm --nodeps -ivh [package]\n\n# -U（大写）选项的含义是：如果该软件没安装过则直接安装；若没安装则升级至最新版本。\nrpm -Uvh [pacakge]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 卸载rpm包\n\n# 卸载包\nrpm -e [package]\n\n\n\n1\n2\n3\n\n * 查询包\n\n#列出所有安装过的包\nrpm -qa\n\n#获得某个软件包的文件全名\nrpm -q [pack_short]\n\n\n1\n2\n3\n4\n5\n\n\n\n# 解决离线安装缺少依赖的问题\n\n\n# 方法1：使用downloadonly插件\n\n说明：该种方法仅会将主软件包和基于你现在的操作系统所缺少的依赖关系包一并下载。如果指定的rpm包已经在你的os上安装结束，那么下面命令就得不到想要的结果\n\n 1. 安装插件\n\nsudo yum install yum-plugin-downloadonly\n\n\n1\n\n 2. 安装好之后执行下载命令\n\n# 执行下面命令\nsudo yum install --downloadonly <package-name>\n\n# 也可通过 -–downloaddir 指定下载目录\nsudo yum install --downloadonly --downloaddir=/temp/ <package-name>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 方法2：使用Yumdownloader软件包\n\n 1. 安装Yumdownloader工具\n\nsudo yum install yum-utils\n\n\n1\n\n 2. 开始下载软件包\n\n# -–destdir：指定 rpm 包下载目录（不指定时，默认为当前目录）\n# –-resolve：下载依赖的 rpm 包。\n#使用 --destdir 参数，将软件下载到一个特定的目录下\n#示例：\nsudo yumdownloader --resolve --destdir=/root/mypackages/ vsftpd\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 方法3：使用repotrack（推荐）\n\n 1. 首先安装repotrack工具\n\nsudo yum install yum-utils\n\n\n1\n\n 2. 开始下载rpm包\n\n#下载rpm包(默认当前目录)\n# 示例：repotrack vsftpd\nrepotrack [package_name]\n\n#下载rpm包(指定下载目录，使用-p)\n#示例--下载离线包至当前目录下的temp文件夹:\n\nrepotrack -p ./temp [package_name]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 下载之后的安装\n\n * 安装离线包\n\n# 切换到rpm 所在目录，执行下面的命令\nrpm -ivh *.rpm\n\n# 或使用下面的命令\nrpm -Uvh --force --nodeps *.rpm\n\n\n\n1\n2\n3\n4\n5\n6\n',normalizedContent:'# centos/redhat包管理\n\n本篇文章整理记录了centos/redhat系统中包管理的相关概念和常用命令，并给出离线安装包时缺少依赖的几种解决办法。\n\n\n# 基本知识\n\n\n# 1. yum 与 rpm 区别？\n\n> yum基于rpm包管理，能够从指定的服务器自动下载rpm包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\n\n\n# 2.".repo"文件是什么？\n\n * .repo文件是什么\n\n> repo文件是fedora中yum源（软件仓库）的配置文件，通常一个repo文件定义了一个或者多个软件仓库的细节内容，例如我们将从哪里下载需要安装或者升级的软件包，repo文件中的设置内容将被yum读取和应用！\n\n * .repo文件通常所在位置?\n\n> /etc/yum.repos.d/\n\n\n# 常用命令\n\n\n# yum 命令\n\n# 安装软件包\nsudo yum install [package]\n\n# 删除软件包及其依赖\nsudo yum remove [package]\n\n# 升级软件包\nsudo yum update [package]\n\n# 查看软件包信息\nsudo yum info [package]\n\n# 清理本地缓存\nsudo yum clean all \n# 清理插件缓存\nsudo yum clean plugins\n\n# 构建缓存\nsudo yum makecache\n\n# 查找软件包\nsudo yum search [package]\n\n# 查看包依赖信息\nsudo yum deplist [package]\n\n# 显示可用仓库\nsudo yum repolist enabled\n\n# 显示已安装包\nyum list installed\n\n# 显示可更新包\nyum list updates\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n\n# rpm 命令(全称：redhat package manager)\n\n * 安装rpm 包\n\n# -i:安装，-v:显示详细信息,-h:显示安装进度\nrpm -ivh [package]\n\n# 忽略报错强制安装\nrpm --force -ivh [package]\n\n# 不检测依赖安装\nrpm --nodeps -ivh [package]\n\n# -u（大写）选项的含义是：如果该软件没安装过则直接安装；若没安装则升级至最新版本。\nrpm -uvh [pacakge]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n * 卸载rpm包\n\n# 卸载包\nrpm -e [package]\n\n\n\n1\n2\n3\n\n * 查询包\n\n#列出所有安装过的包\nrpm -qa\n\n#获得某个软件包的文件全名\nrpm -q [pack_short]\n\n\n1\n2\n3\n4\n5\n\n\n\n# 解决离线安装缺少依赖的问题\n\n\n# 方法1：使用downloadonly插件\n\n说明：该种方法仅会将主软件包和基于你现在的操作系统所缺少的依赖关系包一并下载。如果指定的rpm包已经在你的os上安装结束，那么下面命令就得不到想要的结果\n\n 1. 安装插件\n\nsudo yum install yum-plugin-downloadonly\n\n\n1\n\n 2. 安装好之后执行下载命令\n\n# 执行下面命令\nsudo yum install --downloadonly <package-name>\n\n# 也可通过 -–downloaddir 指定下载目录\nsudo yum install --downloadonly --downloaddir=/temp/ <package-name>\n\n\n1\n2\n3\n4\n5\n\n\n\n# 方法2：使用yumdownloader软件包\n\n 1. 安装yumdownloader工具\n\nsudo yum install yum-utils\n\n\n1\n\n 2. 开始下载软件包\n\n# -–destdir：指定 rpm 包下载目录（不指定时，默认为当前目录）\n# –-resolve：下载依赖的 rpm 包。\n#使用 --destdir 参数，将软件下载到一个特定的目录下\n#示例：\nsudo yumdownloader --resolve --destdir=/root/mypackages/ vsftpd\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 方法3：使用repotrack（推荐）\n\n 1. 首先安装repotrack工具\n\nsudo yum install yum-utils\n\n\n1\n\n 2. 开始下载rpm包\n\n#下载rpm包(默认当前目录)\n# 示例：repotrack vsftpd\nrepotrack [package_name]\n\n#下载rpm包(指定下载目录，使用-p)\n#示例--下载离线包至当前目录下的temp文件夹:\n\nrepotrack -p ./temp [package_name]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 下载之后的安装\n\n * 安装离线包\n\n# 切换到rpm 所在目录，执行下面的命令\nrpm -ivh *.rpm\n\n# 或使用下面的命令\nrpm -uvh --force --nodeps *.rpm\n\n\n\n1\n2\n3\n4\n5\n6\n',charsets:{cjk:!0}},{title:"Centos7配置yum源",frontmatter:{title:"Centos7配置yum源",date:"2021-12-08T11:08:41.000Z",permalink:"/pages/b14489/",categories:["运维","Linux","Centos"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/01.Centos/02.Centos7%E9%85%8D%E7%BD%AEyum%E6%BA%90.html",relativePath:"运维/01.Linux/01.Centos/02.Centos7配置yum源.md",key:"v-425a7c43",path:"/pages/b14489/",headers:[{level:2,title:"更换yum国内源：",slug:"更换yum国内源",normalizedTitle:"更换yum国内源：",charIndex:96}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"更换yum国内源：",content:"# 一、centos7配置yum源\n\nCentOS默认的yum源有时候不是国内镜像，导致yum在线安装及更新速度不是很理想，这时候需要将yum源设置为国内镜像站点（网易or阿里云等）\n\n\n# 更换yum国内源：\n\n 1. 首先备份系统自带yum源配置文件/etc/yum.repos.d/CentOS-Base.repo\n\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\n\n1\n\n 2. 找到yum源的配置路径\n\ncd /etc/yum.repos.d\n\n\n1\n\n 3. 下载源文件\n\n * 阿里源（推荐）：\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n\n1\n\n * 网易源：\n\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo\n\n\n1\n\n 4. 清理yum缓存，并生成新的缓存\n\nyum clean all\nyum makecache\n\n\n1\n2\n\n\n4.更新yum源检查是否生效\n\nyum update\n\n\n1\n\n\n\n\n如箭头所示，则表示yum源配置成功了!",normalizedContent:"# 一、centos7配置yum源\n\ncentos默认的yum源有时候不是国内镜像，导致yum在线安装及更新速度不是很理想，这时候需要将yum源设置为国内镜像站点（网易or阿里云等）\n\n\n# 更换yum国内源：\n\n 1. 首先备份系统自带yum源配置文件/etc/yum.repos.d/centos-base.repo\n\nmv /etc/yum.repos.d/centos-base.repo /etc/yum.repos.d/centos-base.repo.backup\n\n\n1\n\n 2. 找到yum源的配置路径\n\ncd /etc/yum.repos.d\n\n\n1\n\n 3. 下载源文件\n\n * 阿里源（推荐）：\n\nwget -o /etc/yum.repos.d/centos-base.repo http://mirrors.aliyun.com/repo/centos-7.repo\n\n\n1\n\n * 网易源：\n\nwget -o /etc/yum.repos.d/centos-base.repo http://mirrors.163.com/.help/centos7-base-163.repo\n\n\n1\n\n 4. 清理yum缓存，并生成新的缓存\n\nyum clean all\nyum makecache\n\n\n1\n2\n\n\n4.更新yum源检查是否生效\n\nyum update\n\n\n1\n\n\n\n\n如箭头所示，则表示yum源配置成功了!",charsets:{cjk:!0}},{title:"ubuntu包管理相关",frontmatter:{title:"ubuntu包管理相关",date:"2021-11-22T16:50:48.000Z",permalink:"/pages/fbf33b/",categories:["运维","Linux","Ubuntu"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/02.Ubuntu/01.ubuntu%E5%8C%85%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3.html",relativePath:"运维/01.Linux/02.Ubuntu/01.ubuntu包管理相关.md",key:"v-85cdc402",path:"/pages/fbf33b/",headers:[{level:3,title:"ubuntu/debian",slug:"ubuntu-debian",normalizedTitle:"ubuntu/debian",charIndex:2},{level:2,title:"基本知识",slug:"基本知识",normalizedTitle:"基本知识",charIndex:103},{level:3,title:"1. apt 与apt-get 区别？ 该如何选择？",slug:"_1-apt-与apt-get-区别-该如何选择",normalizedTitle:"1. apt 与apt-get 区别？ 该如何选择？",charIndex:112},{level:3,title:"2. 相关文件存放路径",slug:"_2-相关文件存放路径",normalizedTitle:"2. 相关文件存放路径",charIndex:565},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:54},{level:3,title:"apt 命令",slug:"apt-命令",normalizedTitle:"apt 命令",charIndex:222},{level:3,title:"apt-cache命令",slug:"apt-cache命令",normalizedTitle:"apt-cache命令",charIndex:1013},{level:2,title:"解决离线安装缺少依赖的问题",slug:"解决离线安装缺少依赖的问题",normalizedTitle:"解决离线安装缺少依赖的问题",charIndex:1392},{level:3,title:"方法1：使用 aptitude 工具",slug:"方法1-使用-aptitude-工具",normalizedTitle:"方法1：使用 aptitude 工具",charIndex:1410},{level:3,title:"方法2：使用apt-get命令",slug:"方法2-使用apt-get命令",normalizedTitle:"方法2：使用apt-get命令",charIndex:1648},{level:3,title:"方法3：apt-get install",slug:"方法3-apt-get-install",normalizedTitle:"方法3：apt-get install",charIndex:1842},{level:3,title:"完成下载后的安装",slug:"完成下载后的安装",normalizedTitle:"完成下载后的安装",charIndex:2050}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"ubuntu/debian 基本知识 1. apt 与apt-get 区别？ 该如何选择？ 2. 相关文件存放路径 常用命令 apt 命令 apt-cache命令 解决离线安装缺少依赖的问题 方法1：使用 aptitude 工具 方法2：使用apt-get命令 方法3：apt-get install 完成下载后的安装",content:'# ubuntu/debian包管理\n\n本篇文章整理记录了ubuntu/debian系统中包管理的相关概念和常用命令，并给出离线安装包时缺少依赖的几种解决办法。\n\n\n# ubuntu/debian\n\n\n# 基本知识\n\n\n# 1. apt 与apt-get 区别？ 该如何选择？\n\napt 和 apt-get 都是 Ubuntu 系统中常见的包管理工具，用于软件的安装、更新和卸载。\n\n(1)区别：\n\n * 命令行参数不完全相同：\n   \n   apt 命令行参数与 apt-get 不完全相同。例如，apt 中没有 apt-get 命令的 -y 选项，而是使用 --yes。\n\n * 进度条显示方式不同：\n   \n   apt 命令默认会显示进度条，而 apt-get 命令默认不会显示进度条。如果想要在 apt-get 命令中显示进度条，可以使用 -y 或 -q 等选项。\n\n * 自动清理方式不同： apt 默认会在安装、升级和清理软件包时自动清理无用依赖，而 apt-get 命令默认不会清理，需要使用单独的命令进行清理。\n\n(2)选择根据：\n\n * Ubuntu 版本：\n   \n   如果使用 Ubuntu 16.04 或更新版本，则可以使用 apt 命令。如果是较旧的版本，则应该使用 apt-get 命令。\n\n\n# 2. 相关文件存放路径\n\n * 软件源地址路径： /etc/apt/source.list\n\n * 软件包存放地址： /var/cache/apt/archives\n\n\n# 常用命令\n\n\n# apt 命令\n\n#apt [选项] 命令\n#更新可用软件包列表\napt update  \n\n#通过 安装/升级 软件来更新系统\napt upgrade\n\n#查找包\napt search [package]\n\n#安装包\napt install [package]\n\n#重新安装包\napt reinstall [package]\n\n#移除包\napt remove [package]\n\n#显示已安装的软件包\napt list --installed\n\n#显示软件包具体信息例如：版本号，安装大小，依赖关系，bug报告等等\napt show [package]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# apt-cache命令\n\n#获取依赖包信息\napt-cache depends [package]\n\n#查看该包被哪些包依赖\napt-cache rdepends [package]\n\n#搜索本地缓存的包\napt-cache search package_name\n#只在软件包名称中查找搜索词\napt-cache search --names-only package_name\n\n#软件包的详细元数据信息\napt-cache show package_name\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n * apt的策略\n\n默认情况下，每个已安装的软件包版本的优先级为 100，未安装的软件包的优先级为 500。同一软件包可能有多个不同优先级的版本。APT 会安装优先级较高的版本，除非安装的版本较新。\n\n\n# 解决离线安装缺少依赖的问题\n\n\n# 方法1：使用 aptitude 工具\n\n> 下载后默认存放位置在/var/cache/apt/archives\n\n 1. 安装工具\n\nsudo apt install aptitude\n\n\n1\n\n 2. 下载指定软件包\n\n# 执行下面命令\nsudo aptitude --download-only install <package-name>\n# 示例\nsudo aptitude --download-only install vsftpd\n\n\n1\n2\n3\n4\n\n\n\n# 方法2：使用apt-get命令\n\n 1. 输入下面的命令\n\nsudo apt-get –d install [package]\n\n\n1\n\n\n> 说明: 此方法仅用于当前系统中没有该包及其依赖时才有效，如果通过安装其他包时已经安装了某个依赖，这个方法就不会下载那个依赖项。（因此该方法大概率会漏项，即便是在新的系统上操作也是极大可能漏项的，因为操作系统安装过程中已经安装了一些包）\n\n\n# 方法3：apt-get install\n\n * depends方式找出依赖项交由管道处理后传递给apt-get install命令\n\n#有些包名中有<>符号，用tr将其删除\nsudo apt-get install --reinstall -d `apt-cache depends [packname] | grep depends | cut -d: f2 |tr -d "<>"`\n\n\n\n1\n2\n3\n\n\n\n# 完成下载后的安装\n\n在软件包目录下，执行下面的命令\n\nsudo dpkg -i *.deb\n\n\n1\n',normalizedContent:'# ubuntu/debian包管理\n\n本篇文章整理记录了ubuntu/debian系统中包管理的相关概念和常用命令，并给出离线安装包时缺少依赖的几种解决办法。\n\n\n# ubuntu/debian\n\n\n# 基本知识\n\n\n# 1. apt 与apt-get 区别？ 该如何选择？\n\napt 和 apt-get 都是 ubuntu 系统中常见的包管理工具，用于软件的安装、更新和卸载。\n\n(1)区别：\n\n * 命令行参数不完全相同：\n   \n   apt 命令行参数与 apt-get 不完全相同。例如，apt 中没有 apt-get 命令的 -y 选项，而是使用 --yes。\n\n * 进度条显示方式不同：\n   \n   apt 命令默认会显示进度条，而 apt-get 命令默认不会显示进度条。如果想要在 apt-get 命令中显示进度条，可以使用 -y 或 -q 等选项。\n\n * 自动清理方式不同： apt 默认会在安装、升级和清理软件包时自动清理无用依赖，而 apt-get 命令默认不会清理，需要使用单独的命令进行清理。\n\n(2)选择根据：\n\n * ubuntu 版本：\n   \n   如果使用 ubuntu 16.04 或更新版本，则可以使用 apt 命令。如果是较旧的版本，则应该使用 apt-get 命令。\n\n\n# 2. 相关文件存放路径\n\n * 软件源地址路径： /etc/apt/source.list\n\n * 软件包存放地址： /var/cache/apt/archives\n\n\n# 常用命令\n\n\n# apt 命令\n\n#apt [选项] 命令\n#更新可用软件包列表\napt update  \n\n#通过 安装/升级 软件来更新系统\napt upgrade\n\n#查找包\napt search [package]\n\n#安装包\napt install [package]\n\n#重新安装包\napt reinstall [package]\n\n#移除包\napt remove [package]\n\n#显示已安装的软件包\napt list --installed\n\n#显示软件包具体信息例如：版本号，安装大小，依赖关系，bug报告等等\napt show [package]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# apt-cache命令\n\n#获取依赖包信息\napt-cache depends [package]\n\n#查看该包被哪些包依赖\napt-cache rdepends [package]\n\n#搜索本地缓存的包\napt-cache search package_name\n#只在软件包名称中查找搜索词\napt-cache search --names-only package_name\n\n#软件包的详细元数据信息\napt-cache show package_name\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n * apt的策略\n\n默认情况下，每个已安装的软件包版本的优先级为 100，未安装的软件包的优先级为 500。同一软件包可能有多个不同优先级的版本。apt 会安装优先级较高的版本，除非安装的版本较新。\n\n\n# 解决离线安装缺少依赖的问题\n\n\n# 方法1：使用 aptitude 工具\n\n> 下载后默认存放位置在/var/cache/apt/archives\n\n 1. 安装工具\n\nsudo apt install aptitude\n\n\n1\n\n 2. 下载指定软件包\n\n# 执行下面命令\nsudo aptitude --download-only install <package-name>\n# 示例\nsudo aptitude --download-only install vsftpd\n\n\n1\n2\n3\n4\n\n\n\n# 方法2：使用apt-get命令\n\n 1. 输入下面的命令\n\nsudo apt-get –d install [package]\n\n\n1\n\n\n> 说明: 此方法仅用于当前系统中没有该包及其依赖时才有效，如果通过安装其他包时已经安装了某个依赖，这个方法就不会下载那个依赖项。（因此该方法大概率会漏项，即便是在新的系统上操作也是极大可能漏项的，因为操作系统安装过程中已经安装了一些包）\n\n\n# 方法3：apt-get install\n\n * depends方式找出依赖项交由管道处理后传递给apt-get install命令\n\n#有些包名中有<>符号，用tr将其删除\nsudo apt-get install --reinstall -d `apt-cache depends [packname] | grep depends | cut -d: f2 |tr -d "<>"`\n\n\n\n1\n2\n3\n\n\n\n# 完成下载后的安装\n\n在软件包目录下，执行下面的命令\n\nsudo dpkg -i *.deb\n\n\n1\n',charsets:{cjk:!0}},{title:"linux环境下管理任务的进程、端口",frontmatter:{title:"linux环境下管理任务的进程、端口",date:"2022-02-16T06:48:03.000Z",permalink:"/pages/ce9c59/",categories:["运维","Linux"],tags:["Linux"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/03.linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%AE%A1%E7%90%86%E4%BB%BB%E5%8A%A1%E7%9A%84%E8%BF%9B%E7%A8%8B%E3%80%81%E7%AB%AF%E5%8F%A3.html",relativePath:"运维/01.Linux/03.linux环境下管理任务的进程、端口.md",key:"v-20c66778",path:"/pages/ce9c59/",headers:[{level:2,title:"ps、netstat命令的区别",slug:"ps、netstat命令的区别",normalizedTitle:"ps、netstat命令的区别",charIndex:25},{level:2,title:"基本进程管理命令及其说明",slug:"基本进程管理命令及其说明",normalizedTitle:"基本进程管理命令及其说明",charIndex:228},{level:3,title:"ps",slug:"ps",normalizedTitle:"ps",charIndex:25},{level:3,title:"netstat",slug:"netstat",normalizedTitle:"netstat",charIndex:28},{level:4,title:"参数说明:",slug:"参数说明",normalizedTitle:"参数说明:",charIndex:716},{level:3,title:"kill",slug:"kill",normalizedTitle:"kill",charIndex:844},{level:2,title:"其它服务管理命令",slug:"其它服务管理命令",normalizedTitle:"其它服务管理命令",charIndex:898}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"ps、netstat命令的区别 基本进程管理命令及其说明 ps netstat 参数说明: kill 其它服务管理命令",content:"# linux环境下管理任务的进程、端口\n\n\n# ps、netstat命令的区别\n\n> ps 命令和 netstat 命令都是在 Linux 系统中常用的命令，不同的是 ps 命令通常用于查看系统中运行的进程信息（如进程 ID、进程名称、占用的 CPU 、内存等等），而 netstat 命令主要用于显示系统网络连接状态（比如 IP 地址、端口号、连接状态等信息），可以用来查看网络连接是否正常、哪些端口被占用以及与哪些 IP 地址建立了连接等。\n\n\n# 基本进程管理命令及其说明\n\n\n# ps\n\n 1. 显示本用户的进程\n\nps\n\n\n1\n\n 2. 显示所有用户的进程\n\nps -au\n\n\n1\n\n 3. 显示所有进程和其状态(详细信息)\n\nps -aux\n\n\n1\n\n 4. 显示所有进程(简洁信息)\n\nps -ef \n\n\n1\n\n 5. 显示指定进程和其状态\n\nps -aux | grep 服务名\n\n\n1\n\n 6. 显示特定用户的进程信息\n\nps -u username\n\n\n1\n\n\n\n# netstat\n\n * 查询端口占用\n\nnetstat -tnlp | grep <port>\n\n\n1\n\n * 一个简单示例\n\n[root@localhost ~]# netstat -tunlp | grep 7075\ntcp6       0      0 :::7075                 :::*                    LISTEN      17394/docker-proxy \n\n# 末尾的17394/docker-proxy 则为占用端口7075的进程id 和进程名\n\n\n1\n2\n3\n4\n\n\n# 参数说明:\n\n * -t (tcp) 仅显示tcp相关选项\n * -u (udp)仅显示udp相关选项\n * -n 拒绝显示别名，能显示数字的全部转化为数字\n * -l 仅列出在Listen(监听)的服务状态\n * -p 显示建立相关链接的程序名\n\n\n# kill\n\n在任务执行后可手动结束任务进程，其命令格式为：\n\nkill -9 <kid>\n\n\n1\n\n\n\n# 其它服务管理命令\n\n检查服务管理器：如果服务器使用了服务管理器（如Systemd或init.d），可以使用相应的命令来列出正在运行的服务。例如，使用systemctl命令来查看Systemd服务：\n\nsystemctl list-units --type=service\n\n\n1\n\n\n或者使用service命令来查看init.d服务：\n\nservice --status-all\n\n\n1\n",normalizedContent:"# linux环境下管理任务的进程、端口\n\n\n# ps、netstat命令的区别\n\n> ps 命令和 netstat 命令都是在 linux 系统中常用的命令，不同的是 ps 命令通常用于查看系统中运行的进程信息（如进程 id、进程名称、占用的 cpu 、内存等等），而 netstat 命令主要用于显示系统网络连接状态（比如 ip 地址、端口号、连接状态等信息），可以用来查看网络连接是否正常、哪些端口被占用以及与哪些 ip 地址建立了连接等。\n\n\n# 基本进程管理命令及其说明\n\n\n# ps\n\n 1. 显示本用户的进程\n\nps\n\n\n1\n\n 2. 显示所有用户的进程\n\nps -au\n\n\n1\n\n 3. 显示所有进程和其状态(详细信息)\n\nps -aux\n\n\n1\n\n 4. 显示所有进程(简洁信息)\n\nps -ef \n\n\n1\n\n 5. 显示指定进程和其状态\n\nps -aux | grep 服务名\n\n\n1\n\n 6. 显示特定用户的进程信息\n\nps -u username\n\n\n1\n\n\n\n# netstat\n\n * 查询端口占用\n\nnetstat -tnlp | grep <port>\n\n\n1\n\n * 一个简单示例\n\n[root@localhost ~]# netstat -tunlp | grep 7075\ntcp6       0      0 :::7075                 :::*                    listen      17394/docker-proxy \n\n# 末尾的17394/docker-proxy 则为占用端口7075的进程id 和进程名\n\n\n1\n2\n3\n4\n\n\n# 参数说明:\n\n * -t (tcp) 仅显示tcp相关选项\n * -u (udp)仅显示udp相关选项\n * -n 拒绝显示别名，能显示数字的全部转化为数字\n * -l 仅列出在listen(监听)的服务状态\n * -p 显示建立相关链接的程序名\n\n\n# kill\n\n在任务执行后可手动结束任务进程，其命令格式为：\n\nkill -9 <kid>\n\n\n1\n\n\n\n# 其它服务管理命令\n\n检查服务管理器：如果服务器使用了服务管理器（如systemd或init.d），可以使用相应的命令来列出正在运行的服务。例如，使用systemctl命令来查看systemd服务：\n\nsystemctl list-units --type=service\n\n\n1\n\n\n或者使用service命令来查看init.d服务：\n\nservice --status-all\n\n\n1\n",charsets:{cjk:!0}},{title:"linux环境下四种查找命令的使用及其区别(find/which/whereis/locate)",frontmatter:{title:"linux环境下四种查找命令的使用及其区别(find/which/whereis/locate)",date:"2022-11-26T06:19:16.000Z",permalink:"/pages/7f59e5/",categories:["运维","Linux"],tags:["Linux"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/04.linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9B%9B%E7%A7%8D%E6%9F%A5%E6%89%BE%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8C%BA%E5%88%AB.html",relativePath:"运维/01.Linux/04.linux环境下四种查找命令的区别.md",key:"v-347412c3",path:"/pages/7f59e5/",headers:[{level:2,title:"linux查找命令的使用",slug:"linux查找命令的使用",normalizedTitle:"linux查找命令的使用",charIndex:2},{level:3,title:"find",slug:"find",normalizedTitle:"find",charIndex:19},{level:3,title:"locate",slug:"locate",normalizedTitle:"locate",charIndex:792},{level:3,title:"whereis",slug:"whereis",normalizedTitle:"whereis",charIndex:1146},{level:3,title:"which",slug:"which",normalizedTitle:"which",charIndex:1359},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1662}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"linux查找命令的使用 find locate whereis which 总结",content:'# linux查找命令的使用\n\n\n# find\n\n 1. 语法规则：\n\nfind [指定目录] [选项] [指定动作]（不可调换位置）  \n\n\n1\n\n * [指定目录]： 所要搜索的目录及其所有子目录。默认为当前目录。\n * [选项]： 所要搜索的文件的特征。\n\n 2. 常用选项说明\n\n-name\n#按名称查找\n#根据目标文件的名称进行查找，允许使用“*”及“?”通配符; 如果名字使用通配符，需要加” “来查询\n\n-size\t\n#按文件大小查找\t\n#根据目标文件的大小进行查找 一般使用“＋”、“-”号设置超过或小于指定的大小作为查找条件 常用的容量单位包括 kB（注意 k 是小写）、MB、GB\n\n-type\t\n#按文件类型查找\t\n#根据文件的类型进行查找 文件类型包括普通文件（f）、目录（d）、块设备文件（b）、字符设备文件（c）等\n\n-nogroup\n#查无有效属组的文件，即文件的属组在/etc/groups中不存在\n-group\n#按组来查找\n\n-mtime\n#按文件更改时间来查找文件，-n指n天以内，+n指n天以前\n-atime\n#按文件访问时间来查找文件\n-ctime\n#按文件创建时间来查找文件，-n指n天以内，+n指n天以前\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n 3. 示例\n\n#查找etc目录下所有.conf 结尾的\nfind /etc/ -name "*.conf"\n\n#查找etc目录下以字母(不区分大小写）开头，.sh结尾的文件\nfind /etc -iname "[a-z]*.sh"\n\n#查找/home下属于zhangsan的文件并列出属性\nfind /home -user zhangsan -ls\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# locate\n\n 1. 简介\n\nlocate命令其实是“find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库(/var/lib/locatedb)，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\n\n 2. 语法规则\n\nlocate [指定目录] [选项]（可调换位置）\n\n\n1\n\n\n注：如果locate不存在，则执行安装命令"yum install mlocate"\n\n 3. 示例\n\n#查找etc目录下以sh开头的文件\nlocate etc/sh\n\n\n\n1\n2\n3\n\n\n\n# whereis\n\n 1. 简介\n\n> whereis命令只能用于程序名的搜索，而且只搜索二进制文件(参数-b)、man说明文件(参数-m)和源代码文件(参数-s)。同locate一样，查询数据库(/var/lib/locatedb)文件。所以和locate一样，查找新增加的文件前，需要先使用updatedb命令，手动更新数据库。\n\n 2. 语法规则\n\nwhereis [选项] [程序名]（不可调换位置）\n\n\n1\n\n\n\n# which\n\n 1. 简介\n\n> which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\n\n 2. 语法规则\n\nwhich [命令名]\n\n\n1\n\n 3. 示例\n\n#which 查找pwd命令\nwhich pwd\n\n#which 查找adduser命令\nwhich adduser\n\n\n1\n2\n3\n4\n5\n\n 4. 备注\n\n> which是根据使用者所配置的 PATH 变量内的目录去搜寻可运行档的。所以，不同的 PATH 配置内容所找到的命令是不一样的。\n\n\n# 总结\n\n 1. find查找磁盘空间，相较于locate和whereis速度较慢。\n\n 2. find和locate的查找单位为文件或者目录，locate其实是find -name的另一种写法。\n\n 3. locate和whereis都是在数据库中查找，所以新增文件无法查找到，必须先updatedb。\n\n 4. whereis只搜索二进制文件(参数-b)、man说明文件(参数-m)和源代码文件(参数-s)。\n\n 5. which和type查找的单位都是命令，type可区分命令类型。\n\n 6. grep查找的单位是整行信息，在一个或多个文件中搜索字符串模板，功能是分析一行信息。（功能强大）',normalizedContent:'# linux查找命令的使用\n\n\n# find\n\n 1. 语法规则：\n\nfind [指定目录] [选项] [指定动作]（不可调换位置）  \n\n\n1\n\n * [指定目录]： 所要搜索的目录及其所有子目录。默认为当前目录。\n * [选项]： 所要搜索的文件的特征。\n\n 2. 常用选项说明\n\n-name\n#按名称查找\n#根据目标文件的名称进行查找，允许使用“*”及“?”通配符; 如果名字使用通配符，需要加” “来查询\n\n-size\t\n#按文件大小查找\t\n#根据目标文件的大小进行查找 一般使用“＋”、“-”号设置超过或小于指定的大小作为查找条件 常用的容量单位包括 kb（注意 k 是小写）、mb、gb\n\n-type\t\n#按文件类型查找\t\n#根据文件的类型进行查找 文件类型包括普通文件（f）、目录（d）、块设备文件（b）、字符设备文件（c）等\n\n-nogroup\n#查无有效属组的文件，即文件的属组在/etc/groups中不存在\n-group\n#按组来查找\n\n-mtime\n#按文件更改时间来查找文件，-n指n天以内，+n指n天以前\n-atime\n#按文件访问时间来查找文件\n-ctime\n#按文件创建时间来查找文件，-n指n天以内，+n指n天以前\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n 3. 示例\n\n#查找etc目录下所有.conf 结尾的\nfind /etc/ -name "*.conf"\n\n#查找etc目录下以字母(不区分大小写）开头，.sh结尾的文件\nfind /etc -iname "[a-z]*.sh"\n\n#查找/home下属于zhangsan的文件并列出属性\nfind /home -user zhangsan -ls\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# locate\n\n 1. 简介\n\nlocate命令其实是“find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库(/var/lib/locatedb)，这个数据库中含有本地所有文件信息。linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\n\n 2. 语法规则\n\nlocate [指定目录] [选项]（可调换位置）\n\n\n1\n\n\n注：如果locate不存在，则执行安装命令"yum install mlocate"\n\n 3. 示例\n\n#查找etc目录下以sh开头的文件\nlocate etc/sh\n\n\n\n1\n2\n3\n\n\n\n# whereis\n\n 1. 简介\n\n> whereis命令只能用于程序名的搜索，而且只搜索二进制文件(参数-b)、man说明文件(参数-m)和源代码文件(参数-s)。同locate一样，查询数据库(/var/lib/locatedb)文件。所以和locate一样，查找新增加的文件前，需要先使用updatedb命令，手动更新数据库。\n\n 2. 语法规则\n\nwhereis [选项] [程序名]（不可调换位置）\n\n\n1\n\n\n\n# which\n\n 1. 简介\n\n> which命令的作用是，在path变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\n\n 2. 语法规则\n\nwhich [命令名]\n\n\n1\n\n 3. 示例\n\n#which 查找pwd命令\nwhich pwd\n\n#which 查找adduser命令\nwhich adduser\n\n\n1\n2\n3\n4\n5\n\n 4. 备注\n\n> which是根据使用者所配置的 path 变量内的目录去搜寻可运行档的。所以，不同的 path 配置内容所找到的命令是不一样的。\n\n\n# 总结\n\n 1. find查找磁盘空间，相较于locate和whereis速度较慢。\n\n 2. find和locate的查找单位为文件或者目录，locate其实是find -name的另一种写法。\n\n 3. locate和whereis都是在数据库中查找，所以新增文件无法查找到，必须先updatedb。\n\n 4. whereis只搜索二进制文件(参数-b)、man说明文件(参数-m)和源代码文件(参数-s)。\n\n 5. which和type查找的单位都是命令，type可区分命令类型。\n\n 6. grep查找的单位是整行信息，在一个或多个文件中搜索字符串模板，功能是分析一行信息。（功能强大）',charsets:{cjk:!0}},{title:"linux 中sed、awk、grep及正则表达式的用法",frontmatter:{title:"linux 中sed、awk、grep及正则表达式的用法",date:"2023-02-19T05:46:01.000Z",permalink:"/pages/80ce65/",categories:["运维","Linux"],tags:["Linux"],author:{name:"dxzh",link:"https://www.baidu.com"}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/05.linux%20%E4%B8%ADsed%E3%80%81awk%E3%80%81grep%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E7%94%A8%E6%B3%95.html",relativePath:"运维/01.Linux/05.linux 中sed、awk、grep和正则表达式的用法.md",key:"v-20406dd8",path:"/pages/80ce65/",headers:[{level:2,title:"sed-流编辑",slug:"sed-流编辑",normalizedTitle:"sed-流编辑",charIndex:2},{level:3,title:"语法",slug:"语法",normalizedTitle:"语法",charIndex:98},{level:3,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:127},{level:2,title:"gawk",slug:"gawk",normalizedTitle:"gawk",charIndex:1593},{level:3,title:"语法",slug:"语法-2",normalizedTitle:"语法",charIndex:98},{level:3,title:"基本使用",slug:"基本使用-2",normalizedTitle:"基本使用",charIndex:127},{level:2,title:"grep",slug:"grep",normalizedTitle:"grep",charIndex:2441},{level:3,title:"语法",slug:"语法-3",normalizedTitle:"语法",charIndex:98},{level:3,title:"基本使用",slug:"基本使用-3",normalizedTitle:"基本使用",charIndex:127},{level:2,title:"正则表达式",slug:"正则表达式",normalizedTitle:"正则表达式",charIndex:2488},{level:3,title:"基本正则",slug:"基本正则",normalizedTitle:"基本正则",charIndex:3518},{level:3,title:"扩展正则",slug:"扩展正则",normalizedTitle:"扩展正则",charIndex:4134}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"sed-流编辑 语法 基本使用 gawk 语法 基本使用 grep 语法 基本使用 正则表达式 基本正则 扩展正则",content:'# sed-流编辑\n\nsed（Stream Editor）是一个流式文本编辑器，用于处理和转换文本数据。它按行读取输入，可以对文本进行替换、删除、插入和其他操作，并将结果输出到标准输出。\n\n\n# 语法\n\nsed [option] [files]\n\n\n# 基本使用\n\n 1. 执行多个命令, -e 选项\n    \n    sed -e "s/hello/hi/;s/dog/cat/" ./file.txt\n    \n    \n    1\n    \n 2. 执行命令文件，-f 选项\n    \n    sed -f script.sed ./data.txt\n    \n    \n    1\n    \n    执行"cat script.sed"，可看到文件中命令如下所示：\n    \n    s/bb/aa/\n    s/red/green/\n    ....\n    \n    \n    1\n    2\n    3\n    \n 3. 多个命令还可以用下面组合的方式\n    \n    sed \'3{\n    s/local/global/\n    s/hello/hi/\n    ....\n    }\' ./data.txt\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n * 替换 (s)\n   （1）字符替换\n   \n    sed "s/cat/dog/" ./a.txt \n   \n   \n   1\n   \n   \n   （2）管线形式字符替换\n   \n    echo "helloworld" | sed "s/hello/welcome/"\n   \n   \n   1\n   \n   \n   替换选项\n   \n   1. g :替换所有匹配文本\n   2. 数字 ：替换第几处匹配\n   3. w file ：将替换结果写入到文件\n   \n   示例：将data.txt文件中的匹配结果写入到b.txt中\n   \n   sed "s/dog/cat/w b.txt" ./data.txt\n   \n   \n   1\n   \n   * 指定行替换\n   \n   sed "2,$s/dog/cat/" ./data.txt\n   \n   \n   1\n   \n   * 指定文本行替换\n   \n   sed "/user/s/aaa/bbb/" ./data.txt\n   \n   \n   1\n   \n\n * 删除行 (d)\n   \n   sed \'3d\' ./data.txt         #删除第三行\n   sed \'3,10d\' ./data.txt      #删除3-10区间的行\n   sed \'/jack/d\' ./data.txt    #删除包含“jack”的行\n   \n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 插入行 (i) ：指定行前增加新行\n   \n   sed "3i\\hello world" ./data.txt     # 将特定行插入到data.txt的第三行前\n   \n   \n   1\n   \n\n * 附加行 (a) : 指定行后增加新行\n\n * 修改行 (c) : 修改整行内容\n   \n   sed "3c\\this is new line" ./data.txt\n   sed "/home/c\\this is new line" ./data.txt\n   \n   \n   1\n   2\n   \n\n * 转换命令 (y): 字符一一映射的替换\n\n * 打印行 (p)\n   \n   #打印替换后的行\n   sed -n "s/hello/world/p" ./data.txt\n   \n   \n   \n   1\n   2\n   3\n   \n\n\n# gawk\n\n> awk是一种用于处理和分析文本数据的编程语言。它以行为单位读取输入，并允许指定如何处理每一行。awk使用一种类似于C语言的语法，并提供了许多内置函数和特殊变量，用于访问和操作输入数据。可以使用awk来提取和打印特定列，基于条件进行过滤和计算，以及执行其他高级文本处理任务。\n\n\n# 语法\n\ngawk options program file\n\n\n1\n\n\n\n# 基本使用\n\n 1. 可选变量\n    \n    (1) -F :指定分隔符，默认分隔符为空格\n    \n    #示例：使用冒号做分隔符\n    gawk -F: \'{print $1,$2}\' /etc/passwd\n    \n    \n    1\n    2\n    \n    \n    (2) -f :用于从文件中读取程序\n    \n    #示例:指定myscript.gawk 做程序文件\n    gawk -F: -f ./myscript.gawk /etc/passwd\n    \n    \n    1\n    2\n    \n\n 2. 数据字段变量。 gawk 默认以空格分割每一行的字段，其中\n    (1) $0 : 整个文本行\n    (2) $1 : 文本行第一个字段\n    (3) $n :文本行第n个字段\n    示例：\n\n    #假如存在以下一行文本\n    1 root      20   0  193724   6828   4180 S   0.0  0.4   0:03.76 systemd\n        \n    #使用gwak输出root,193724\n    gawk \'{print $2,$5}\'\n\n\n1\n2\n3\n4\n5\n\n 3. BEGIN 和 END，它们分别用于程序执行前后的操作，示例如下：\n\ngawk \'BEGIN{print "now start"}{print $0}END{print "end!"}\' /etc/passwd\n\n\n1\n\n\n\n# grep\n\ngrep是一种强大的文本搜索工具，用于在文件中查找特定的模式。它可以接受一个或多个正则表达式作为搜索模式，并在文件中寻找与之匹配的行。\n\n\n# 语法\n\ngrep [选项] pattern [文件名]\n\n\n# 基本使用\n\n 1. 常用选项\n\n常用选项：\n　　-E ：开启扩展（Extend）的正则表达式。\n　　-i ：忽略大小写（ignore case）。\n　　-v ：反过来（invert），只打印没有匹配的，而匹配的反而不打印。\n　　-n ：显示行号\n　　-w ：被匹配的文本只能是单词，而不能是单词中的某一部分，如文本中有liker，而我搜寻的只是like，就可以使用-w选项来避免匹配liker\n　　-c ：显示总共有多少行被匹配到了，而不是显示被匹配到的内容，注意如果同时使用-cv选项是显示有多少行没有被匹配到。\n　　-o ：只显示被模式匹配到的字符串。\n　　--color :将匹配到的内容以颜色高亮显示。\n　　-A  n：显示匹配到的字符串所在的行及其后n行，after\n　　-B  n：显示匹配到的字符串所在的行及其前n行，before\n　　-C  n：显示匹配到的字符串所在的行及其前后各n行，context\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 示例\n\n#单个文件中查找关键词\ngrep \'Class 1\' Students.txt\n\n#从多个文件中查找关键词\ngrep "omc" /etc/passwd /etc/shadow\n\n#查找多个字符串\ngrep -e \'Class 1\' -e Todd Students.txt\n\n#可以将-r开关与grep一起使用，以递归方式搜索目录及其子目录中的所有文件\ngrep -r pattern /directory/to/search\n\n#查找string1 或 string2\ngrep -E \'string1|string2\' filename\n\n#上下文的控制\n# A   查询匹配内容的一行之外，后n行的显示\n# B   查询匹配内容的一行之外，前n行的显示\n# C   查询匹配内容的一行之外，显示上下n行\n# 以下为匹配yum 所在行及其后三行\ngrep -n \'yum\' -A 3 logs_bak.txt\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 正则表达式\n\n正则表达式是一种模式匹配语言，用于在文本中搜索和匹配特定的字符模式。\n\n\n# 基本正则\n\n 1. 行首(^)\n 2. 行尾($)\n 3. 点号(.) :匹配换行符外的任意单个字符\n 4. 字符组([]) :匹配希望出现在方括号中的字符\n    \n    sed "s/[aA]rm/ban/" ./data.txt\n    \n    \n    1\n    \n 5. 排除型字符组,即匹配字符组外的字符，表现形式为字符组前面加 ^ 字符。示例如下：\n    \n    sed -n \'/[^abc]at/p\' ./data.txt\n    \n    \n    1\n    \n 6. 区间:用来匹配某个区间的字符，表现形式通常为区间首末字符中添加 - 字符，示例如下：\n    \n    sed -n \'/[0-6]ye/p\' ./data.txt\n    \n    \n    1\n    \n 7. 星号(*):\n    字符后面放置星号表示该字符必须在匹配模式的文本中出现0次或多次，示例如下：\n    \n    sed -n \'/u*nion/p\' ./data.txt\n    #可以匹配到\n    union aaab\n    uunion abaf\n    anion abga\n    \n    #不能匹配到\n    uonion aiitap\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n\n# 扩展正则\n\n该部分适用于gwak,但不支持sed\n\n 1. 问号(?) :表示?前面的字符可以出现0次或1次，示例\n    \n    \'/a?bp/\'\n    #可以匹配到\n    abp kdkdkkd\n    aabp ldllgld\n    \n    #不可匹配到\n    aaabp jfallga\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n 2. 加号(+):表示+前面字符出现1次或多次，至少需要出现1次\n 3. 管道符号( | ) ：匹配其中一个模式',normalizedContent:'# sed-流编辑\n\nsed（stream editor）是一个流式文本编辑器，用于处理和转换文本数据。它按行读取输入，可以对文本进行替换、删除、插入和其他操作，并将结果输出到标准输出。\n\n\n# 语法\n\nsed [option] [files]\n\n\n# 基本使用\n\n 1. 执行多个命令, -e 选项\n    \n    sed -e "s/hello/hi/;s/dog/cat/" ./file.txt\n    \n    \n    1\n    \n 2. 执行命令文件，-f 选项\n    \n    sed -f script.sed ./data.txt\n    \n    \n    1\n    \n    执行"cat script.sed"，可看到文件中命令如下所示：\n    \n    s/bb/aa/\n    s/red/green/\n    ....\n    \n    \n    1\n    2\n    3\n    \n 3. 多个命令还可以用下面组合的方式\n    \n    sed \'3{\n    s/local/global/\n    s/hello/hi/\n    ....\n    }\' ./data.txt\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n * 替换 (s)\n   （1）字符替换\n   \n    sed "s/cat/dog/" ./a.txt \n   \n   \n   1\n   \n   \n   （2）管线形式字符替换\n   \n    echo "helloworld" | sed "s/hello/welcome/"\n   \n   \n   1\n   \n   \n   替换选项\n   \n   1. g :替换所有匹配文本\n   2. 数字 ：替换第几处匹配\n   3. w file ：将替换结果写入到文件\n   \n   示例：将data.txt文件中的匹配结果写入到b.txt中\n   \n   sed "s/dog/cat/w b.txt" ./data.txt\n   \n   \n   1\n   \n   * 指定行替换\n   \n   sed "2,$s/dog/cat/" ./data.txt\n   \n   \n   1\n   \n   * 指定文本行替换\n   \n   sed "/user/s/aaa/bbb/" ./data.txt\n   \n   \n   1\n   \n\n * 删除行 (d)\n   \n   sed \'3d\' ./data.txt         #删除第三行\n   sed \'3,10d\' ./data.txt      #删除3-10区间的行\n   sed \'/jack/d\' ./data.txt    #删除包含“jack”的行\n   \n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 插入行 (i) ：指定行前增加新行\n   \n   sed "3i\\hello world" ./data.txt     # 将特定行插入到data.txt的第三行前\n   \n   \n   1\n   \n\n * 附加行 (a) : 指定行后增加新行\n\n * 修改行 (c) : 修改整行内容\n   \n   sed "3c\\this is new line" ./data.txt\n   sed "/home/c\\this is new line" ./data.txt\n   \n   \n   1\n   2\n   \n\n * 转换命令 (y): 字符一一映射的替换\n\n * 打印行 (p)\n   \n   #打印替换后的行\n   sed -n "s/hello/world/p" ./data.txt\n   \n   \n   \n   1\n   2\n   3\n   \n\n\n# gawk\n\n> awk是一种用于处理和分析文本数据的编程语言。它以行为单位读取输入，并允许指定如何处理每一行。awk使用一种类似于c语言的语法，并提供了许多内置函数和特殊变量，用于访问和操作输入数据。可以使用awk来提取和打印特定列，基于条件进行过滤和计算，以及执行其他高级文本处理任务。\n\n\n# 语法\n\ngawk options program file\n\n\n1\n\n\n\n# 基本使用\n\n 1. 可选变量\n    \n    (1) -f :指定分隔符，默认分隔符为空格\n    \n    #示例：使用冒号做分隔符\n    gawk -f: \'{print $1,$2}\' /etc/passwd\n    \n    \n    1\n    2\n    \n    \n    (2) -f :用于从文件中读取程序\n    \n    #示例:指定myscript.gawk 做程序文件\n    gawk -f: -f ./myscript.gawk /etc/passwd\n    \n    \n    1\n    2\n    \n\n 2. 数据字段变量。 gawk 默认以空格分割每一行的字段，其中\n    (1) $0 : 整个文本行\n    (2) $1 : 文本行第一个字段\n    (3) $n :文本行第n个字段\n    示例：\n\n    #假如存在以下一行文本\n    1 root      20   0  193724   6828   4180 s   0.0  0.4   0:03.76 systemd\n        \n    #使用gwak输出root,193724\n    gawk \'{print $2,$5}\'\n\n\n1\n2\n3\n4\n5\n\n 3. begin 和 end，它们分别用于程序执行前后的操作，示例如下：\n\ngawk \'begin{print "now start"}{print $0}end{print "end!"}\' /etc/passwd\n\n\n1\n\n\n\n# grep\n\ngrep是一种强大的文本搜索工具，用于在文件中查找特定的模式。它可以接受一个或多个正则表达式作为搜索模式，并在文件中寻找与之匹配的行。\n\n\n# 语法\n\ngrep [选项] pattern [文件名]\n\n\n# 基本使用\n\n 1. 常用选项\n\n常用选项：\n　　-e ：开启扩展（extend）的正则表达式。\n　　-i ：忽略大小写（ignore case）。\n　　-v ：反过来（invert），只打印没有匹配的，而匹配的反而不打印。\n　　-n ：显示行号\n　　-w ：被匹配的文本只能是单词，而不能是单词中的某一部分，如文本中有liker，而我搜寻的只是like，就可以使用-w选项来避免匹配liker\n　　-c ：显示总共有多少行被匹配到了，而不是显示被匹配到的内容，注意如果同时使用-cv选项是显示有多少行没有被匹配到。\n　　-o ：只显示被模式匹配到的字符串。\n　　--color :将匹配到的内容以颜色高亮显示。\n　　-a  n：显示匹配到的字符串所在的行及其后n行，after\n　　-b  n：显示匹配到的字符串所在的行及其前n行，before\n　　-c  n：显示匹配到的字符串所在的行及其前后各n行，context\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n 2. 示例\n\n#单个文件中查找关键词\ngrep \'class 1\' students.txt\n\n#从多个文件中查找关键词\ngrep "omc" /etc/passwd /etc/shadow\n\n#查找多个字符串\ngrep -e \'class 1\' -e todd students.txt\n\n#可以将-r开关与grep一起使用，以递归方式搜索目录及其子目录中的所有文件\ngrep -r pattern /directory/to/search\n\n#查找string1 或 string2\ngrep -e \'string1|string2\' filename\n\n#上下文的控制\n# a   查询匹配内容的一行之外，后n行的显示\n# b   查询匹配内容的一行之外，前n行的显示\n# c   查询匹配内容的一行之外，显示上下n行\n# 以下为匹配yum 所在行及其后三行\ngrep -n \'yum\' -a 3 logs_bak.txt\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 正则表达式\n\n正则表达式是一种模式匹配语言，用于在文本中搜索和匹配特定的字符模式。\n\n\n# 基本正则\n\n 1. 行首(^)\n 2. 行尾($)\n 3. 点号(.) :匹配换行符外的任意单个字符\n 4. 字符组([]) :匹配希望出现在方括号中的字符\n    \n    sed "s/[aa]rm/ban/" ./data.txt\n    \n    \n    1\n    \n 5. 排除型字符组,即匹配字符组外的字符，表现形式为字符组前面加 ^ 字符。示例如下：\n    \n    sed -n \'/[^abc]at/p\' ./data.txt\n    \n    \n    1\n    \n 6. 区间:用来匹配某个区间的字符，表现形式通常为区间首末字符中添加 - 字符，示例如下：\n    \n    sed -n \'/[0-6]ye/p\' ./data.txt\n    \n    \n    1\n    \n 7. 星号(*):\n    字符后面放置星号表示该字符必须在匹配模式的文本中出现0次或多次，示例如下：\n    \n    sed -n \'/u*nion/p\' ./data.txt\n    #可以匹配到\n    union aaab\n    uunion abaf\n    anion abga\n    \n    #不能匹配到\n    uonion aiitap\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n\n# 扩展正则\n\n该部分适用于gwak,但不支持sed\n\n 1. 问号(?) :表示?前面的字符可以出现0次或1次，示例\n    \n    \'/a?bp/\'\n    #可以匹配到\n    abp kdkdkkd\n    aabp ldllgld\n    \n    #不可匹配到\n    aaabp jfallga\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n 2. 加号(+):表示+前面字符出现1次或多次，至少需要出现1次\n 3. 管道符号( | ) ：匹配其中一个模式',charsets:{cjk:!0}},{title:"Linux利用cron定期执行任务",frontmatter:{title:"Linux利用cron定期执行任务",date:"2023-03-05T04:14:25.000Z",permalink:"/pages/43ceba/",categories:["运维","Linux"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/06.Linux%E5%88%A9%E7%94%A8cron%E5%AE%9A%E6%9C%9F%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1.html",relativePath:"运维/01.Linux/06.Linux利用cron定期执行任务.md",key:"v-fa68a6e2",path:"/pages/43ceba/",headers:[{level:2,title:"执行定期任务",slug:"执行定期任务",normalizedTitle:"执行定期任务",charIndex:2},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:371},{level:3,title:"cron 表字段说明",slug:"cron-表字段说明",normalizedTitle:"cron 表字段说明",charIndex:424}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"执行定期任务 注意事项 cron 表字段说明",content:"# 执行定期任务\n\n> linux系统中可以使用cron（cron daemon）来执行定期任务。cron是一个作业调度程序，它可以在指定的时间间隔内运行命令或脚本。\n\n * 步骤如下：\n\n#1. 使用命令编辑cron表：\ncrontab -e\n\n#2. 根据cron表添加定时任务\n#示例：每天凌晨3点运行一个脚本\n0 3 * * * command\n\n#说明:command栏 \n0 3 * * * /path/to/backup.sh\n\n#3.保存并关闭文件。cron将自动安排定期运行你指定的命令。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n除了使用crontab -e命令来编辑用户的cron表外，也可以编辑/etc/crontab文件或/etc/cron.d/目录下的文件来设置系统范围的定期任务。\n\n\n# 注意事项\n\n脚本中相对路径不同于crontab的工作目录，所以脚本中务必使用绝对路径而非相对路径\n\n\n# cron 表字段说明\n\n下面这些字段表示的是任务执行的时间和频率。\n\n* * * * * command\n┬ ┬ ┬ ┬ ┬\n│ │ │ │ │\n│ │ │ │ │\n│ │ │ │ └─ 周几 (0 - 7) (0和7都表示周日)\n│ │ │ └─── 月份 (1 - 12)\n│ │ └───── 月份中的第几天 (1 - 31)\n│ └─────── 小时 (0 - 23)\n└───────── 分钟 (0 - 59)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",normalizedContent:"# 执行定期任务\n\n> linux系统中可以使用cron（cron daemon）来执行定期任务。cron是一个作业调度程序，它可以在指定的时间间隔内运行命令或脚本。\n\n * 步骤如下：\n\n#1. 使用命令编辑cron表：\ncrontab -e\n\n#2. 根据cron表添加定时任务\n#示例：每天凌晨3点运行一个脚本\n0 3 * * * command\n\n#说明:command栏 \n0 3 * * * /path/to/backup.sh\n\n#3.保存并关闭文件。cron将自动安排定期运行你指定的命令。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n除了使用crontab -e命令来编辑用户的cron表外，也可以编辑/etc/crontab文件或/etc/cron.d/目录下的文件来设置系统范围的定期任务。\n\n\n# 注意事项\n\n脚本中相对路径不同于crontab的工作目录，所以脚本中务必使用绝对路径而非相对路径\n\n\n# cron 表字段说明\n\n下面这些字段表示的是任务执行的时间和频率。\n\n* * * * * command\n┬ ┬ ┬ ┬ ┬\n│ │ │ │ │\n│ │ │ │ │\n│ │ │ │ └─ 周几 (0 - 7) (0和7都表示周日)\n│ │ │ └─── 月份 (1 - 12)\n│ │ └───── 月份中的第几天 (1 - 31)\n│ └─────── 小时 (0 - 23)\n└───────── 分钟 (0 - 59)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n",charsets:{cjk:!0}},{title:"linux环境下的磁盘扩展和磁盘清理",frontmatter:{title:"linux环境下的磁盘扩展和磁盘清理",date:"2022-09-19T05:46:01.000Z",permalink:"/pages/7a8215/",categories:["运维","Linux"],tags:[null],author:{name:"dxzh",link:"https://www.baidu.com"}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/07.Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E7%A3%81%E7%9B%98%E6%89%A9%E5%B1%95%E5%92%8C%E7%A3%81%E7%9B%98%E6%B8%85%E7%90%86.html",relativePath:"运维/01.Linux/07.Linux环境下的磁盘扩展和磁盘清理.md",key:"v-bd961204",path:"/pages/7a8215/",headers:[{level:2,title:"磁盘空间管理",slug:"磁盘空间管理",normalizedTitle:"磁盘空间管理",charIndex:2},{level:3,title:"磁盘扩展",slug:"磁盘扩展",normalizedTitle:"磁盘扩展",charIndex:13},{level:4,title:"知识延伸",slug:"知识延伸",normalizedTitle:"知识延伸",charIndex:967},{level:4,title:"问题&&解决办法",slug:"问题-解决办法",normalizedTitle:"问题&amp;&amp;解决办法",charIndex:null},{level:3,title:"调整swap",slug:"调整swap",normalizedTitle:"调整swap",charIndex:1584},{level:2,title:"系统磁盘清理",slug:"系统磁盘清理",normalizedTitle:"系统磁盘清理",charIndex:1664},{level:3,title:"磁盘占用排查",slug:"磁盘占用排查",normalizedTitle:"磁盘占用排查",charIndex:1675},{level:4,title:"常用",slug:"常用",normalizedTitle:"常用",charIndex:2256}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"磁盘空间管理 磁盘扩展 知识延伸 问题&&解决办法 调整swap 系统磁盘清理 磁盘占用排查 常用",content:"# 磁盘空间管理\n\n\n# 磁盘扩展\n\n * 以VMware中的Linux为例\n\n 1. 关闭虚拟机\n\n# 方式1\nshutdown -h now\n\n# 方式2\npoweroff\n\n\n1\n2\n3\n4\n5\n\n\n 2. 打开VMware，虚拟机--\x3e设置，选择内存，进行调整，点击确定即可。\n\n 3. 启动虚拟机，查看磁盘情况\n\n# 查看磁盘占用(非必要)\ndf -h\n\n\n\n1\n2\n3\n\n\n此处由于还没将扩展的磁盘空间进行分区，所以看到的空间占用信息跟设置前比较没有变化\n\n 4. 查看磁盘分区信息\n\n fdisk -l\n\n\n1\n\n\n\n\n此处可以看到红色框选部分Disk部分信息已经发生了改变，磁盘大小包含扩展的空间了。\n\n 1. 开始用命令对磁盘分区 (1)执行分区命令\n\nfdisk /dev/sda\n\n\n1\n\n\n(2)输入'p',输出已有分区信息\n\n(3) 依次输入下面的字符：\n\n * 输入n回车，新增一个分区；\n * 输入p回车，在打开的分区号命中中使用默认的分区号并回车（此处是3）\n * 在显示的起始扇区first sector直接回车，在last sector直接回车；\n * 输入p回车，查看当前分区的信息：可以看到多了一个/dev/sda3的新分区；\n * 输入w回车，写入磁盘信息并保存。\n\n\n\n(4) 分区完成后，重启虚拟机(必须重启，否则/dev/sda4无法格式化)\n\n(5) 格式化分区\n\n# 格式化分区为ext4文件系统\nsudo mkfs.ext4 /dev/sda4\n\n\n1\n2\n\n\n(6) 对新分区进行挂载\n\n# 为新分区创建一个挂载目录\nmkdir /ext4\n\n# 打开编辑特定文件\nsudo vim /etc/fstab\n\n# 文件末尾追加以下内容,指定要挂载的分区以及挂载点的相关信息\n# 表示/dev/sda4分区开机自动挂载在/ext4目录下，文件系统类型为ext4，使用默认挂载参数\n/dev/sda4   /ext4   ext4   defaults   0   0\n\n# 接着保存文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n(7) 重启系统后，检查挂载情况\n\ndf -h \n\n\n1\n\n\n输入上面命令，可看到/dev/sda4 自动挂在在了/ext4目录下\n\n# 知识延伸\n\n * 删除分区并释放空间\n\n(1)删除分区之前，请确保您已将其从系统中卸载\n\n# 示例：卸载sda4分区\numount /dev/sda4\n\n\n1\n2\n\n\n(2) 删除分区表分区\n\n# 1. 编辑分区表\nfdisk /dev/sda\n\n# 2. 列出分区表（在提示下输入'p'），并记住分区表编号(1-4)\n# 3. 继续输入'd',回车\n# 4. 输入想要删除的分区表编号(1-4),回车\n# 5. 输入'w'进行写入保存，回车\n# 6. 输入'q'退出编辑分区表\n# 7. 检查分区是否被删除/释放\nfdisk -l\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 问题&&解决办法\n\n 1. \"If you want to create more than four partitions, you must replace a primary partition with an extended partition first.\"\n\n * 问题分析：\n   根据Chatgpt描述，MBR（Master Boot Record）分区表方案的限制。在 MBR 分区表中，最多可以有4个主分区，或者3个主分区和1个扩展分区.如果您已经有4个主分区，并且想创建更多的分区，您需要先将一个主分区转换为扩展分区。扩展分区可以容纳逻辑分区，从而允许您在一个扩展分区内创建更多的分区。\n * 解决办法：\n\n\n# 调整swap\n\n * 参考链接：\n\n> https://blog.csdn.net/atzqtzq/article/details/124137913\n\n\n# 系统磁盘清理\n\n\n# 磁盘占用排查\n\n 1. 首先确定是否是磁盘满了\n    命令：df -h\n\n * 参数说明\n   \n   -a：列出所有的文件系统，包括系统特有的/proc等文件系统\n   \n   -k：以KB的容量显示各文件系统\n   \n   -m：以MB的容量显示各文件系统\n   \n   -h：以人们较易阅读的GB,MB,KB等格式自行显示\n   \n   -H：以M=1000K替代M=1024K的进位方式\n   \n   -T：连同该分区的文件系统名称（例如ext3）也列出\n   \n   -i：不用硬盘容量，而以inode的数量来显示\n\n 2. 显示每个目录的大小\n    命令:du -sh /*\n\n * 参数说明\n   -a : 列出所有的文件与目录容量，因为默认仅统计目录下面的文件量而已；\n   \n   -h : 以人们较易读的容量格式（G/M）显示；\n   \n   -s : 列出总量，而不列出每个个别的目录占用了容量；\n   \n   -S : 不包括子目录下的总计，与-s有点差别；\n   \n   -k : 以KB列出容量显示；\n   \n   -m : 以MB列出容量显示。\n\n 3. 其它\n\n * 寻找当前目录，哪个文件夹占用空间最大\n\ndu -h --max-depth=1 \n\n\n1\n\n * 将文件以从大到小顺序展现\n\nls –lhS\n\n\n1\n\n\n# 常用\n\n 1. 查看当前目录及其子目录的占用大小，并按占用空间大小进行排序：\n\ndu -h --max-depth=1 | sort -hr\n# -h 参数用于以易读的方式显示文件大小\n# --max-depth=1 参数用于限制只显示第一级子文件夹的信息。\n\n\n1\n2\n3\n\n 2. 查看指定目录及其子目录的占用大小，并按占用空间大小进行排序：\n\ndu -h --max-depth=1 /path/to/folder | sort -hr\n\n# 将显示 /path/to/folder 及其子目录的占用大小，\n# 并按照占用空间从大到小进行排序。\n\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 磁盘空间管理\n\n\n# 磁盘扩展\n\n * 以vmware中的linux为例\n\n 1. 关闭虚拟机\n\n# 方式1\nshutdown -h now\n\n# 方式2\npoweroff\n\n\n1\n2\n3\n4\n5\n\n\n 2. 打开vmware，虚拟机--\x3e设置，选择内存，进行调整，点击确定即可。\n\n 3. 启动虚拟机，查看磁盘情况\n\n# 查看磁盘占用(非必要)\ndf -h\n\n\n\n1\n2\n3\n\n\n此处由于还没将扩展的磁盘空间进行分区，所以看到的空间占用信息跟设置前比较没有变化\n\n 4. 查看磁盘分区信息\n\n fdisk -l\n\n\n1\n\n\n\n\n此处可以看到红色框选部分disk部分信息已经发生了改变，磁盘大小包含扩展的空间了。\n\n 1. 开始用命令对磁盘分区 (1)执行分区命令\n\nfdisk /dev/sda\n\n\n1\n\n\n(2)输入'p',输出已有分区信息\n\n(3) 依次输入下面的字符：\n\n * 输入n回车，新增一个分区；\n * 输入p回车，在打开的分区号命中中使用默认的分区号并回车（此处是3）\n * 在显示的起始扇区first sector直接回车，在last sector直接回车；\n * 输入p回车，查看当前分区的信息：可以看到多了一个/dev/sda3的新分区；\n * 输入w回车，写入磁盘信息并保存。\n\n\n\n(4) 分区完成后，重启虚拟机(必须重启，否则/dev/sda4无法格式化)\n\n(5) 格式化分区\n\n# 格式化分区为ext4文件系统\nsudo mkfs.ext4 /dev/sda4\n\n\n1\n2\n\n\n(6) 对新分区进行挂载\n\n# 为新分区创建一个挂载目录\nmkdir /ext4\n\n# 打开编辑特定文件\nsudo vim /etc/fstab\n\n# 文件末尾追加以下内容,指定要挂载的分区以及挂载点的相关信息\n# 表示/dev/sda4分区开机自动挂载在/ext4目录下，文件系统类型为ext4，使用默认挂载参数\n/dev/sda4   /ext4   ext4   defaults   0   0\n\n# 接着保存文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n(7) 重启系统后，检查挂载情况\n\ndf -h \n\n\n1\n\n\n输入上面命令，可看到/dev/sda4 自动挂在在了/ext4目录下\n\n# 知识延伸\n\n * 删除分区并释放空间\n\n(1)删除分区之前，请确保您已将其从系统中卸载\n\n# 示例：卸载sda4分区\numount /dev/sda4\n\n\n1\n2\n\n\n(2) 删除分区表分区\n\n# 1. 编辑分区表\nfdisk /dev/sda\n\n# 2. 列出分区表（在提示下输入'p'），并记住分区表编号(1-4)\n# 3. 继续输入'd',回车\n# 4. 输入想要删除的分区表编号(1-4),回车\n# 5. 输入'w'进行写入保存，回车\n# 6. 输入'q'退出编辑分区表\n# 7. 检查分区是否被删除/释放\nfdisk -l\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n# 问题&&解决办法\n\n 1. \"if you want to create more than four partitions, you must replace a primary partition with an extended partition first.\"\n\n * 问题分析：\n   根据chatgpt描述，mbr（master boot record）分区表方案的限制。在 mbr 分区表中，最多可以有4个主分区，或者3个主分区和1个扩展分区.如果您已经有4个主分区，并且想创建更多的分区，您需要先将一个主分区转换为扩展分区。扩展分区可以容纳逻辑分区，从而允许您在一个扩展分区内创建更多的分区。\n * 解决办法：\n\n\n# 调整swap\n\n * 参考链接：\n\n> https://blog.csdn.net/atzqtzq/article/details/124137913\n\n\n# 系统磁盘清理\n\n\n# 磁盘占用排查\n\n 1. 首先确定是否是磁盘满了\n    命令：df -h\n\n * 参数说明\n   \n   -a：列出所有的文件系统，包括系统特有的/proc等文件系统\n   \n   -k：以kb的容量显示各文件系统\n   \n   -m：以mb的容量显示各文件系统\n   \n   -h：以人们较易阅读的gb,mb,kb等格式自行显示\n   \n   -h：以m=1000k替代m=1024k的进位方式\n   \n   -t：连同该分区的文件系统名称（例如ext3）也列出\n   \n   -i：不用硬盘容量，而以inode的数量来显示\n\n 2. 显示每个目录的大小\n    命令:du -sh /*\n\n * 参数说明\n   -a : 列出所有的文件与目录容量，因为默认仅统计目录下面的文件量而已；\n   \n   -h : 以人们较易读的容量格式（g/m）显示；\n   \n   -s : 列出总量，而不列出每个个别的目录占用了容量；\n   \n   -s : 不包括子目录下的总计，与-s有点差别；\n   \n   -k : 以kb列出容量显示；\n   \n   -m : 以mb列出容量显示。\n\n 3. 其它\n\n * 寻找当前目录，哪个文件夹占用空间最大\n\ndu -h --max-depth=1 \n\n\n1\n\n * 将文件以从大到小顺序展现\n\nls –lhs\n\n\n1\n\n\n# 常用\n\n 1. 查看当前目录及其子目录的占用大小，并按占用空间大小进行排序：\n\ndu -h --max-depth=1 | sort -hr\n# -h 参数用于以易读的方式显示文件大小\n# --max-depth=1 参数用于限制只显示第一级子文件夹的信息。\n\n\n1\n2\n3\n\n 2. 查看指定目录及其子目录的占用大小，并按占用空间大小进行排序：\n\ndu -h --max-depth=1 /path/to/folder | sort -hr\n\n# 将显示 /path/to/folder 及其子目录的占用大小，\n# 并按照占用空间从大到小进行排序。\n\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0}},{title:"linux利用tar和openssl命令实现文件加密、解密",frontmatter:{title:"linux利用tar和openssl命令实现文件加密、解密",date:"2023-06-22T16:21:54.000Z",permalink:"/pages/7678af/",categories:["运维","Linux"],tags:["Linux"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/10.linux%E5%88%A9%E7%94%A8tar%E5%92%8Copenssl%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86.html",relativePath:"运维/01.Linux/10.linux利用tar和openssl命令实现文件加密、解密.md",key:"v-1d02cf76",path:"/pages/7678af/",headers:[{level:2,title:"tar和openssl命令实现文件加密、解密",slug:"tar和openssl命令实现文件加密、解密",normalizedTitle:"tar和openssl命令实现文件加密、解密",charIndex:2},{level:3,title:"文件加密",slug:"文件加密",normalizedTitle:"文件加密",charIndex:17},{level:3,title:"文件解密",slug:"文件解密",normalizedTitle:"文件解密",charIndex:593}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"tar和openssl命令实现文件加密、解密 文件加密 文件解密",content:"# tar和openssl命令实现文件加密、解密\n\n\n# 文件加密\n\n 1. 使用tar命令压缩文件\n\n# myfiles.tar.gz为压缩后文件名，file1,2等为被压缩的文件\n\ntar -czxf myfiles.tar.gz file1 file2 \n\n\n1\n2\n3\n\n 2. 使用openssl生成随机对称密码\n\n# 这个命令将根据base64算法生成一个包含32个随机字符的密码。\n\nopenssl rand -base64 32\n\n\n1\n2\n3\n\n 3. 使用openssl 加密压缩文件\n\nopenssl aes-256-cbc -salt -in archive.tar -out encrypted.tar -k password\n\n\n1\n\n\n> 这个命令使用AES-256-CBC加密算法对archive.tar文件进行加密，并将加密后的结果保存到encrypted.tar文件中。其中，'-k password' 选项指定了用于加密文件的密码。\n> \n> -in input_file：指定要加密的输入文件。替换input_file为实际的文件名。\n> \n> -out output_file：指定加密后的输出文件名。替换output_file为实际的文件名。\n> \n> 请注意，这个命令会提示你输入密码。将password替换为你要使用的实际密码。\n\n\n# 文件解密\n\n 1. 使用openssl解密压缩文件\n\nopenssl aes-256-cbc -d -in encrypted.tar -out decrypted.tar -k password\n\n\n\n1\n2\n\n 2. 解压目标压缩文件\n\ntar -zxvf myfiles.tar.gz -C /path/\n\n\n1\n",normalizedContent:"# tar和openssl命令实现文件加密、解密\n\n\n# 文件加密\n\n 1. 使用tar命令压缩文件\n\n# myfiles.tar.gz为压缩后文件名，file1,2等为被压缩的文件\n\ntar -czxf myfiles.tar.gz file1 file2 \n\n\n1\n2\n3\n\n 2. 使用openssl生成随机对称密码\n\n# 这个命令将根据base64算法生成一个包含32个随机字符的密码。\n\nopenssl rand -base64 32\n\n\n1\n2\n3\n\n 3. 使用openssl 加密压缩文件\n\nopenssl aes-256-cbc -salt -in archive.tar -out encrypted.tar -k password\n\n\n1\n\n\n> 这个命令使用aes-256-cbc加密算法对archive.tar文件进行加密，并将加密后的结果保存到encrypted.tar文件中。其中，'-k password' 选项指定了用于加密文件的密码。\n> \n> -in input_file：指定要加密的输入文件。替换input_file为实际的文件名。\n> \n> -out output_file：指定加密后的输出文件名。替换output_file为实际的文件名。\n> \n> 请注意，这个命令会提示你输入密码。将password替换为你要使用的实际密码。\n\n\n# 文件解密\n\n 1. 使用openssl解密压缩文件\n\nopenssl aes-256-cbc -d -in encrypted.tar -out decrypted.tar -k password\n\n\n\n1\n2\n\n 2. 解压目标压缩文件\n\ntar -zxvf myfiles.tar.gz -c /path/\n\n\n1\n",charsets:{cjk:!0}},{title:"通过iptables限制连接数",frontmatter:{title:"通过iptables限制连接数",date:"2022-10-23T00:12:24.000Z",permalink:"/pages/be753f/",categories:["运维","Linux"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/01.Linux/11.%E9%80%9A%E8%BF%87iptables%E9%99%90%E5%88%B6%E8%BF%9E%E6%8E%A5%E6%95%B0.html",relativePath:"运维/01.Linux/11.通过iptables限制连接数.md",key:"v-26739e84",path:"/pages/be753f/",headers:[{level:2,title:"为什么要限制连接数",slug:"为什么要限制连接数",normalizedTitle:"为什么要限制连接数",charIndex:100},{level:2,title:"实际应用",slug:"实际应用",normalizedTitle:"实际应用",charIndex:476},{level:3,title:"部分参数说明：",slug:"部分参数说明",normalizedTitle:"部分参数说明：",charIndex:951}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"为什么要限制连接数 实际应用 部分参数说明：",content:"# 通过iptables限制连接数\n\n> iptables 是一个 Linux 内核的防火墙工具，可以用于设置和管理网络规则.\n\n通过iptables，可以做到限制速率，设备数和请求连接数。\n\n\n# 为什么要限制连接数\n\n限制连接数，主要是考虑到以下几点原因：\n\n * 安全性：\n\n限制单个 IP 的连接数可以有效防止特定 IP 地址发起的恶意行为，如 DDoS（分布式拒绝服务）攻击、暴力破解、爬虫等。通过降低对单个 IP 的并发连接数限制，可以减少对系统资源的滥用和恶意访问。\n\n * 资源管理：\n\n某些情况下，有限的网络带宽或服务器资源可能无法满足大量连接请求。通过限制单个 IP 的连接数，可以避免某个 IP 占用过多资源导致其他合法用户无法正常访问。\n\n * 公平性：\n\n限制单个 IP 的连接数有助于确保所有用户可以平等地共享资源。如果某个 IP 连接数过多，可能导致其他用户的访问速度变慢或无法连接。\n\n * 防止滥用：\n\n在某些情况下，限制单个 IP 的连接数可以防止资源被滥用。例如，控制下载速度、避免盗刷或并发请求过载等。\n\n\n# 实际应用\n\n 1. 限制局域网内每个用户的连接数为50\n\niptables -I FORWARD -p tcp -m connlimit –connlimit-above 50 -j REJECT  \n\n\n1\n\n 2. 限制指定局域网用户的连接数,如：限定192.168.1.100的连接数为50\n\niptables -I FORWARD -p tcp -s 192.168.1.100 -m connlimit –connlimit-above 50 -j REJECT  \n\n\n1\n\n 3. 限制除某用户以外的IP连接数为50\n\niptables -I FORWARD -p tcp -s !192.168.1.100 -m connlimit –connlimit-above 50 -j REJECT  \n\n\n1\n\n 4. 连接速率限制为100Mbps\n\niptables -A INPUT -s 1.2.3.4 -p tcp --dport 53 -m limit --limit 100mbit/s -j ACCEPT\n\n\n1\n\n\n\n# 部分参数说明：\n\n * -p tcp： 表示仅针对 TCP 协议的连接限制\n\n * -m connlimit： 表示使用 connlimit 模块来管理连接数量\n\n * --connlimit-above 50：表示限制连接的数量上限为 50，超过这个数量，就会拒绝连接。\n\n * -s 192.168.1.100: 表示针对源 IP 地址为 192.168.1.100 的主机\n\n * -j REJECT: 表示拒绝满足以上条件的连接请求",normalizedContent:"# 通过iptables限制连接数\n\n> iptables 是一个 linux 内核的防火墙工具，可以用于设置和管理网络规则.\n\n通过iptables，可以做到限制速率，设备数和请求连接数。\n\n\n# 为什么要限制连接数\n\n限制连接数，主要是考虑到以下几点原因：\n\n * 安全性：\n\n限制单个 ip 的连接数可以有效防止特定 ip 地址发起的恶意行为，如 ddos（分布式拒绝服务）攻击、暴力破解、爬虫等。通过降低对单个 ip 的并发连接数限制，可以减少对系统资源的滥用和恶意访问。\n\n * 资源管理：\n\n某些情况下，有限的网络带宽或服务器资源可能无法满足大量连接请求。通过限制单个 ip 的连接数，可以避免某个 ip 占用过多资源导致其他合法用户无法正常访问。\n\n * 公平性：\n\n限制单个 ip 的连接数有助于确保所有用户可以平等地共享资源。如果某个 ip 连接数过多，可能导致其他用户的访问速度变慢或无法连接。\n\n * 防止滥用：\n\n在某些情况下，限制单个 ip 的连接数可以防止资源被滥用。例如，控制下载速度、避免盗刷或并发请求过载等。\n\n\n# 实际应用\n\n 1. 限制局域网内每个用户的连接数为50\n\niptables -i forward -p tcp -m connlimit –connlimit-above 50 -j reject  \n\n\n1\n\n 2. 限制指定局域网用户的连接数,如：限定192.168.1.100的连接数为50\n\niptables -i forward -p tcp -s 192.168.1.100 -m connlimit –connlimit-above 50 -j reject  \n\n\n1\n\n 3. 限制除某用户以外的ip连接数为50\n\niptables -i forward -p tcp -s !192.168.1.100 -m connlimit –connlimit-above 50 -j reject  \n\n\n1\n\n 4. 连接速率限制为100mbps\n\niptables -a input -s 1.2.3.4 -p tcp --dport 53 -m limit --limit 100mbit/s -j accept\n\n\n1\n\n\n\n# 部分参数说明：\n\n * -p tcp： 表示仅针对 tcp 协议的连接限制\n\n * -m connlimit： 表示使用 connlimit 模块来管理连接数量\n\n * --connlimit-above 50：表示限制连接的数量上限为 50，超过这个数量，就会拒绝连接。\n\n * -s 192.168.1.100: 表示针对源 ip 地址为 192.168.1.100 的主机\n\n * -j reject: 表示拒绝满足以上条件的连接请求",charsets:{cjk:!0}},{title:"两种方式安装Docker",frontmatter:{title:"两种方式安装Docker",date:"2022-03-12T14:12:17.000Z",permalink:"/pages/77b45b/",categories:["运维","Docker"],tags:["Docker"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/02.Docker/01.%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85Docker.html",relativePath:"运维/02.Docker/01.两种方式安装Docker.md",key:"v-3f609ca4",path:"/pages/77b45b/",headers:[{level:2,title:"在线安装",slug:"在线安装",normalizedTitle:"在线安装",charIndex:16},{level:2,title:"离线安装",slug:"离线安装",normalizedTitle:"离线安装",charIndex:349},{level:2,title:"docker 镜像源配置",slug:"docker-镜像源配置",normalizedTitle:"docker 镜像源配置",charIndex:960}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"在线安装 离线安装 docker 镜像源配置",content:'# docker 安装\n\n\n# 在线安装\n\n * centos7\n\n 1. 准备工作\n\nyum update\n\nyum install -y yum-utils device-mapper-persistent-data lvm2\n\nyum makecache fast\n\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 添加软件源信息\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n1\n\n 3. 开始安装\n\nyum -y install docker-ce\n\n\n1\n\n 4. 查询服务状态\n\nsystemctl status docker\n\n\n1\n\n\n\n# 离线安装\n\n要离线安装docker，需要额外准备一台能联网的主机。其基本流程即是先联网将需要的软件包下载后，转移到没有连接网络的机器上安装。\n\n * Centos7\n\n 1. 添加软件源信息\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n1\n\n 1. 更新yum缓存:\n\nyum makecache fast\n\n\n1\n\n 1. 创建下载目录并下载\n\n#创建目录\nmkdir -p  /home/dockerrpm/\n\n#使用yum下载(只下载不安装)\nyum intsall docker-ce --downloadonly --downloaddir=/home/dockerrpm/\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 打包rpm文件\n\ntar zcvf docker-ce-20.tar.gz ./dockerrpm/*\n\n\n1\n\n 5. 目标机器上安装\n\n#解压\ntar zxvf docker-ce-20.tar.gz \n\ncd dockerrpm \n# 安装\nrpm -ivh *.rpm --force --nodeps\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 6. 查看docker状态\n\nsystemctl status docker\n\n\n1\n\n\n\n# docker 镜像源配置\n\n# 创建或修改 /etc/docker/daemon.json 文件，修改为如下形式\n{\n    "registry-mirrors" : [\n    "https://registry.docker-cn.com",\n    "https://docker.mirrors.ustc.edu.cn",\n    "http://hub-mirror.c.163.com",\n    "https://cr.console.aliyun.com/"\n  ]\n}\n# 重启docker服务使配置生效\n$ systemctl restart docker.service\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# docker 安装\n\n\n# 在线安装\n\n * centos7\n\n 1. 准备工作\n\nyum update\n\nyum install -y yum-utils device-mapper-persistent-data lvm2\n\nyum makecache fast\n\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 添加软件源信息\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n1\n\n 3. 开始安装\n\nyum -y install docker-ce\n\n\n1\n\n 4. 查询服务状态\n\nsystemctl status docker\n\n\n1\n\n\n\n# 离线安装\n\n要离线安装docker，需要额外准备一台能联网的主机。其基本流程即是先联网将需要的软件包下载后，转移到没有连接网络的机器上安装。\n\n * centos7\n\n 1. 添加软件源信息\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n1\n\n 1. 更新yum缓存:\n\nyum makecache fast\n\n\n1\n\n 1. 创建下载目录并下载\n\n#创建目录\nmkdir -p  /home/dockerrpm/\n\n#使用yum下载(只下载不安装)\nyum intsall docker-ce --downloadonly --downloaddir=/home/dockerrpm/\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 打包rpm文件\n\ntar zcvf docker-ce-20.tar.gz ./dockerrpm/*\n\n\n1\n\n 5. 目标机器上安装\n\n#解压\ntar zxvf docker-ce-20.tar.gz \n\ncd dockerrpm \n# 安装\nrpm -ivh *.rpm --force --nodeps\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 6. 查看docker状态\n\nsystemctl status docker\n\n\n1\n\n\n\n# docker 镜像源配置\n\n# 创建或修改 /etc/docker/daemon.json 文件，修改为如下形式\n{\n    "registry-mirrors" : [\n    "https://registry.docker-cn.com",\n    "https://docker.mirrors.ustc.edu.cn",\n    "http://hub-mirror.c.163.com",\n    "https://cr.console.aliyun.com/"\n  ]\n}\n# 重启docker服务使配置生效\n$ systemctl restart docker.service\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0}},{title:"docker问题记录",frontmatter:{title:"docker问题记录",date:"2023-07-19T05:46:19.000Z",permalink:"/pages/af0c2d/",categories:["运维","Docker"],tags:["Docker"],author:{name:"dxzh",link:"https://www.baidu.com"}},regularPath:"/%E8%BF%90%E7%BB%B4/02.Docker/02.docker%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95.html",relativePath:"运维/02.Docker/02.docker问题记录.md",key:"v-1dc48608",path:"/pages/af0c2d/",headers:[{level:2,title:"docker容器无法联网",slug:"docker容器无法联网",normalizedTitle:"docker容器无法联网",charIndex:17},{level:3,title:"参考链接",slug:"参考链接",normalizedTitle:"参考链接",charIndex:1873}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"docker容器无法联网 参考链接",content:"# docker问题记录\n\n\n# docker容器无法联网\n\n * 问题情况描述\n\n在利用docker容器搭建服务时候，遇到了个棘手的问题，大概情况是docker网络是通的，能够正常访问网络拉取镜像，但是在运行容器后，发现网络有问题。\n\n具体表现在我根据 ubuntu:22.04镜像启动的容器无法使用apt-get 命令，报错:Temporary failure resolving 'archive.ubuntu.com'。\n\n根据报错信息，我猜想是apt源的问题，然后网上搜索了对应的问题，发现别人解决的经验也是更换源就可以了。然后我顺着这个思路走，把对应的源先后换了阿里、网易、中科大等的源地址，发现还是问题没有解决，还是一样会出现。然后又试着用vpn连接，也不行。然后刚好本地还布有另一台虚拟机，然后我又在那台虚拟机上折腾安装了docker,接着拉取镜像、启动容器。唉，结果发现在这台虚拟机上能够访问到源，无论是ubuntu、还是阿里的都没有问题。\n\n此时，虽然能够用这台主机搭建服务了，但是我还是很奇怪，为什么这两台虚拟机会产生不同的结果。显然它们都是在vmware上面安装的，网络都是桥接的，配置、linux版本都没有差异，还有docker版本都相差不大。\n\n第一次碰到这种问题，没有具体思路。所以疯狂提问chatgpt和搜索引擎。然而，费了好大功夫，依然没能找到问题所在。chatgpt的回答也是引导我向apt源、dns解析的方向走。\n\n期间是折腾/etc/resolv.conf 、/etc/sysconfig/network-script/...等，发现宿主机与docker容器的/etc/resolv.conf 对应的dns地址总是改变，即使我已经设定好了，它还是会变更成我不需要的。大概陷入了这样的困境。\n\n> 我在/etc/resolv.conf 中配置了nameserver 为114.114.114.114，但是每次我启动容器或重启network就会使得这个文件的配置更改，NetworkManager 会将他变成我不需要的nameserver :8.8.8.8 ,这影响了我的使用，该怎么禁止它\n\n然后根据这个思路走，不行，又开始琢磨尝试ping/nslookup/traceroute等命令，因apt-get不能用，这些网络命令都会报错\"command not found!\"，故而当时只试了宿主机的命令，发现外网是通的。因我之前部署的docker容器都为本地服务，且网络通信都正常，怀疑是系统网络设置或是docker配置(因这两天才对docker主目录进行了迁移)/docker镜像的差异影响的结果，于是对它们这部分的差异进行了比较。根本没有注意到是docker内网通，但外网不通的问题。\n\n到后面，用那台能正常访问外网的机器陆续拉了几个相同的镜像测试，终于发觉应该是docker本身的原因：正常的机器ping、traceroute命令都是通的，反之都不通。然后排除了镜像版本的问题，因为相同的镜像放到问题机上仍然会不通。于是问题方向就基本确定了。\n\n * 解决办法：\n\n> docker有三种默认的网络模式，分别是：bridge、host、none。默认的Bridge网络只能提供在同一个Bridge容器内的容器间相互访问，无法连接外网\n\n 1. 方法一(有效)：\n\n> 在创建容器时加上参数 --net host，令容器创建时共享主机的network namespace，即容器可以访问主机上所有的网络信息，这样容器内的网络配置就会和主机一模一样。\n\ndocker run --name DeepLearning --net host -it deeplearning:v1 bash\n\n# 扩展\n# 检查容器的网络模式\ndocker inspect <容器名称或ID> | grep NetworkMode\n\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 方法二(有效)\n\n# 为容器暴露端口 或 做端口映射\n\ndocker run -it -p 5555:80 --name xxxxx image_Name /bin/bash\n\n\n\n1\n2\n3\n4\n\n 3. 方法二（待测）:\n\n#说明：用linux开启ip转发\n\nsysctl net.ipv4.conf.all.forwarding=1\n\n# 防火墙设置\niptables -P FORWARD ACCEPT\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 参考链接\n\n * https://www.jianshu.com/p/205c6ece019b",normalizedContent:"# docker问题记录\n\n\n# docker容器无法联网\n\n * 问题情况描述\n\n在利用docker容器搭建服务时候，遇到了个棘手的问题，大概情况是docker网络是通的，能够正常访问网络拉取镜像，但是在运行容器后，发现网络有问题。\n\n具体表现在我根据 ubuntu:22.04镜像启动的容器无法使用apt-get 命令，报错:temporary failure resolving 'archive.ubuntu.com'。\n\n根据报错信息，我猜想是apt源的问题，然后网上搜索了对应的问题，发现别人解决的经验也是更换源就可以了。然后我顺着这个思路走，把对应的源先后换了阿里、网易、中科大等的源地址，发现还是问题没有解决，还是一样会出现。然后又试着用vpn连接，也不行。然后刚好本地还布有另一台虚拟机，然后我又在那台虚拟机上折腾安装了docker,接着拉取镜像、启动容器。唉，结果发现在这台虚拟机上能够访问到源，无论是ubuntu、还是阿里的都没有问题。\n\n此时，虽然能够用这台主机搭建服务了，但是我还是很奇怪，为什么这两台虚拟机会产生不同的结果。显然它们都是在vmware上面安装的，网络都是桥接的，配置、linux版本都没有差异，还有docker版本都相差不大。\n\n第一次碰到这种问题，没有具体思路。所以疯狂提问chatgpt和搜索引擎。然而，费了好大功夫，依然没能找到问题所在。chatgpt的回答也是引导我向apt源、dns解析的方向走。\n\n期间是折腾/etc/resolv.conf 、/etc/sysconfig/network-script/...等，发现宿主机与docker容器的/etc/resolv.conf 对应的dns地址总是改变，即使我已经设定好了，它还是会变更成我不需要的。大概陷入了这样的困境。\n\n> 我在/etc/resolv.conf 中配置了nameserver 为114.114.114.114，但是每次我启动容器或重启network就会使得这个文件的配置更改，networkmanager 会将他变成我不需要的nameserver :8.8.8.8 ,这影响了我的使用，该怎么禁止它\n\n然后根据这个思路走，不行，又开始琢磨尝试ping/nslookup/traceroute等命令，因apt-get不能用，这些网络命令都会报错\"command not found!\"，故而当时只试了宿主机的命令，发现外网是通的。因我之前部署的docker容器都为本地服务，且网络通信都正常，怀疑是系统网络设置或是docker配置(因这两天才对docker主目录进行了迁移)/docker镜像的差异影响的结果，于是对它们这部分的差异进行了比较。根本没有注意到是docker内网通，但外网不通的问题。\n\n到后面，用那台能正常访问外网的机器陆续拉了几个相同的镜像测试，终于发觉应该是docker本身的原因：正常的机器ping、traceroute命令都是通的，反之都不通。然后排除了镜像版本的问题，因为相同的镜像放到问题机上仍然会不通。于是问题方向就基本确定了。\n\n * 解决办法：\n\n> docker有三种默认的网络模式，分别是：bridge、host、none。默认的bridge网络只能提供在同一个bridge容器内的容器间相互访问，无法连接外网\n\n 1. 方法一(有效)：\n\n> 在创建容器时加上参数 --net host，令容器创建时共享主机的network namespace，即容器可以访问主机上所有的网络信息，这样容器内的网络配置就会和主机一模一样。\n\ndocker run --name deeplearning --net host -it deeplearning:v1 bash\n\n# 扩展\n# 检查容器的网络模式\ndocker inspect <容器名称或id> | grep networkmode\n\n\n\n1\n2\n3\n4\n5\n6\n\n 2. 方法二(有效)\n\n# 为容器暴露端口 或 做端口映射\n\ndocker run -it -p 5555:80 --name xxxxx image_name /bin/bash\n\n\n\n1\n2\n3\n4\n\n 3. 方法二（待测）:\n\n#说明：用linux开启ip转发\n\nsysctl net.ipv4.conf.all.forwarding=1\n\n# 防火墙设置\niptables -p forward accept\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 参考链接\n\n * https://www.jianshu.com/p/205c6ece019b",charsets:{cjk:!0}},{title:"安装Docker-Compose",frontmatter:{title:"安装Docker-Compose",date:"2022-06-04T14:20:48.000Z",permalink:"/pages/5f33ac/",categories:["运维","Docker"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/02.Docker/03.%E5%AE%89%E8%A3%85Docker-Compose.html",relativePath:"运维/02.Docker/03.安装Docker-Compose.md",key:"v-df719e6a",path:"/pages/5f33ac/",headers:[{level:2,title:"在线安装",slug:"在线安装",normalizedTitle:"在线安装",charIndex:2}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"在线安装",content:"# 在线安装\n\n 1. 添加 epel源\n\nyum install -y epel-release\n\n\n1\n\n 2. 安装\n\nyum install -y docker-compose\n\n\n\n1\n2\n\n 3. 查看docker-compose版本\n\ndocker-compose --version\n\n\n\n1\n2\n",normalizedContent:"# 在线安装\n\n 1. 添加 epel源\n\nyum install -y epel-release\n\n\n1\n\n 2. 安装\n\nyum install -y docker-compose\n\n\n\n1\n2\n\n 3. 查看docker-compose版本\n\ndocker-compose --version\n\n\n\n1\n2\n",charsets:{cjk:!0}},{title:"通过Docker运行跨平台的容器",frontmatter:{title:"通过Docker运行跨平台的容器",date:"2022-08-29T14:12:17.000Z",permalink:"/pages/0fad9e/",categories:["运维","Docker"],tags:["Docker"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/02.Docker/05.%E9%80%9A%E8%BF%87Docker%E8%BF%90%E8%A1%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%AE%B9%E5%99%A8.html",relativePath:"运维/02.Docker/05.通过Docker运行跨平台的容器.md",key:"v-1e52aa64",path:"/pages/0fad9e/",headers:[{level:2,title:"在x86_64 系统使用docker 运行arm64 容器",slug:"在x86-64-系统使用docker-运行arm64-容器",normalizedTitle:"在x86_64 系统使用docker 运行arm64 容器",charIndex:16},{level:3,title:"1. 启用docker manifest",slug:"_1-启用docker-manifest",normalizedTitle:"1. 启用docker manifest",charIndex:50},{level:3,title:"2. 使用docker获取arm镜像",slug:"_2-使用docker获取arm镜像",normalizedTitle:"2. 使用docker获取arm镜像",charIndex:598},{level:3,title:"3. 启用docker Buildx 新特性",slug:"_3-启用docker-buildx-新特性",normalizedTitle:"3. 启用docker buildx 新特性",charIndex:800},{level:3,title:"4. 获取QEMU",slug:"_4-获取qemu",normalizedTitle:"4. 获取qemu",charIndex:1217},{level:3,title:"5. 注册QEMU虚拟机(注意：重启电脑需要重新执行注册)",slug:"_5-注册qemu虚拟机-注意-重启电脑需要重新执行注册",normalizedTitle:"5. 注册qemu虚拟机(注意：重启电脑需要重新执行注册)",charIndex:1499},{level:3,title:"6. 创建arm架构容器，并运行",slug:"_6-创建arm架构容器-并运行",normalizedTitle:"6. 创建arm架构容器，并运行",charIndex:1707},{level:3,title:"7. 查看容器架构",slug:"_7-查看容器架构",normalizedTitle:"7. 查看容器架构",charIndex:1918}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"在x86_64 系统使用docker 运行arm64 容器 1. 启用docker manifest 2. 使用docker获取arm镜像 3. 启用docker Buildx 新特性 4. 获取QEMU 5. 注册QEMU虚拟机(注意：重启电脑需要重新执行注册) 6. 创建arm架构容器，并运行 7. 查看容器架构",content:'# docker 使用\n\n\n# 在x86_64 系统使用docker 运行arm64 容器\n\n\n# 1. 启用docker manifest\n\n> docker manifest特性可支持用户在不同系统架构的机器上分别运行不同的架构的镜像。\n\nmanifest list是一个镜像清单列表，用于存放多个不同os/arch的镜像信息；主要用到manifest的目的，其实还是多用于存放不同的os/arch信息，也就是方便我们在不同的CPU架构（arm或者x86）或者操作系统中，通过一个镜像名称拉取对应架构或者操作系统的镜像， ( 这个尤其是在K8S中，对于异构CPU的服务器中的镜像显得尤为有效。)\n\n\n#如果没有配置文件的话，新建\nmkdir /root/.docker\n\n#进入docker配置目录\ncd /root/.docker/\n\n#修改配置文件\nvi config.json\n\n#添加如下配置信息 \n{\n  "auth": {},\n  "experimental": "enabled"   \n}\n\n#测试manifest是否开启\ndocker manifest\n\n#查看docker是否开启experimental功能\ndocker version \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 2. 使用docker获取arm镜像\n\n#X86平台docker拉取arm镜像\n#方法一：\n\ndocker pull --platform=arm64 镜像名:版本\n\n#示例\ndocker pull --platform=arm64 nginx:latest\n\n#方法二：\ndocker pull arm64v8/ubuntu:20.04\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 3. 启用docker Buildx 新特性\n\n> Docker在19.03引入了一个新的特性，使得Docker可以构建不同CPU体系结构的镜像，比如ARM镜像\n\n# 编辑 /etc/docker/daemon.json,增加下面的内容:\n{\n    "experimental": true\n}\n\n\n# 编辑 ~/.docker/config.json 文件,增加下面的内容\n{\n"experimental": "enabled"\n}\n\n# 重启Docker使生效：\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n#确认是否开启：如果输出true，则表示开启成功\ndocker version -f\'{{.Server.Experimental}}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 4. 获取QEMU\n\n> QEMU是一个通用的开源的跨平台仿真模拟器，提供user和system两种模式。其模拟的作用可是可以模拟在特定的体系结构下的应用的执行或者构建，比如在x86的体系结构的操作系统上运行ARM的应用。\n\n * 下载地址：https://github.com/multiarch/qemu-user-static/releases\n\n# 配置QEMU\nsudo cp qemu-aarch64-static /usr/bin/\nsudo chmod+x /usr/bin/qemu-aarch64-static\n\n\n\n1\n2\n3\n4\n\n\n\n# 5. 注册QEMU虚拟机(注意：重启电脑需要重新执行注册)\n\n#方式一\ndocker run --rm --privileged multiarch/qemu-user-static:register\n\n#方式二\ndocker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 6. 创建arm架构容器，并运行\n\ndocker run --rm -it -v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static -v /etc/timezone:/etc/timezone:ro \\\n-v /etc/localtime:/etc/localtime:ro arm64v8/ubuntu:20.04 bash\n\n\n\n1\n2\n3\n\n\n\n# 7. 查看容器架构\n\n在运行后的容器内部执行以下命令：uname -m可查看容器系统所属架构。',normalizedContent:'# docker 使用\n\n\n# 在x86_64 系统使用docker 运行arm64 容器\n\n\n# 1. 启用docker manifest\n\n> docker manifest特性可支持用户在不同系统架构的机器上分别运行不同的架构的镜像。\n\nmanifest list是一个镜像清单列表，用于存放多个不同os/arch的镜像信息；主要用到manifest的目的，其实还是多用于存放不同的os/arch信息，也就是方便我们在不同的cpu架构（arm或者x86）或者操作系统中，通过一个镜像名称拉取对应架构或者操作系统的镜像， ( 这个尤其是在k8s中，对于异构cpu的服务器中的镜像显得尤为有效。)\n\n\n#如果没有配置文件的话，新建\nmkdir /root/.docker\n\n#进入docker配置目录\ncd /root/.docker/\n\n#修改配置文件\nvi config.json\n\n#添加如下配置信息 \n{\n  "auth": {},\n  "experimental": "enabled"   \n}\n\n#测试manifest是否开启\ndocker manifest\n\n#查看docker是否开启experimental功能\ndocker version \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 2. 使用docker获取arm镜像\n\n#x86平台docker拉取arm镜像\n#方法一：\n\ndocker pull --platform=arm64 镜像名:版本\n\n#示例\ndocker pull --platform=arm64 nginx:latest\n\n#方法二：\ndocker pull arm64v8/ubuntu:20.04\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 3. 启用docker buildx 新特性\n\n> docker在19.03引入了一个新的特性，使得docker可以构建不同cpu体系结构的镜像，比如arm镜像\n\n# 编辑 /etc/docker/daemon.json,增加下面的内容:\n{\n    "experimental": true\n}\n\n\n# 编辑 ~/.docker/config.json 文件,增加下面的内容\n{\n"experimental": "enabled"\n}\n\n# 重启docker使生效：\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n#确认是否开启：如果输出true，则表示开启成功\ndocker version -f\'{{.server.experimental}}\'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 4. 获取qemu\n\n> qemu是一个通用的开源的跨平台仿真模拟器，提供user和system两种模式。其模拟的作用可是可以模拟在特定的体系结构下的应用的执行或者构建，比如在x86的体系结构的操作系统上运行arm的应用。\n\n * 下载地址：https://github.com/multiarch/qemu-user-static/releases\n\n# 配置qemu\nsudo cp qemu-aarch64-static /usr/bin/\nsudo chmod+x /usr/bin/qemu-aarch64-static\n\n\n\n1\n2\n3\n4\n\n\n\n# 5. 注册qemu虚拟机(注意：重启电脑需要重新执行注册)\n\n#方式一\ndocker run --rm --privileged multiarch/qemu-user-static:register\n\n#方式二\ndocker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 6. 创建arm架构容器，并运行\n\ndocker run --rm -it -v /usr/bin/qemu-aarch64-static:/usr/bin/qemu-aarch64-static -v /etc/timezone:/etc/timezone:ro \\\n-v /etc/localtime:/etc/localtime:ro arm64v8/ubuntu:20.04 bash\n\n\n\n1\n2\n3\n\n\n\n# 7. 查看容器架构\n\n在运行后的容器内部执行以下命令：uname -m可查看容器系统所属架构。',charsets:{cjk:!0}},{title:"Docker根目录迁移",frontmatter:{title:"Docker根目录迁移",date:"2023-08-17T03:19:51.000Z",permalink:"/pages/b3a787/",categories:["运维","Docker"],tags:["Docker"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/02.Docker/06.Docker%E6%A0%B9%E7%9B%AE%E5%BD%95%E8%BF%81%E7%A7%BB.html",relativePath:"运维/02.Docker/06.Docker根目录迁移.md",key:"v-d001d1e2",path:"/pages/b3a787/",headers:[{level:2,title:"docker 目录迁移",slug:"docker-目录迁移",normalizedTitle:"docker 目录迁移",charIndex:2},{level:3,title:"迁移方法",slug:"迁移方法",normalizedTitle:"迁移方法",charIndex:63}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"docker 目录迁移 迁移方法",content:'# docker 目录迁移\n\n> 背景：有时候会因为磁盘空间不足或其他原因需要将docker默认目录迁移至其它目录。\n\n\n# 迁移方法\n\n 1. 先停掉当前在运行的docker容器\n\ndocker stop $(docker ps -aq)\n\n\n1\n\n 2. 停止docker服务\n\nsystemctl stop docker\n\n\n1\n\n 3. 复制docker数据目录内容到新目录\n\n# cp方式(有效)\nsudo cp -rp /var/lib/docker /新的目录路径\n\n# 或使用同步文件夹方式(有效性待检验)\nrsync -avzP /var/lib/docker  /新目录路径/\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 更新docker配置文件(其位于/etc/docker/daemon.json，若不存在可手动创建)\n\n# 编辑(修改或新增)以下内容\n{\n  "data-root": "/新的目录路径"\n}\n\n\n1\n2\n3\n4\n\n 5. 重载并启动服务\n\n# 加载配置\nsystemctl daemon-reload\n\n# 启动服务\nsystemctl start docker\n\n\n1\n2\n3\n4\n5\n\n 6. 检查docker 服务，及其镜像、容器信息是否完整\n\n# 确保docker 服务正在运行\nsystemctl status docker\n\n# 查询docker根目录信息\n# 查看输出的信息是否与新目录路径一致\nsudo docker info | grep \'Docker Root Dir\'\n\n# 检查docker镜像\nsudo docker images\n\n# 检查docker容器\nsudo docker ps -a \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',normalizedContent:'# docker 目录迁移\n\n> 背景：有时候会因为磁盘空间不足或其他原因需要将docker默认目录迁移至其它目录。\n\n\n# 迁移方法\n\n 1. 先停掉当前在运行的docker容器\n\ndocker stop $(docker ps -aq)\n\n\n1\n\n 2. 停止docker服务\n\nsystemctl stop docker\n\n\n1\n\n 3. 复制docker数据目录内容到新目录\n\n# cp方式(有效)\nsudo cp -rp /var/lib/docker /新的目录路径\n\n# 或使用同步文件夹方式(有效性待检验)\nrsync -avzp /var/lib/docker  /新目录路径/\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 更新docker配置文件(其位于/etc/docker/daemon.json，若不存在可手动创建)\n\n# 编辑(修改或新增)以下内容\n{\n  "data-root": "/新的目录路径"\n}\n\n\n1\n2\n3\n4\n\n 5. 重载并启动服务\n\n# 加载配置\nsystemctl daemon-reload\n\n# 启动服务\nsystemctl start docker\n\n\n1\n2\n3\n4\n5\n\n 6. 检查docker 服务，及其镜像、容器信息是否完整\n\n# 确保docker 服务正在运行\nsystemctl status docker\n\n# 查询docker根目录信息\n# 查看输出的信息是否与新目录路径一致\nsudo docker info | grep \'docker root dir\'\n\n# 检查docker镜像\nsudo docker images\n\n# 检查docker容器\nsudo docker ps -a \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',charsets:{cjk:!0}},{title:"Nginx的基本使用",frontmatter:{title:"Nginx的基本使用",date:"2022-03-08T06:15:09.000Z",permalink:"/pages/fa15b2/",categories:["运维","Nginx"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/03.Nginx/01.Nginx%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html",relativePath:"运维/03.Nginx/01.Nginx的基本使用.md",key:"v-032c551a",path:"/pages/fa15b2/",headers:[{level:2,title:"安装Nginx",slug:"安装nginx",normalizedTitle:"安装nginx",charIndex:17},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:403},{level:2,title:"配置文件结构",slug:"配置文件结构",normalizedTitle:"配置文件结构",charIndex:565}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"安装Nginx 常用命令 配置文件结构",content:"# Nginx 基本使用\n\n\n# 安装Nginx\n\n 1. 将nginx*.tar.gz 上传至目标主机上；\n\n 2. 使用命令解压nginx.tar.gz\n    \n    tar -xzvf nginx*.tar.gz\n\n 3. 进入到解压目录中\n    \n    cd 目标路径\n\n 4. 执行下面命令\n\n#step1. 配置选项\n#除安装路径外，其它模块参数可选\n\n./configure --prefix=...安装路径 --with--stream\n\n# step2. 编译&&编译安装\n\nmake && make install\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n 5. 进入到安装目录/conf/下修改配置文件nginx.conf\n\n 6. 在sbin目录下执行nginx命令\n\n#测试\n./nginx -t\n\n#启动\n./nginx \n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 常用命令\n\nnginx -t             //检查配置文件是否有语法错误\nnginx -s reload       //热加载，重新加载配置文件\nnginx -s stop         //快速关闭\nnginx -s quit         //等待工作进程处理完成后关闭\n\n\n1\n2\n3\n4\n\n\n\n# 配置文件结构\n\n * 以下是Nginx配置文件主要结构\n\nmain        # 全局配置，对全局生效\n├── events  # 配置影响 Nginx 服务器或与用户的网络连接\n├── http    # 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置\n│   ├── upstream # 配置后端服务器具体地址，负载均衡配置不可或缺的部分\n│   ├── server   # 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块\n│   ├── server\n│   │   ├── location  # server 块可以包含多个 location 块，location 指令用于匹配 uri\n│   │   ├── location\n│   │   └── ...\n│   └── ...\n└── ...\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n",normalizedContent:"# nginx 基本使用\n\n\n# 安装nginx\n\n 1. 将nginx*.tar.gz 上传至目标主机上；\n\n 2. 使用命令解压nginx.tar.gz\n    \n    tar -xzvf nginx*.tar.gz\n\n 3. 进入到解压目录中\n    \n    cd 目标路径\n\n 4. 执行下面命令\n\n#step1. 配置选项\n#除安装路径外，其它模块参数可选\n\n./configure --prefix=...安装路径 --with--stream\n\n# step2. 编译&&编译安装\n\nmake && make install\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n 5. 进入到安装目录/conf/下修改配置文件nginx.conf\n\n 6. 在sbin目录下执行nginx命令\n\n#测试\n./nginx -t\n\n#启动\n./nginx \n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 常用命令\n\nnginx -t             //检查配置文件是否有语法错误\nnginx -s reload       //热加载，重新加载配置文件\nnginx -s stop         //快速关闭\nnginx -s quit         //等待工作进程处理完成后关闭\n\n\n1\n2\n3\n4\n\n\n\n# 配置文件结构\n\n * 以下是nginx配置文件主要结构\n\nmain        # 全局配置，对全局生效\n├── events  # 配置影响 nginx 服务器或与用户的网络连接\n├── http    # 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置\n│   ├── upstream # 配置后端服务器具体地址，负载均衡配置不可或缺的部分\n│   ├── server   # 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块\n│   ├── server\n│   │   ├── location  # server 块可以包含多个 location 块，location 指令用于匹配 uri\n│   │   ├── location\n│   │   └── ...\n│   └── ...\n└── ...\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n",charsets:{cjk:!0}},{title:"整理一些Nginx的常见问题及解惑",frontmatter:{title:"整理一些Nginx的常见问题及解惑",date:"2023-04-27T06:27:38.000Z",permalink:"/pages/f4274c/",categories:["运维","Nginx"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/03.Nginx/02.%E6%95%B4%E7%90%86%E4%B8%80%E4%BA%9BNginx%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E6%83%91.html",relativePath:"运维/03.Nginx/02.整理一些Nginx的常见问题及解惑.md",key:"v-7d7f2128",path:"/pages/f4274c/",headers:[{level:2,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:24},{level:3,title:"1.nginx是什么？为什么要使用Nginx？",slug:"_1-nginx是什么-为什么要使用nginx",normalizedTitle:"1.nginx是什么？为什么要使用nginx？",charIndex:31},{level:3,title:"2. 解释下正向代理和反向代理，以及它们的区别？",slug:"_2-解释下正向代理和反向代理-以及它们的区别",normalizedTitle:"2. 解释下正向代理和反向代理，以及它们的区别？",charIndex:431},{level:2,title:"作用",slug:"作用",normalizedTitle:"作用",charIndex:761},{level:3,title:"1. Nginx应用场景？",slug:"_1-nginx应用场景",normalizedTitle:"1. nginx应用场景？",charIndex:768},{level:3,title:"2. location的作用是什么？",slug:"_2-location的作用是什么",normalizedTitle:"2. location的作用是什么？",charIndex:1054},{level:3,title:"3. 动静分离的好处？意义？",slug:"_3-动静分离的好处-意义",normalizedTitle:"3. 动静分离的好处？意义？",charIndex:1164},{level:2,title:"应用",slug:"应用",normalizedTitle:"应用",charIndex:776},{level:3,title:"1. 什么是热部署，在Nginx中如何实现？",slug:"_1-什么是热部署-在nginx中如何实现",normalizedTitle:"1. 什么是热部署，在nginx中如何实现？",charIndex:1368},{level:3,title:"2. 什么是负载均衡？在Nginx中如何实现？",slug:"_2-什么是负载均衡-在nginx中如何实现",normalizedTitle:"2. 什么是负载均衡？在nginx中如何实现？",charIndex:1769},{level:3,title:"3. location 语法？",slug:"_3-location-语法",normalizedTitle:"3. location 语法？",charIndex:2277},{level:3,title:"4. 什么是动静分离？如何实现？",slug:"_4-什么是动静分离-如何实现",normalizedTitle:"4. 什么是动静分离？如何实现？",charIndex:2526},{level:3,title:"5. Nginx怎么限制个别IP不可访问？",slug:"_5-nginx怎么限制个别ip不可访问",normalizedTitle:"5. nginx怎么限制个别ip不可访问？",charIndex:2821}],lastUpdated:"2023/12/10 06:20:53",lastUpdatedTimestamp:1702160453e3,headersStr:"概念 1.nginx是什么？为什么要使用Nginx？ 2. 解释下正向代理和反向代理，以及它们的区别？ 作用 1. Nginx应用场景？ 2. location的作用是什么？ 3. 动静分离的好处？意义？ 应用 1. 什么是热部署，在Nginx中如何实现？ 2. 什么是负载均衡？在Nginx中如何实现？ 3. location 语法？ 4. 什么是动静分离？如何实现？ 5. Nginx怎么限制个别IP不可访问？",content:'# 整理一些Nginx的常见问题及解惑\n\n\n# 概念\n\n\n# 1.nginx是什么？为什么要使用Nginx？\n\nNginx（发音为"engine x"）是一个高性能、开源的Web服务器和反向代理服务器。它以其卓越的性能、可靠性和扩展性而受到广泛关注和使用。Nginx采用事件驱动的架构和异步非阻塞处理方式，可以处理大量并发连接，同时消耗较少的系统资源。\n\n使用Nginx的主要原因包括：\n\n * 高性能：Nginx的设计使其能够处理大量并发请求，具有出色的性能表现。\n * 可扩展性：Nginx可以轻松扩展以适应高流量和负载。它可以作为负载均衡器，将请求分发给多个服务器。\n * 反向代理：Nginx可以作为反向代理，提供对后端服务器的负载均衡、缓存、SSL终结等功能。\n * 高可靠性：Nginx能够在高并发环境下保持稳定，并具备故障转移和故障恢复的能力。\n * 虚拟主机支持：Nginx支持虚拟主机配置，使您能够在同一台服务器上托管多个域名和网站。\n\n\n# 2. 解释下正向代理和反向代理，以及它们的区别？\n\n正向代理和反向代理是两种不同的代理方式，它们的区别如下：\n\n * 正向代理：\n\n正向代理是客户端和目标服务器之间的代理。客户端向代理服务器发送请求，然后代理服务器将请求转发给目标服务器，并将响应返回给客户端。在这种情况下，目标服务器不知道客户端的存在。正向代理常见的使用场景是翻墙、匿名访问互联网等。\n\n * 反向代理：\n\n反向代理是位于服务器端的代理。客户端向反向代理服务器发送请求，然后反向代理服务器根据一定的规则将请求转发给后端的目标服务器，并将目标服务器的响应返回给客户端。反向代理隐藏了后端服务器的细节，对客户端来说，只需要与反向代理交互。反向代理常用于负载均衡、缓存加速、SSL终结等。\n\n\n# 作用\n\n\n# 1. Nginx应用场景？\n\nNginx的应用场景包括但不限于：\n\n * Web服务器：Nginx可以作为高性能的Web服务器，处理静态资源的请求并提供高并发能力。\n * 反向代理：Nginx作为反向代理，可以实现负载均衡、缓存加速、SSL终结等功能，提高服务的可靠性和性能。\n * 负载均衡器：Nginx可以将请求分发给多个后端服务器，平衡服务器的负载，确保服务的可用性。\n * 静态文件服务器：Nginx可以高效地提供静态文件的访问，加速文件传输和下载速度。\n * 缓存服务器：Nginx可以将经常访问的内容缓存在内存中，提供快速响应并减轻后端服务器的压力。\n\n\n# 2. location的作用是什么？\n\n在Nginx中，location指令用于匹配请求的URL路径，并定义要执行的操作。它可以用于处理特定的URL请求，并指定如何处理请求，如处理静态文件、反向代理、重定向等。\n\n\n# 3. 动静分离的好处？意义？\n\n动静分离的好处和意义包括：\n\n * 静态资源的处理效率高：Nginx专注于处理静态文件，具有高效的文件传输能力和较低的系统资源消耗。\n * 提升系统性能和可靠性：将动态请求交给应用服务器处理，可以减轻应用服务器的压力，提高整体系统的性能和可靠性。\n * 简化部署和维护：通过动静分离，可以更容易地对静态资源进行修改、更新和管理，并灵活地扩展和维护系统。\n\n\n# 应用\n\n\n# 1. 什么是热部署，在Nginx中如何实现？\n\n热部署是在无需重启服务器的情况下，实时更新和部署应用程序的过程。在Nginx中，可以通过以下方式实现热部署：\n\n * 在Nginx的配置文件中，定义一个或多个upstream块，指定后端服务器的地址和端口。例如：\n   \n   upstream backend {\n       server backend1.example.com:8080;\n       server backend2.example.com:8080;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   \n * 当需要更新应用程序时，只需直接修改后端服务器的配置，例如更改服务器的IP或端口，或者增加/减少服务器数量。\n * 保存配置更改后，通过执行nginx -s reload命令，Nginx将重新加载配置文件，并将新的配置应用到后端服务器。\n\n\n# 2. 什么是负载均衡？在Nginx中如何实现？\n\n负载均衡是将请求分发给多个服务器，以平衡服务器的负载，提高系统的性能和可靠性。在Nginx中，可以使用以下方法来实现负载均衡：\n\n * 在Nginx的配置文件中，使用upstream块定义一组后端服务器。例如：\n   \n   upstream backend {\n       server backend1.example.com;\n       server backend2.example.com;\n       server backend3.example.com;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * 在location块中，使用proxy_pass指令将请求转发给后端服务器。例如：\n   \n   location / {\n       proxy_pass http://backend;\n   }\n   \n   \n   1\n   2\n   3\n   \n * 根据配置中的负载均衡算法，Nginx将根据一定的规则将请求分发给后端服务器。常见的负载均衡算法有轮询、IP哈希、最少连接等。\n\n\n# 3. location 语法？\n\nlocation块的语法如下：\n\nlocation [修饰符] 要匹配的URL路径 {\n    ...  // 在这里定义要执行的操作\n}\n\n\n1\n2\n3\n\n * [修饰符]：修饰符可以是以下几种：\n   * =：精确匹配，只匹配完全与给定字符串相等的URL。\n   * ~：使用正则表达式匹配URL，区分大小写。\n   * ~*：使用正则表达式匹配URL，不区分大小写。\n * 要匹配的URL路径：指定要匹配的URL路径模式，可以是字符串或正则表达式。\n\n\n# 4. 什么是动静分离？如何实现？\n\n动静分离是将动态生成和处理的内容与静态的资源分别存放和处理的一种架构设计。在实践中，可以将动态请求交给应用服务器处理，而将静态资源（如图片、样式表、脚本等）交给Nginx进行处理。可以通过在Nginx的配置文件中，将静态资源的URL路径指定为Nginx服务器处理的路径，例如：\n\nlocation /static/ {\n    root /path/to/static/files;\n}\n\n\n1\n2\n3\n\n\n当请求以 /static/ 开头时，Nginx会在 /path/to/static/files 目录下寻找相应的静态资源并返回给客户端。\n\n\n# 5. Nginx怎么限制个别IP不可访问？\n\nNginx可以使用deny指令来阻止特定IP地址的访问。可以在Nginx的配置文件中使用location块和deny指令来实现，例如：\n\n    location / {\n        deny 192.168.1.100;\n        ...\n    }\n\n\n1\n2\n3\n4\n\n\n这样配置之后，IP地址为 192.168.1.100 的客户端将无法访问该location下的资源。您还可以使用allow指令来设置允许访问的IP地址或IP地址段。',normalizedContent:'# 整理一些nginx的常见问题及解惑\n\n\n# 概念\n\n\n# 1.nginx是什么？为什么要使用nginx？\n\nnginx（发音为"engine x"）是一个高性能、开源的web服务器和反向代理服务器。它以其卓越的性能、可靠性和扩展性而受到广泛关注和使用。nginx采用事件驱动的架构和异步非阻塞处理方式，可以处理大量并发连接，同时消耗较少的系统资源。\n\n使用nginx的主要原因包括：\n\n * 高性能：nginx的设计使其能够处理大量并发请求，具有出色的性能表现。\n * 可扩展性：nginx可以轻松扩展以适应高流量和负载。它可以作为负载均衡器，将请求分发给多个服务器。\n * 反向代理：nginx可以作为反向代理，提供对后端服务器的负载均衡、缓存、ssl终结等功能。\n * 高可靠性：nginx能够在高并发环境下保持稳定，并具备故障转移和故障恢复的能力。\n * 虚拟主机支持：nginx支持虚拟主机配置，使您能够在同一台服务器上托管多个域名和网站。\n\n\n# 2. 解释下正向代理和反向代理，以及它们的区别？\n\n正向代理和反向代理是两种不同的代理方式，它们的区别如下：\n\n * 正向代理：\n\n正向代理是客户端和目标服务器之间的代理。客户端向代理服务器发送请求，然后代理服务器将请求转发给目标服务器，并将响应返回给客户端。在这种情况下，目标服务器不知道客户端的存在。正向代理常见的使用场景是翻墙、匿名访问互联网等。\n\n * 反向代理：\n\n反向代理是位于服务器端的代理。客户端向反向代理服务器发送请求，然后反向代理服务器根据一定的规则将请求转发给后端的目标服务器，并将目标服务器的响应返回给客户端。反向代理隐藏了后端服务器的细节，对客户端来说，只需要与反向代理交互。反向代理常用于负载均衡、缓存加速、ssl终结等。\n\n\n# 作用\n\n\n# 1. nginx应用场景？\n\nnginx的应用场景包括但不限于：\n\n * web服务器：nginx可以作为高性能的web服务器，处理静态资源的请求并提供高并发能力。\n * 反向代理：nginx作为反向代理，可以实现负载均衡、缓存加速、ssl终结等功能，提高服务的可靠性和性能。\n * 负载均衡器：nginx可以将请求分发给多个后端服务器，平衡服务器的负载，确保服务的可用性。\n * 静态文件服务器：nginx可以高效地提供静态文件的访问，加速文件传输和下载速度。\n * 缓存服务器：nginx可以将经常访问的内容缓存在内存中，提供快速响应并减轻后端服务器的压力。\n\n\n# 2. location的作用是什么？\n\n在nginx中，location指令用于匹配请求的url路径，并定义要执行的操作。它可以用于处理特定的url请求，并指定如何处理请求，如处理静态文件、反向代理、重定向等。\n\n\n# 3. 动静分离的好处？意义？\n\n动静分离的好处和意义包括：\n\n * 静态资源的处理效率高：nginx专注于处理静态文件，具有高效的文件传输能力和较低的系统资源消耗。\n * 提升系统性能和可靠性：将动态请求交给应用服务器处理，可以减轻应用服务器的压力，提高整体系统的性能和可靠性。\n * 简化部署和维护：通过动静分离，可以更容易地对静态资源进行修改、更新和管理，并灵活地扩展和维护系统。\n\n\n# 应用\n\n\n# 1. 什么是热部署，在nginx中如何实现？\n\n热部署是在无需重启服务器的情况下，实时更新和部署应用程序的过程。在nginx中，可以通过以下方式实现热部署：\n\n * 在nginx的配置文件中，定义一个或多个upstream块，指定后端服务器的地址和端口。例如：\n   \n   upstream backend {\n       server backend1.example.com:8080;\n       server backend2.example.com:8080;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   \n * 当需要更新应用程序时，只需直接修改后端服务器的配置，例如更改服务器的ip或端口，或者增加/减少服务器数量。\n * 保存配置更改后，通过执行nginx -s reload命令，nginx将重新加载配置文件，并将新的配置应用到后端服务器。\n\n\n# 2. 什么是负载均衡？在nginx中如何实现？\n\n负载均衡是将请求分发给多个服务器，以平衡服务器的负载，提高系统的性能和可靠性。在nginx中，可以使用以下方法来实现负载均衡：\n\n * 在nginx的配置文件中，使用upstream块定义一组后端服务器。例如：\n   \n   upstream backend {\n       server backend1.example.com;\n       server backend2.example.com;\n       server backend3.example.com;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n * 在location块中，使用proxy_pass指令将请求转发给后端服务器。例如：\n   \n   location / {\n       proxy_pass http://backend;\n   }\n   \n   \n   1\n   2\n   3\n   \n * 根据配置中的负载均衡算法，nginx将根据一定的规则将请求分发给后端服务器。常见的负载均衡算法有轮询、ip哈希、最少连接等。\n\n\n# 3. location 语法？\n\nlocation块的语法如下：\n\nlocation [修饰符] 要匹配的url路径 {\n    ...  // 在这里定义要执行的操作\n}\n\n\n1\n2\n3\n\n * [修饰符]：修饰符可以是以下几种：\n   * =：精确匹配，只匹配完全与给定字符串相等的url。\n   * ~：使用正则表达式匹配url，区分大小写。\n   * ~*：使用正则表达式匹配url，不区分大小写。\n * 要匹配的url路径：指定要匹配的url路径模式，可以是字符串或正则表达式。\n\n\n# 4. 什么是动静分离？如何实现？\n\n动静分离是将动态生成和处理的内容与静态的资源分别存放和处理的一种架构设计。在实践中，可以将动态请求交给应用服务器处理，而将静态资源（如图片、样式表、脚本等）交给nginx进行处理。可以通过在nginx的配置文件中，将静态资源的url路径指定为nginx服务器处理的路径，例如：\n\nlocation /static/ {\n    root /path/to/static/files;\n}\n\n\n1\n2\n3\n\n\n当请求以 /static/ 开头时，nginx会在 /path/to/static/files 目录下寻找相应的静态资源并返回给客户端。\n\n\n# 5. nginx怎么限制个别ip不可访问？\n\nnginx可以使用deny指令来阻止特定ip地址的访问。可以在nginx的配置文件中使用location块和deny指令来实现，例如：\n\n    location / {\n        deny 192.168.1.100;\n        ...\n    }\n\n\n1\n2\n3\n4\n\n\n这样配置之后，ip地址为 192.168.1.100 的客户端将无法访问该location下的资源。您还可以使用allow指令来设置允许访问的ip地址或ip地址段。',charsets:{cjk:!0}},{title:"nginx通过四层代理实现端口转发",frontmatter:{title:"nginx通过四层代理实现端口转发",date:"2022-11-22T05:53:13.000Z",permalink:"/pages/eeaf64/",categories:["运维","Nginx"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/03.Nginx/09.nginx%E9%80%9A%E8%BF%87%E5%9B%9B%E5%B1%82%E4%BB%A3%E7%90%86%E5%AE%9E%E7%8E%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91.html",relativePath:"运维/03.Nginx/09.nginx通过四层代理实现端口转发.md",key:"v-fbdbe1c2",path:"/pages/eeaf64/",headers:[{level:2,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:24},{level:2,title:"背景",slug:"背景",normalizedTitle:"背景",charIndex:172},{level:2,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:428},{level:2,title:"开始配置",slug:"开始配置",normalizedTitle:"开始配置",charIndex:1047}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"概念 背景 准备工作 开始配置",content:"# nginx通过四层代理实现端口转发\n\n\n# 概念\n\n四层代理工具（Layer 4 Proxy）是一种网络代理技术，它在传输层（Transport Layer）进行操作，代理网络连接，对网络流量进行转发和负载均衡。\n\n四层代理工具通常用于 TCP 和 UDP 协议，例如代理 TCP 指向 Web 服务器的连接或者 UDP 数据流。\n\n\n# 背景\n\n公司原有的测试数据库在主机192.168.1.5上边，现在数据库转移到了192.168.1.4上， 在尽可能不改动其它配置的情况下的快速完成迁移需求，我能想到的合理的办法就是做一个四层代理，将原来请求到192.168.1.5的3306端口转发到192.168.1.4的3306端口。\n\n通过官方文档，可以得知：Nginx中四层代理依赖模块 ngx_stream_core_module，该模块自 1.9.0 版开始可用。默认情况下，此模块不构建，应使用配置参数启用 --with-stream。\n\n\n# 准备工作\n\n * 安装Nginx并启用--with-stream模块\n\n安装步骤大致如下：\n\n[root@linux-node1 src]# tar xf nginx-1.10.3.tar.gz \n[root@linux-node1 src]# cd nginx-1.10.3\n[root@linux-node1 nginx-1.10.3]# useradd -s /sbin/nologin -M www\n[root@linux-node1 nginx-1.10.3]# yum install gcc gcc-c++ zlib-devel pcre-devel openssl openssl-devel -y\n[root@linux-node1 nginx-1.10.3]# ./configure --prefix=/usr/local/nginx-1.10.3 --user=www --group=www \\ \n--with-http_ssl_module --with-http_stub_status_module --with-file-aio --with-stream\n[root@linux-node1 nginx-1.10.3]# make && make install \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n可以通过nginx -V查看一下是否将上述模块编译进来，如果没有，可以重新编译一下。\n\n\n# 开始配置\n\n * 简单配置测试下 nginx.conf 文件\n\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nstream {  \n        upstream tcp_proxy {\n        hash $remote_addr consistent;  #远程地址做个hash\n        server 192.168.1.4:22;\n   }\n      server {\n        listen 2222;\n        proxy_connect_timeout 1s;\n        proxy_timeout 10s;  #后端连接超时时间\n        proxy_pass tcp_proxy;\n     }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n上面的配置是将本机的 2222 端口转发到 192.168.1.4 的 22 端口，配置之后，试验结果：通过了。\n\n同理，开始配置数据库端口的转发。我们按照上面的配置，稍加改动下：\n\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nstream {  \n        upstream tcp_proxy {\n        hash $remote_addr consistent;  #远程地址做个hash\n        server 192.168.1.4:3306;\n   }\n      server {\n        listen 3306;\n        proxy_connect_timeout 1s;\n       # proxy_timeout 10s;  #后端连接超时时间\n        proxy_pass tcp_proxy;\n     }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n这样一来，用户连接192.168.1.5:3306的时候，就会被转发到192.168.1.4:3306了。",normalizedContent:"# nginx通过四层代理实现端口转发\n\n\n# 概念\n\n四层代理工具（layer 4 proxy）是一种网络代理技术，它在传输层（transport layer）进行操作，代理网络连接，对网络流量进行转发和负载均衡。\n\n四层代理工具通常用于 tcp 和 udp 协议，例如代理 tcp 指向 web 服务器的连接或者 udp 数据流。\n\n\n# 背景\n\n公司原有的测试数据库在主机192.168.1.5上边，现在数据库转移到了192.168.1.4上， 在尽可能不改动其它配置的情况下的快速完成迁移需求，我能想到的合理的办法就是做一个四层代理，将原来请求到192.168.1.5的3306端口转发到192.168.1.4的3306端口。\n\n通过官方文档，可以得知：nginx中四层代理依赖模块 ngx_stream_core_module，该模块自 1.9.0 版开始可用。默认情况下，此模块不构建，应使用配置参数启用 --with-stream。\n\n\n# 准备工作\n\n * 安装nginx并启用--with-stream模块\n\n安装步骤大致如下：\n\n[root@linux-node1 src]# tar xf nginx-1.10.3.tar.gz \n[root@linux-node1 src]# cd nginx-1.10.3\n[root@linux-node1 nginx-1.10.3]# useradd -s /sbin/nologin -m www\n[root@linux-node1 nginx-1.10.3]# yum install gcc gcc-c++ zlib-devel pcre-devel openssl openssl-devel -y\n[root@linux-node1 nginx-1.10.3]# ./configure --prefix=/usr/local/nginx-1.10.3 --user=www --group=www \\ \n--with-http_ssl_module --with-http_stub_status_module --with-file-aio --with-stream\n[root@linux-node1 nginx-1.10.3]# make && make install \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n可以通过nginx -v查看一下是否将上述模块编译进来，如果没有，可以重新编译一下。\n\n\n# 开始配置\n\n * 简单配置测试下 nginx.conf 文件\n\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nstream {  \n        upstream tcp_proxy {\n        hash $remote_addr consistent;  #远程地址做个hash\n        server 192.168.1.4:22;\n   }\n      server {\n        listen 2222;\n        proxy_connect_timeout 1s;\n        proxy_timeout 10s;  #后端连接超时时间\n        proxy_pass tcp_proxy;\n     }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n上面的配置是将本机的 2222 端口转发到 192.168.1.4 的 22 端口，配置之后，试验结果：通过了。\n\n同理，开始配置数据库端口的转发。我们按照上面的配置，稍加改动下：\n\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nstream {  \n        upstream tcp_proxy {\n        hash $remote_addr consistent;  #远程地址做个hash\n        server 192.168.1.4:3306;\n   }\n      server {\n        listen 3306;\n        proxy_connect_timeout 1s;\n       # proxy_timeout 10s;  #后端连接超时时间\n        proxy_pass tcp_proxy;\n     }\n  }\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n这样一来，用户连接192.168.1.5:3306的时候，就会被转发到192.168.1.4:3306了。",charsets:{cjk:!0}},{title:"http状态码详解",frontmatter:{title:"http状态码详解",date:"2023-01-10T03:39:07.000Z",permalink:"/pages/18b551/",categories:["运维","Nginx"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/03.Nginx/10.http%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A6%E8%A7%A3.html",relativePath:"运维/03.Nginx/10.http状态码详解.md",key:"v-4277f43b",path:"/pages/18b551/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:197},{level:2,title:"常见分类",slug:"常见分类",normalizedTitle:"常见分类",charIndex:262},{level:2,title:"详解",slug:"详解",normalizedTitle:"详解",charIndex:9}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"概述 常见分类 详解",content:"# http状态码详解\n\n在我们日常的生活和工作中，http是个很常见的网络协议，它通常用于客户端与服务器的交互，其工作模式是客户端向服务器发起请求，然后服务器响应请求返回http的状态码以及相应的具体内容。\n\nHTTP 状态码是非常重要且不可忽略的，每一条网络请求都会有其对应的http状态码，我们通过它可以直观了解到 HTTP 请求的结果信息，并据此进行调试程序及故障排除等操作。\n\n\n# 概述\n\nHTTP 状态码（HTTP Status Code）是用以表示网页服务器 HTTP 响应状态的 3 位数字代码。\n\n\n# 常见分类\n\n常见的状态码有以下几个：\n\n * 200 – 请求成功\n * 301 – 资源（网页等）被永久转移到其它 URL\n * 404 – 请求的资源（网页等）不存在\n * 500 – 内部服务器错误\n\n\n# 详解\n\n响应码分五种类型，由它们的第一位数字表示：\n\n 1. 1xx：临时响应\n\n表示临时响应并需要请求者继续执行操作的状态代码。\n\n100 => “HTTP/1.1 100 Continue” #请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。\n101 => “HTTP/1.1 101 Switching Protocols” #请求者已要求服务器切换协议，服务器已确认并准备切换。\n\n\n1\n2\n\n 2. 2xx：成功\n\n表示成功处理了请求的状态代码。\n\n200 => “HTTP/1.1 200 OK” #服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。\n201 => “HTTP/1.1 201 Created” #请求成功并且服务器创建了新的资源。\n202 => “HTTP/1.1 202 Accepted” #服务器已接受请求，但尚未处理。\n203 => “HTTP/1.1 203 Non-Authoritative Information” #服务器已成功处理了请求，但返回的信息可能来自另一来源。\n204 => “HTTP/1.1 204 No Content” #服务器已成功处理了请求，但返回的信息可能来自另一来源。\n205 => “HTTP/1.1 205 Reset Content” #服务器成功处理了请求，但没有返回任何内容。\n206 => “HTTP/1.1 206 Partial Content” #服务器成功处理了部分 GET 请求。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 3xx：重定向\n\n表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\n\n300 => “HTTP/1.1 300 Multiple Choices” #表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\n301 => “HTTP/1.1 301 Moved Permanently” #请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。\n302 => “HTTP/1.1 302 Found” #服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\n303 => “HTTP/1.1 303 See Other” #请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。\n304 => “HTTP/1.1 304 Not Modified” #自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。\n305 => “HTTP/1.1 305 Use Proxy” #请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。\n307 => “HTTP/1.1 307 Temporary Redirect” #服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 4xx：客户端错误\n\n这些状态代码表示请求可能出错，妨碍了服务器的处理。\n\n400 => “HTTP/1.1 400 Bad Request” #服务器不理解请求的语法。\n401 => “HTTP/1.1 401 Unauthorized” #请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。\n402 => “HTTP/1.1 402 Payment Required” #保留有效ChargeTo头响应\n403 => “HTTP/1.1 403 Forbidden” #服务器拒绝请求，首页文件不存在。\n404 => “HTTP/1.1 404 Not Found” #服务器找不到请求的网页。\n405 => “HTTP/1.1 405 Method Not Allowed” #禁用请求中指定的方法。\n406 => “HTTP/1.1 406 Not Acceptable” #无法使用请求的内容特性响应请求的网页。\n407 => “HTTP/1.1 407 Proxy Authentication Required” #此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。\n408 => “HTTP/1.1 408 Request Time-out”#服务器等候请求时发生超时。\n409 => “HTTP/1.1 409 Conflict” #服务器在完成请求时发生冲突， 服务器必须在响应中包含有关冲突的信息。\n410 => “HTTP/1.1 410 Gone” #如果请求的资源已永久删除，服务器就会返回此响应。\n411 => “HTTP/1.1 411 Length Required”#服务器不接受不含有效内容长度标头字段的请求。\n412 => “HTTP/1.1 412 Precondition Failed” #服务器未满足请求者在请求中设置的其中一个前提条件。\n413 => “HTTP/1.1 413 Request Entity Too Large”#服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。\n414 => “HTTP/1.1 414 Request-URI Too Large” #请求的 URI（通常为网址）过长，服务器无法处理。\n415 => “HTTP/1.1 415 Unsupported Media Type” #请求的格式不受请求页面的支持。\n416 => “HTTP/1.1 416 Requested range not satisfiable” #如果页面无法提供请求的范围，则服务器会返回此状态代码。\n417 => “HTTP/1.1 417 Expectation Failed” #服务器未满足”期望”请求标头字段的要求。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 5. 5xx：服务器错误\n\n这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。\n\n500 => “HTTP/1.1 500 Internal Server Error” #服务器遇到错误，无法完成请求。\n501 => “HTTP/1.1 501 Not Implemented” #服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。\n502 => “HTTP/1.1 502 Bad Gateway”#服务器作为网关或代理，从上游服务器收到无效响应。\n503 => “HTTP/1.1 503 Service Unavailable” #服务器目前无法使用（由于超载或停机维护）， 通常，这只是暂时状态。\n504 => “HTTP/1.1 504 Gateway Time-out”#服务器作为网关或代理，但是没有及时从上游服务器收到请求。\n505 => “HTTP/1.1 505″ #服务器不支持请求中所用的 HTTP 协议版本。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# http状态码详解\n\n在我们日常的生活和工作中，http是个很常见的网络协议，它通常用于客户端与服务器的交互，其工作模式是客户端向服务器发起请求，然后服务器响应请求返回http的状态码以及相应的具体内容。\n\nhttp 状态码是非常重要且不可忽略的，每一条网络请求都会有其对应的http状态码，我们通过它可以直观了解到 http 请求的结果信息，并据此进行调试程序及故障排除等操作。\n\n\n# 概述\n\nhttp 状态码（http status code）是用以表示网页服务器 http 响应状态的 3 位数字代码。\n\n\n# 常见分类\n\n常见的状态码有以下几个：\n\n * 200 – 请求成功\n * 301 – 资源（网页等）被永久转移到其它 url\n * 404 – 请求的资源（网页等）不存在\n * 500 – 内部服务器错误\n\n\n# 详解\n\n响应码分五种类型，由它们的第一位数字表示：\n\n 1. 1xx：临时响应\n\n表示临时响应并需要请求者继续执行操作的状态代码。\n\n100 => “http/1.1 100 continue” #请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。\n101 => “http/1.1 101 switching protocols” #请求者已要求服务器切换协议，服务器已确认并准备切换。\n\n\n1\n2\n\n 2. 2xx：成功\n\n表示成功处理了请求的状态代码。\n\n200 => “http/1.1 200 ok” #服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。\n201 => “http/1.1 201 created” #请求成功并且服务器创建了新的资源。\n202 => “http/1.1 202 accepted” #服务器已接受请求，但尚未处理。\n203 => “http/1.1 203 non-authoritative information” #服务器已成功处理了请求，但返回的信息可能来自另一来源。\n204 => “http/1.1 204 no content” #服务器已成功处理了请求，但返回的信息可能来自另一来源。\n205 => “http/1.1 205 reset content” #服务器成功处理了请求，但没有返回任何内容。\n206 => “http/1.1 206 partial content” #服务器成功处理了部分 get 请求。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n 3. 3xx：重定向\n\n表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\n\n300 => “http/1.1 300 multiple choices” #表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\n301 => “http/1.1 301 moved permanently” #请求的网页已永久移动到新位置。 服务器返回此响应（对 get 或 head 请求的响应）时，会自动将请求者转到新位置。\n302 => “http/1.1 302 found” #服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\n303 => “http/1.1 303 see other” #请求者应当对不同的位置使用单独的 get 请求来检索响应时，服务器返回此代码。\n304 => “http/1.1 304 not modified” #自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。\n305 => “http/1.1 305 use proxy” #请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。\n307 => “http/1.1 307 temporary redirect” #服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 4xx：客户端错误\n\n这些状态代码表示请求可能出错，妨碍了服务器的处理。\n\n400 => “http/1.1 400 bad request” #服务器不理解请求的语法。\n401 => “http/1.1 401 unauthorized” #请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。\n402 => “http/1.1 402 payment required” #保留有效chargeto头响应\n403 => “http/1.1 403 forbidden” #服务器拒绝请求，首页文件不存在。\n404 => “http/1.1 404 not found” #服务器找不到请求的网页。\n405 => “http/1.1 405 method not allowed” #禁用请求中指定的方法。\n406 => “http/1.1 406 not acceptable” #无法使用请求的内容特性响应请求的网页。\n407 => “http/1.1 407 proxy authentication required” #此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。\n408 => “http/1.1 408 request time-out”#服务器等候请求时发生超时。\n409 => “http/1.1 409 conflict” #服务器在完成请求时发生冲突， 服务器必须在响应中包含有关冲突的信息。\n410 => “http/1.1 410 gone” #如果请求的资源已永久删除，服务器就会返回此响应。\n411 => “http/1.1 411 length required”#服务器不接受不含有效内容长度标头字段的请求。\n412 => “http/1.1 412 precondition failed” #服务器未满足请求者在请求中设置的其中一个前提条件。\n413 => “http/1.1 413 request entity too large”#服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。\n414 => “http/1.1 414 request-uri too large” #请求的 uri（通常为网址）过长，服务器无法处理。\n415 => “http/1.1 415 unsupported media type” #请求的格式不受请求页面的支持。\n416 => “http/1.1 416 requested range not satisfiable” #如果页面无法提供请求的范围，则服务器会返回此状态代码。\n417 => “http/1.1 417 expectation failed” #服务器未满足”期望”请求标头字段的要求。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 5. 5xx：服务器错误\n\n这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。\n\n500 => “http/1.1 500 internal server error” #服务器遇到错误，无法完成请求。\n501 => “http/1.1 501 not implemented” #服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。\n502 => “http/1.1 502 bad gateway”#服务器作为网关或代理，从上游服务器收到无效响应。\n503 => “http/1.1 503 service unavailable” #服务器目前无法使用（由于超载或停机维护）， 通常，这只是暂时状态。\n504 => “http/1.1 504 gateway time-out”#服务器作为网关或代理，但是没有及时从上游服务器收到请求。\n505 => “http/1.1 505″ #服务器不支持请求中所用的 http 协议版本。\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0}},{title:"使用minikube安装k8s单机版",frontmatter:{title:"使用minikube安装k8s单机版",date:"2022-11-07T05:44:18.000Z",permalink:"/pages/4cc7bb/",categories:["运维","Kubernetes"],tags:["服务搭建","K8S"],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/04.Kubernetes/01.%E4%BD%BF%E7%94%A8minikube%E5%AE%89%E8%A3%85k8s%E5%8D%95%E6%9C%BA%E7%89%88.html",relativePath:"运维/04.Kubernetes/01.使用minikube安装k8s单机版.md",key:"v-5fd2c458",path:"/pages/4cc7bb/",headers:[{level:2,title:"安装docker",slug:"安装docker",normalizedTitle:"安装docker",charIndex:25},{level:2,title:"安装kubectl",slug:"安装kubectl",normalizedTitle:"安装kubectl",charIndex:54},{level:3,title:"方法1",slug:"方法1",normalizedTitle:"方法1",charIndex:68},{level:3,title:"方法2",slug:"方法2",normalizedTitle:"方法2",charIndex:319},{level:2,title:"安装minikube",slug:"安装minikube",normalizedTitle:"安装minikube",charIndex:740}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"安装docker 安装kubectl 方法1 方法2 安装minikube",content:"# 使用minikube安装k8s单机版\n\n\n# 安装docker\n\nlinux中安装docker\n\n\n# 安装kubectl\n\n\n# 方法1\n\n可以从kubernetes库上直接下载，方法如下：\n\n 1. 访问官方github网址：https://github.com/kubernetes/kubernetes/releases\n\n 2. 找到想使用的发布版本，在每个发布版本的最后一行有类似“CHANGELOG-1.10.md”这样的内容，点击超链进入；\n\n 3. 然后进入“Client Binaries”区域；\n\n 4. 选择和目标机器系统匹配的二进制包下载；\n\n 5. 解压缩，放入/usr/local/bin目录；\n\n\n# 方法2\n\n 1. 手动添加k8s仓库\n\ncat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n     http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 2. 执行安装\n\nyum install -y kubectl-1.12.2-0\n\n\n1\n\n\n\n# 安装minikube\n\n * 阿里云发布的minikube地址：https://github.com/AliyunContainerService/minikube\n\n 1. 从release目录下载最新的minikube版本，然后执行：\n\nchmod +x minikube\nmv minikube /usr/local/bin\n\n\n\n1\n2\n3\n\n 2. 启动\n\nminikube start --registry-mirror=https://registry.docker-cn.com\n\n\n1\n",normalizedContent:"# 使用minikube安装k8s单机版\n\n\n# 安装docker\n\nlinux中安装docker\n\n\n# 安装kubectl\n\n\n# 方法1\n\n可以从kubernetes库上直接下载，方法如下：\n\n 1. 访问官方github网址：https://github.com/kubernetes/kubernetes/releases\n\n 2. 找到想使用的发布版本，在每个发布版本的最后一行有类似“changelog-1.10.md”这样的内容，点击超链进入；\n\n 3. 然后进入“client binaries”区域；\n\n 4. 选择和目标机器系统匹配的二进制包下载；\n\n 5. 解压缩，放入/usr/local/bin目录；\n\n\n# 方法2\n\n 1. 手动添加k8s仓库\n\ncat <<eof > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n     http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\neof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 2. 执行安装\n\nyum install -y kubectl-1.12.2-0\n\n\n1\n\n\n\n# 安装minikube\n\n * 阿里云发布的minikube地址：https://github.com/aliyuncontainerservice/minikube\n\n 1. 从release目录下载最新的minikube版本，然后执行：\n\nchmod +x minikube\nmv minikube /usr/local/bin\n\n\n\n1\n2\n3\n\n 2. 启动\n\nminikube start --registry-mirror=https://registry.docker-cn.com\n\n\n1\n",charsets:{cjk:!0}},{title:"ElasticSearch 索引、文档管理",frontmatter:{title:"ElasticSearch 索引、文档管理",date:"2022-12-10T05:47:59.000Z",permalink:"/pages/2fd687/",categories:["运维","ELK"],tags:[null],author:{name:"dxzh",link:"https://www.baidu.com"}},regularPath:"/%E8%BF%90%E7%BB%B4/05.ELK/03.ElasticSearch%E8%BF%9B%E8%A1%8C%E7%B4%A2%E5%BC%95%E3%80%81%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86.html",relativePath:"运维/05.ELK/03.ElasticSearch进行索引、文档管理.md",key:"v-b51556ae",path:"/pages/2fd687/",headers:[{level:2,title:"与常规关系型数据库的映射关系",slug:"与常规关系型数据库的映射关系",normalizedTitle:"与常规关系型数据库的映射关系",charIndex:28},{level:2,title:"索引管理(结合Kibana使用)",slug:"索引管理-结合kibana使用",normalizedTitle:"索引管理(结合kibana使用)",charIndex:49},{level:3,title:"查看索引",slug:"查看索引",normalizedTitle:"查看索引",charIndex:70},{level:3,title:"创建索引",slug:"创建索引",normalizedTitle:"创建索引",charIndex:143},{level:3,title:"删除索引",slug:"删除索引",normalizedTitle:"删除索引",charIndex:172},{level:3,title:"判断索引存在",slug:"判断索引存在",normalizedTitle:"判断索引存在",charIndex:204},{level:2,title:"文档管理",slug:"文档管理",normalizedTitle:"文档管理",charIndex:19},{level:3,title:"创建文档",slug:"创建文档",normalizedTitle:"创建文档",charIndex:265},{level:3,title:"查询文档数据",slug:"查询文档数据",normalizedTitle:"查询文档数据",charIndex:348},{level:3,title:"修改文档数据",slug:"修改文档数据",normalizedTitle:"修改文档数据",charIndex:450},{level:3,title:"删除文档数据",slug:"删除文档数据",normalizedTitle:"删除文档数据",charIndex:631},{level:2,title:"文档搜索",slug:"文档搜索",normalizedTitle:"文档搜索",charIndex:679},{level:3,title:"分词查询",slug:"分词查询",normalizedTitle:"分词查询",charIndex:688}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"与常规关系型数据库的映射关系 索引管理(结合Kibana使用) 查看索引 创建索引 删除索引 判断索引存在 文档管理 创建文档 查询文档数据 修改文档数据 删除文档数据 文档搜索 分词查询",content:'# ElasticSearch 索引、文档管理\n\n\n# 与常规关系型数据库的映射关系\n\n\n\n\n# 索引管理(结合Kibana使用)\n\n\n# 查看索引\n\n#查看所有索引\nGET _cat/indices?v\n\n#查看指定索引\nGET indexName\n\n\n1\n2\n3\n4\n5\n\n\n\n# 创建索引\n\nPUT indexName\n\n\n1\n\n\n\n# 删除索引\n\nDELETE indexName\n\n\n1\n\n\n\n# 判断索引存在\n\n#200表示存在,404表示不存在\nhead indexName\n\n\n1\n2\n\n\n\n# 文档管理\n\n\n# 创建文档\n\n# 可用put/post创建，其中put需要指定索引唯一id,post不用\nput indexName/_doc/index_id\n\n\n1\n2\n\n\n\n# 查询文档数据\n\n# 根据索引id查询索引数据\nGET indexName/_doc/index_id\n\n# 查询所有索引数据\nGET indexName/_search\n\n\n1\n2\n3\n4\n5\n\n\n\n# 修改文档数据\n\nPOST indexName/_doc/index_id\n\n\n\n1\n2\n\n\n> 注意事项：修改时，要在原有基础上修改，而不能只指定单个key的修改，否则生效后，原先其它key会被舍弃。\n> \n> 即：如果原有key:id,name,age等，如果希望修改age,也需要将id,name 等Post过去修改，否则最后的数据只会保留age.\n\n\n# 删除文档数据\n\nDELETE indexName/_doc/index_id\n\n\n1\n\n\n\n# 文档搜索\n\n\n# 分词查询\n\n * 简单条件\n\nGET indexName/_search\n{\n    "Query":{\n        "match": {\n            "key" : "value"\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n此处会有分词匹配效果，假设key.value="hello world",则会将\'hello\' 和\'world\'分为两个词，即匹配目标文档中包含 key.value="hello"和key.value="world"的数据，而不会将"hello world"视为一个整体\n\n * 完整匹配\n\nGET indexName/_search\n{\n    "Query":{\n        "term":{\n            "key":{\n                "value" :"text"\n            }\n        }\n    }\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n此处会有完全匹配效果，假设key.value="hello world"，则ES会将"hello world"视为一个整体进行查找\n\n * 对查询结果的字段进行限制\n\n# 假如文档数据中含有多个key值，分别为key0...key10,如果仅需要展示部分key，则利用"_source"属性进行限制\n\nGET indexName/_search\n{\n    "_source": [key1,key2..]\n    "Query":{\n        "term":{\n            "key":{\n                "value" :"text"\n            }\n        }\n    }\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',normalizedContent:'# elasticsearch 索引、文档管理\n\n\n# 与常规关系型数据库的映射关系\n\n\n\n\n# 索引管理(结合kibana使用)\n\n\n# 查看索引\n\n#查看所有索引\nget _cat/indices?v\n\n#查看指定索引\nget indexname\n\n\n1\n2\n3\n4\n5\n\n\n\n# 创建索引\n\nput indexname\n\n\n1\n\n\n\n# 删除索引\n\ndelete indexname\n\n\n1\n\n\n\n# 判断索引存在\n\n#200表示存在,404表示不存在\nhead indexname\n\n\n1\n2\n\n\n\n# 文档管理\n\n\n# 创建文档\n\n# 可用put/post创建，其中put需要指定索引唯一id,post不用\nput indexname/_doc/index_id\n\n\n1\n2\n\n\n\n# 查询文档数据\n\n# 根据索引id查询索引数据\nget indexname/_doc/index_id\n\n# 查询所有索引数据\nget indexname/_search\n\n\n1\n2\n3\n4\n5\n\n\n\n# 修改文档数据\n\npost indexname/_doc/index_id\n\n\n\n1\n2\n\n\n> 注意事项：修改时，要在原有基础上修改，而不能只指定单个key的修改，否则生效后，原先其它key会被舍弃。\n> \n> 即：如果原有key:id,name,age等，如果希望修改age,也需要将id,name 等post过去修改，否则最后的数据只会保留age.\n\n\n# 删除文档数据\n\ndelete indexname/_doc/index_id\n\n\n1\n\n\n\n# 文档搜索\n\n\n# 分词查询\n\n * 简单条件\n\nget indexname/_search\n{\n    "query":{\n        "match": {\n            "key" : "value"\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n此处会有分词匹配效果，假设key.value="hello world",则会将\'hello\' 和\'world\'分为两个词，即匹配目标文档中包含 key.value="hello"和key.value="world"的数据，而不会将"hello world"视为一个整体\n\n * 完整匹配\n\nget indexname/_search\n{\n    "query":{\n        "term":{\n            "key":{\n                "value" :"text"\n            }\n        }\n    }\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n此处会有完全匹配效果，假设key.value="hello world"，则es会将"hello world"视为一个整体进行查找\n\n * 对查询结果的字段进行限制\n\n# 假如文档数据中含有多个key值，分别为key0...key10,如果仅需要展示部分key，则利用"_source"属性进行限制\n\nget indexname/_search\n{\n    "_source": [key1,key2..]\n    "query":{\n        "term":{\n            "key":{\n                "value" :"text"\n            }\n        }\n    }\n\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n',charsets:{cjk:!0}},{title:"单节点版ELK日志服务搭建",frontmatter:{title:"单节点版ELK日志服务搭建",date:"2022-11-18T02:40:54.000Z",permalink:"/pages/47f919/",categories:["运维","ELK"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/05.ELK/02.%E5%8D%95%E8%8A%82%E7%82%B9%E7%89%88ELK%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA.html",relativePath:"运维/05.ELK/02.单节点版ELK日志服务搭建.md",key:"v-26106136",path:"/pages/47f919/",headers:[{level:2,title:"ELK简介",slug:"elk简介",normalizedTitle:"elk简介",charIndex:2},{level:2,title:"搭建ElasticSearch",slug:"搭建elasticsearch",normalizedTitle:"搭建elasticsearch",charIndex:314},{level:3,title:"安装插件",slug:"安装插件",normalizedTitle:"安装插件",charIndex:1929},{level:4,title:"IK 分词器",slug:"ik-分词器",normalizedTitle:"ik 分词器",charIndex:1937},{level:3,title:"遇到的问题&&解决办法",slug:"遇到的问题-解决办法",normalizedTitle:"遇到的问题&amp;&amp;解决办法",charIndex:null},{level:3,title:"参考链接",slug:"参考链接",normalizedTitle:"参考链接",charIndex:2738},{level:2,title:"搭建Kibana",slug:"搭建kibana",normalizedTitle:"搭建kibana",charIndex:2875},{level:3,title:"参考链接",slug:"参考链接-2",normalizedTitle:"参考链接",charIndex:2738},{level:2,title:"搭建Logstash",slug:"搭建logstash",normalizedTitle:"搭建logstash",charIndex:3655},{level:3,title:"参考链接",slug:"参考链接-3",normalizedTitle:"参考链接",charIndex:2738}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"ELK简介 搭建ElasticSearch 安装插件 IK 分词器 遇到的问题&&解决办法 参考链接 搭建Kibana 参考链接 搭建Logstash 参考链接",content:'# ELK简介\n\nELK 是ElasticSearch开源生态中提供的一套完整日志收集、分析以及展示的解决方案，是三个产品的首字母缩写，分别是ElasticSearch、Logstash 和 Kibana。\n\n * ElasticSearch 是一个分布式、Restful 风格的搜索和数据分析引擎。\n\n * Logstash 是服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到诸如 ElasticSearch 等存储库中。\n\n * Kibana 则可以让用户在 ElasticSearch 中使用图形和图表对数据进行可视化。\n\n搭建elk时，要保证其对应的版本好一致，否则会出现未知的错误\n\n\n# 搭建ElasticSearch\n\n 1. 下载\n\n> https://www.elastic.co/cn/downloads/elasticsearch\n\n 2. 上传并解压\n\ntar -xzvf elasticsearch-xxx.tar.gz\n\n\n1\n\n 3. 创建专属es用户\n\n> root用户不能直接启动Elasticsearch，所以需要创建一个专用用户，来启动ES\n\n# 创建用户\nuseradd user-es\n\n# 分配权限\nchown user-es:user-es -R /usr/local/elasticsearch-7.13.2\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 修改配置\n\n * 修改ES的jdk依赖\n\n> es和jdk是一个强依赖的关系，所以当我们在新版本的ElasticSearch压缩包中包含有自带的jdk，但是当我们的Linux中已经安装了jdk之后，就会发现启动es的时候优先去找的是Linux中已经装好的jdk，此时如果jdk的版本不一致，就会造成jdk不能正常运行\n\n(1)进入bin目录，并编辑启动文件\n\ncd /usr/local/elasticsearch-7.13.2/bin\n\nvim ./elasticsearch\n\n\n1\n2\n3\n\n\n(2)添加以下代码\n\n############## 添加配置解决jdk版本问题 ##############\n# 将jdk修改为es中自带jdk的配置目录\nexport JAVA_HOME=/usr/local/elasticsearch-7.13.2/jdk\nexport PATH=$JAVA_HOME/bin:$PATH\n\nif [ -x "$JAVA_HOME/bin/java" ]; then\n        JAVA="/usr/local/elasticsearch-7.13.2/jdk/bin/java"\nelse\n        JAVA=`which java`\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * 修改ES核心配置\n\n(1)编辑config目录中的yml文件\n\nvim /usr/local/elasticsearch-7.13.2/config/elasticsearch.yml\n\n\n1\n\n\n(2)修改以下配置\n\n# 修改数据和日志目录\n# 数据目录位置\npath.data: /home/新用户名称/elasticsearch/data \n# 日志目录位置\npath.logs: /home/新用户名称/elasticsearch/logs \n\n#修改绑定的ip允许远程访问\n#默认只允许本机访问，修改为0.0.0.0后则可以远程访问\n# 绑定到0.0.0.0，允许任何ip来访问\nnetwork.host: 0.0.0.0 \n\n#初始化节点名称\ncluster.name: elasticsearch \nnode.name: es-node0\ncluster.initial_master_nodes: ["es-node0"]\n\n#修改端口号(根据需要)\nhttp.port: 19200\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 5. 启动和停止\n\n * 启动\n\n#常规启动\n./bin/elasticsearch\n\n#后台启动\n./bin/elasticsearch -d\n\n\n1\n2\n3\n4\n5\n\n * 停止\n\n#根据端口号查询对应Pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 es_pid\n\n\n1\n2\n3\n4\n5\n\n 6. 检查是否启动成功/能否访问\n\n在浏览器输入http://es_node_ip:9200/检查ES是否启动成功.\n\n\n# 安装插件\n\n# IK 分词器\n\n 1. 下载\n\n> https://github.com/medcl/elasticsearch-analysis-ik\n\n找到与ES版本对应的IK，然后下载其中的zip包(非source包)\n\n 2. 上传并解压\n\n# 解压到目标文件夹\n# -o 表示unzip执行后覆盖原有的文件\n# -d 表示指定的目标文件夹\nunzip -o es-ik-xxxx.zip -d ./tmp\n\n\n\n1\n2\n3\n4\n5\n\n 3. 将解压后的ik文件夹放到es/plugins/目录中\n\nmv ./tmp/ik/ /usr/local/es/plugins/\n\n\n1\n\n\n 4. 重启ES\n\n 5. 测试ik是否成功\n\n# ik_smart ：最少切分算法\n# ik_max_word ：最细粒度划分\nGET _analyze\n{\n  "analyzer": "ik_smart",\n  "text": """为啥他们总是会说一些"何不食肉糜乎"的说法？"""\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 遇到的问题&&解决办法\n\n> error: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]. 问题原因：因为系统限制了每个进程能映射的虚拟内存区域数量的最大值，而 Elasticsearch 需要超过此限制\n\n * 临时更改\n\nsudo sysctl -w vm.max_map_count=262144\n\n\n1\n\n * 永久修改 (1)编辑 /etc/sysctl.conf 文件并将以下行添加到文件底部：\n\nvm.max_map_count=262144\n\n\n1\n\n\n(2)保存并重新加载配置\n\nsudo sysctl -p\n\n\n1\n\n\n\n# 参考链接\n\n 1. https://blog.csdn.net/smilehappiness/article/details/118466378\n 2. https://blog.csdn.net/wpc2018/article/details/121156880\n\n\n# 搭建Kibana\n\n 1. 下载\n\n> https://www.elastic.co/cn/downloads/kibana\n\n 2. 上传并解压\n\ntar -xzvf kibana-xxxx.tar.gz\n\n\n1\n\n 3. 修改配置文件 (1) 编辑config目录下yml文件\n\nvim /home/elk/kibana/config/kibana.yml\n\n\n\n1\n2\n\n\n(2) 修改如下配置\n\n# 以下为关键项\n# 默认值: 5601 Kibana 由后端服务器提供服务，该配置指定使用的端口号。 \nserver.port: 5601\n\n# 默认值: "localhost" 指定后端服务器的主机地址。\nserver.host: 127.0.0.1\n\n# 显示中文\ni18n.locale: "zh-CN"\n\n# ES服务ip及端口\nelasticsearch.hosts: ["http://localhost:9200"]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n 4. 创建专用kibana用户,或使用已有非root用户。(参考es相关步骤)\n\n 5. 启动和停止\n\n * 启动\n\n#常规启动\n./bin/kibana\n\n#后台启动\nnohup ./bin/kibana & \n\n\n1\n2\n3\n4\n5\n\n * 停止\n\n#根据端口号查询对应Pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 kibana_pid\n\n\n1\n2\n3\n4\n5\n\n 6. 外部访问\n\n * 防火墙开放对应端口\n\n * 浏览器访问\n\nhttp://kibana_ip:port/\n\n\n# 参考链接\n\n> https://developer.aliyun.com/article/789870\n\n\n# 搭建Logstash\n\n 1. 下载\n\n> https://artifacts.elastic.co/downloads/logstash/\n\n 2. 上传并解压\n\ntar -xzvf logstash-xxx.tar.gz\n\n\n1\n\n\n 3. 创建专属用户或使用非root用户(参考es搭建步骤)\n\n 4. 修改配置\n\n(1) 修改config目录下yml文件\n\nvim ./config/logstash.yml\n\n\n1\n\n\n(2) 修改以下配置\n\n# 配置指向logstash的数据采集配置文件\n# 配置后运行logstash 时可不用指定conf文件\npath.config: config/conf.d/*.conf\n\n\n1\n2\n3\n\n 5. logstash数据源采集配置文件示例\n\ninput {\n  file {\n    path => "/usr/local/nginx/logs/access.log"\n    type => "nginx"\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => ["http://192.168.0.200:9200"]\n    index => "test-nginx-logs-%{+YYYY.MM.dd}"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 6. 配置完成后启动logstash\n\n# 指定数据源配置文件\n./logstash -f  input_out.conf\n\n# 如果已经在步骤4配置了"path.config"，可执行\n\n./logstash \n\n## 后台启动\n./logstash > ./logs/xxx.log &\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 7. 停止\n\n#根据端口号查询对应Pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 es_pid\n\n\n1\n2\n3\n4\n5\n\n\n\n# 参考链接\n\n> https://www.jianshu.com/p/61d40f772c4a\n> \n> https://blog.csdn.net/shy871/article/details/118309754',normalizedContent:'# elk简介\n\nelk 是elasticsearch开源生态中提供的一套完整日志收集、分析以及展示的解决方案，是三个产品的首字母缩写，分别是elasticsearch、logstash 和 kibana。\n\n * elasticsearch 是一个分布式、restful 风格的搜索和数据分析引擎。\n\n * logstash 是服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到诸如 elasticsearch 等存储库中。\n\n * kibana 则可以让用户在 elasticsearch 中使用图形和图表对数据进行可视化。\n\n搭建elk时，要保证其对应的版本好一致，否则会出现未知的错误\n\n\n# 搭建elasticsearch\n\n 1. 下载\n\n> https://www.elastic.co/cn/downloads/elasticsearch\n\n 2. 上传并解压\n\ntar -xzvf elasticsearch-xxx.tar.gz\n\n\n1\n\n 3. 创建专属es用户\n\n> root用户不能直接启动elasticsearch，所以需要创建一个专用用户，来启动es\n\n# 创建用户\nuseradd user-es\n\n# 分配权限\nchown user-es:user-es -r /usr/local/elasticsearch-7.13.2\n\n\n\n1\n2\n3\n4\n5\n6\n\n 4. 修改配置\n\n * 修改es的jdk依赖\n\n> es和jdk是一个强依赖的关系，所以当我们在新版本的elasticsearch压缩包中包含有自带的jdk，但是当我们的linux中已经安装了jdk之后，就会发现启动es的时候优先去找的是linux中已经装好的jdk，此时如果jdk的版本不一致，就会造成jdk不能正常运行\n\n(1)进入bin目录，并编辑启动文件\n\ncd /usr/local/elasticsearch-7.13.2/bin\n\nvim ./elasticsearch\n\n\n1\n2\n3\n\n\n(2)添加以下代码\n\n############## 添加配置解决jdk版本问题 ##############\n# 将jdk修改为es中自带jdk的配置目录\nexport java_home=/usr/local/elasticsearch-7.13.2/jdk\nexport path=$java_home/bin:$path\n\nif [ -x "$java_home/bin/java" ]; then\n        java="/usr/local/elasticsearch-7.13.2/jdk/bin/java"\nelse\n        java=`which java`\nfi\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n * 修改es核心配置\n\n(1)编辑config目录中的yml文件\n\nvim /usr/local/elasticsearch-7.13.2/config/elasticsearch.yml\n\n\n1\n\n\n(2)修改以下配置\n\n# 修改数据和日志目录\n# 数据目录位置\npath.data: /home/新用户名称/elasticsearch/data \n# 日志目录位置\npath.logs: /home/新用户名称/elasticsearch/logs \n\n#修改绑定的ip允许远程访问\n#默认只允许本机访问，修改为0.0.0.0后则可以远程访问\n# 绑定到0.0.0.0，允许任何ip来访问\nnetwork.host: 0.0.0.0 \n\n#初始化节点名称\ncluster.name: elasticsearch \nnode.name: es-node0\ncluster.initial_master_nodes: ["es-node0"]\n\n#修改端口号(根据需要)\nhttp.port: 19200\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n 5. 启动和停止\n\n * 启动\n\n#常规启动\n./bin/elasticsearch\n\n#后台启动\n./bin/elasticsearch -d\n\n\n1\n2\n3\n4\n5\n\n * 停止\n\n#根据端口号查询对应pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 es_pid\n\n\n1\n2\n3\n4\n5\n\n 6. 检查是否启动成功/能否访问\n\n在浏览器输入http://es_node_ip:9200/检查es是否启动成功.\n\n\n# 安装插件\n\n# ik 分词器\n\n 1. 下载\n\n> https://github.com/medcl/elasticsearch-analysis-ik\n\n找到与es版本对应的ik，然后下载其中的zip包(非source包)\n\n 2. 上传并解压\n\n# 解压到目标文件夹\n# -o 表示unzip执行后覆盖原有的文件\n# -d 表示指定的目标文件夹\nunzip -o es-ik-xxxx.zip -d ./tmp\n\n\n\n1\n2\n3\n4\n5\n\n 3. 将解压后的ik文件夹放到es/plugins/目录中\n\nmv ./tmp/ik/ /usr/local/es/plugins/\n\n\n1\n\n\n 4. 重启es\n\n 5. 测试ik是否成功\n\n# ik_smart ：最少切分算法\n# ik_max_word ：最细粒度划分\nget _analyze\n{\n  "analyzer": "ik_smart",\n  "text": """为啥他们总是会说一些"何不食肉糜乎"的说法？"""\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 遇到的问题&&解决办法\n\n> error: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]. 问题原因：因为系统限制了每个进程能映射的虚拟内存区域数量的最大值，而 elasticsearch 需要超过此限制\n\n * 临时更改\n\nsudo sysctl -w vm.max_map_count=262144\n\n\n1\n\n * 永久修改 (1)编辑 /etc/sysctl.conf 文件并将以下行添加到文件底部：\n\nvm.max_map_count=262144\n\n\n1\n\n\n(2)保存并重新加载配置\n\nsudo sysctl -p\n\n\n1\n\n\n\n# 参考链接\n\n 1. https://blog.csdn.net/smilehappiness/article/details/118466378\n 2. https://blog.csdn.net/wpc2018/article/details/121156880\n\n\n# 搭建kibana\n\n 1. 下载\n\n> https://www.elastic.co/cn/downloads/kibana\n\n 2. 上传并解压\n\ntar -xzvf kibana-xxxx.tar.gz\n\n\n1\n\n 3. 修改配置文件 (1) 编辑config目录下yml文件\n\nvim /home/elk/kibana/config/kibana.yml\n\n\n\n1\n2\n\n\n(2) 修改如下配置\n\n# 以下为关键项\n# 默认值: 5601 kibana 由后端服务器提供服务，该配置指定使用的端口号。 \nserver.port: 5601\n\n# 默认值: "localhost" 指定后端服务器的主机地址。\nserver.host: 127.0.0.1\n\n# 显示中文\ni18n.locale: "zh-cn"\n\n# es服务ip及端口\nelasticsearch.hosts: ["http://localhost:9200"]\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n 4. 创建专用kibana用户,或使用已有非root用户。(参考es相关步骤)\n\n 5. 启动和停止\n\n * 启动\n\n#常规启动\n./bin/kibana\n\n#后台启动\nnohup ./bin/kibana & \n\n\n1\n2\n3\n4\n5\n\n * 停止\n\n#根据端口号查询对应pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 kibana_pid\n\n\n1\n2\n3\n4\n5\n\n 6. 外部访问\n\n * 防火墙开放对应端口\n\n * 浏览器访问\n\nhttp://kibana_ip:port/\n\n\n# 参考链接\n\n> https://developer.aliyun.com/article/789870\n\n\n# 搭建logstash\n\n 1. 下载\n\n> https://artifacts.elastic.co/downloads/logstash/\n\n 2. 上传并解压\n\ntar -xzvf logstash-xxx.tar.gz\n\n\n1\n\n\n 3. 创建专属用户或使用非root用户(参考es搭建步骤)\n\n 4. 修改配置\n\n(1) 修改config目录下yml文件\n\nvim ./config/logstash.yml\n\n\n1\n\n\n(2) 修改以下配置\n\n# 配置指向logstash的数据采集配置文件\n# 配置后运行logstash 时可不用指定conf文件\npath.config: config/conf.d/*.conf\n\n\n1\n2\n3\n\n 5. logstash数据源采集配置文件示例\n\ninput {\n  file {\n    path => "/usr/local/nginx/logs/access.log"\n    type => "nginx"\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => ["http://192.168.0.200:9200"]\n    index => "test-nginx-logs-%{+yyyy.mm.dd}"\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n 6. 配置完成后启动logstash\n\n# 指定数据源配置文件\n./logstash -f  input_out.conf\n\n# 如果已经在步骤4配置了"path.config"，可执行\n\n./logstash \n\n## 后台启动\n./logstash > ./logs/xxx.log &\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n 7. 停止\n\n#根据端口号查询对应pid\nnetstat -tuln | grep <port>\n\n#杀死进程\nkill -9 es_pid\n\n\n1\n2\n3\n4\n5\n\n\n\n# 参考链接\n\n> https://www.jianshu.com/p/61d40f772c4a\n> \n> https://blog.csdn.net/shy871/article/details/118309754',charsets:{cjk:!0}},{title:"学习目标",frontmatter:{title:"学习目标",date:"2022-11-06T05:47:41.000Z",permalink:"/pages/599861/",categories:["运维","ELK"],tags:[null],author:{name:"dxzh",link:"https://www.baidu.com"}},regularPath:"/%E8%BF%90%E7%BB%B4/05.ELK/10.%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87.html",relativePath:"运维/05.ELK/10.学习目标.md",key:"v-303a93b8",path:"/pages/599861/",lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:null,content:"作为运维人员，以下是你需要掌握的一些 Elasticsearch、Logstash 和 Kibana (ELK) 相关知识：\n\n 1. Elasticsearch:\n\n * 索引和分片：了解 Elasticsearch 中索引和分片的概念，如何创建、管理和优化索引。\n * 集群管理：学习如何配置和管理 Elasticsearch 集群，包括节点发现、主节点选举和数据复制。\n * 搜索和查询语法：掌握 Elasticsearch 提供的丰富搜索和查询功能，并了解 Elasticsearch 查询语法。\n * 性能调优：学习如何调整 Elasticsearch 集群的性能和吞吐量，包括硬件要求、内存和磁盘配置等。\n * 故障排除：熟悉常见的 Elasticsearch 故障排除技术，如日志分析、监控和性能指标。\n\n 2. Logstash:\n\n * 配置文件：了解 Logstash 的配置文件语法，包括输入、过滤器和输出插件的使用。\n * 数据流转：掌握 Logstash 的数据收集和转换过程，包括如何采集不同源头的日志数据。\n * 过滤器：学习如何使用 Logstash 的过滤器插件，对日志进行解析、过滤、转换和标准化处理。\n * 目标输出：熟悉将处理后的日志数据发送到不同目标的输出插件，如 Elasticsearch、文件、数据库等。\n * 故障排除：了解常见的 Logstash 故障排除技术，配置问题、性能调优和日志记录等。\n\n 3. Kibana:\n\n * 可视化仪表盘：了解如何使用 Kibana 创建交互式的可视化仪表盘，包括图表、图形和数据表格等。\n * 检索和搜索：学习如何在 Kibana 中执行高级搜索和过滤，探索索引数据。\n * 用户权限和安全性：了解如何配置用户和角色权限，以及安全性相关的设置。\n * 自定义仪表盘：熟悉如何自定义和扩展 Kibana 的功能，如插件、脚本和面板。\n * 监控和警报：学习如何监控 Elasticsearch 和 Logstash 的性能指标，并设置警报。\n\n同时，了解操作系统的基本知识，如网络和存储配置，系统性能监控和故障排除等，也是运维人员在 ELK 环境中需要掌握的一部分。",normalizedContent:"作为运维人员，以下是你需要掌握的一些 elasticsearch、logstash 和 kibana (elk) 相关知识：\n\n 1. elasticsearch:\n\n * 索引和分片：了解 elasticsearch 中索引和分片的概念，如何创建、管理和优化索引。\n * 集群管理：学习如何配置和管理 elasticsearch 集群，包括节点发现、主节点选举和数据复制。\n * 搜索和查询语法：掌握 elasticsearch 提供的丰富搜索和查询功能，并了解 elasticsearch 查询语法。\n * 性能调优：学习如何调整 elasticsearch 集群的性能和吞吐量，包括硬件要求、内存和磁盘配置等。\n * 故障排除：熟悉常见的 elasticsearch 故障排除技术，如日志分析、监控和性能指标。\n\n 2. logstash:\n\n * 配置文件：了解 logstash 的配置文件语法，包括输入、过滤器和输出插件的使用。\n * 数据流转：掌握 logstash 的数据收集和转换过程，包括如何采集不同源头的日志数据。\n * 过滤器：学习如何使用 logstash 的过滤器插件，对日志进行解析、过滤、转换和标准化处理。\n * 目标输出：熟悉将处理后的日志数据发送到不同目标的输出插件，如 elasticsearch、文件、数据库等。\n * 故障排除：了解常见的 logstash 故障排除技术，配置问题、性能调优和日志记录等。\n\n 3. kibana:\n\n * 可视化仪表盘：了解如何使用 kibana 创建交互式的可视化仪表盘，包括图表、图形和数据表格等。\n * 检索和搜索：学习如何在 kibana 中执行高级搜索和过滤，探索索引数据。\n * 用户权限和安全性：了解如何配置用户和角色权限，以及安全性相关的设置。\n * 自定义仪表盘：熟悉如何自定义和扩展 kibana 的功能，如插件、脚本和面板。\n * 监控和警报：学习如何监控 elasticsearch 和 logstash 的性能指标，并设置警报。\n\n同时，了解操作系统的基本知识，如网络和存储配置，系统性能监控和故障排除等，也是运维人员在 elk 环境中需要掌握的一部分。",charsets:{cjk:!0}},{title:"Zabbix 忘记登录密码如何找回",frontmatter:{title:"Zabbix 忘记登录密码如何找回",date:"2023-02-06T21:46:38.000Z",permalink:"/pages/3604d0/",categories:["运维","Zabbix"],tags:[null],author:{name:"dxzh",link:null}},regularPath:"/%E8%BF%90%E7%BB%B4/07.Zabbix/05.Zabbix%20%E5%BF%98%E8%AE%B0%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9E.html",relativePath:"运维/07.Zabbix/05.Zabbix 忘记登录密码如何找回.md",key:"v-43f05170",path:"/pages/3604d0/",headers:[{level:2,title:"找回登陆密码",slug:"找回登陆密码",normalizedTitle:"找回登陆密码",charIndex:124}],lastUpdated:"2023/12/6 17:17:12",lastUpdatedTimestamp:1701854232e3,headersStr:"找回登陆密码",content:"# Zabbix 忘记登录密码如何找回\n\n因为记性较差，有时候可能会因为管理账号比较多，遗忘一些重要应用的密码。所以需要知道如何在遗忘登陆密码的情况下，找回登录密码，并重新修改密码。\n\n以下是zabbix登录密码下面是找回登录密码的例子:\n\n\n# 找回登陆密码\n\n 1. 登陆mysql数据库，查询zabbix用户信息\n\n[root@dxzh ~]# mysql -uroot -p -e \"select * from zabbix.users\\G\"\nEnter password: \n*************************** 1. row ***************************\n        userid: 1\n         alias: Admin\n          name: Zabbix\n       surname: Administrator\n        passwd: ab66b6e18854fa4d45499d0a04a47b64\n           url: \n     autologin: 1\n    autologout: 0\n          lang: en_GB\n       refresh: 30\n          type: 3\n         theme: default\nattempt_failed: 0\n    attempt_ip: 14.130.112.2\n attempt_clock: 1501141026\n rows_per_page: 50\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n 2. 登陆root用户，根据userid修改密码\n\nmysql -uroot -p\nuse zabbix;\n\n# 由于密码是md5加密的，'5fce1b3e34b520afeffb37ce08c7cd66'对应的密码为\"zabbix\"\n# 下面的命令将用Zabbix用户的密码设置为'zabbix'\n\nupdate users set passwd='5fce1b3e34b520afeffb37ce08c7cd66' where userid='1';\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n 3. 输入zabbix服务地址，登录 Web\n    \n    * 用户名：Admin\n    \n    * 密码：zabbix\n\n 4. 在界面中再次修改Admin用户密码即可。",normalizedContent:"# zabbix 忘记登录密码如何找回\n\n因为记性较差，有时候可能会因为管理账号比较多，遗忘一些重要应用的密码。所以需要知道如何在遗忘登陆密码的情况下，找回登录密码，并重新修改密码。\n\n以下是zabbix登录密码下面是找回登录密码的例子:\n\n\n# 找回登陆密码\n\n 1. 登陆mysql数据库，查询zabbix用户信息\n\n[root@dxzh ~]# mysql -uroot -p -e \"select * from zabbix.users\\g\"\nenter password: \n*************************** 1. row ***************************\n        userid: 1\n         alias: admin\n          name: zabbix\n       surname: administrator\n        passwd: ab66b6e18854fa4d45499d0a04a47b64\n           url: \n     autologin: 1\n    autologout: 0\n          lang: en_gb\n       refresh: 30\n          type: 3\n         theme: default\nattempt_failed: 0\n    attempt_ip: 14.130.112.2\n attempt_clock: 1501141026\n rows_per_page: 50\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n 2. 登陆root用户，根据userid修改密码\n\nmysql -uroot -p\nuse zabbix;\n\n# 由于密码是md5加密的，'5fce1b3e34b520afeffb37ce08c7cd66'对应的密码为\"zabbix\"\n# 下面的命令将用zabbix用户的密码设置为'zabbix'\n\nupdate users set passwd='5fce1b3e34b520afeffb37ce08c7cd66' where userid='1';\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n 3. 输入zabbix服务地址，登录 web\n    \n    * 用户名：admin\n    \n    * 密码：zabbix\n\n 4. 在界面中再次修改admin用户密码即可。",charsets:{cjk:!0}}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"运维",link:"/ops/",items:[{text:"Linux",link:"/linux/"},{text:"Docker",link:"/docker/"},{text:"Nginx",link:"/nginx/"},{text:"Kubernetes",link:"/kubernetes/"},{text:"ELK",link:"/elk/"},{text:"Ansible",link:"/ansible/"},{text:"Zabbix",link:"/zabbix/"}]},{text:"编程",link:"/dev/",items:[{text:"Python",link:"/python/"},{text:"Java",link:"/java/"},{text:"Shell",link:"/shell/"},{text:"Javascript",link:"/javascript/"},{text:"Vue",link:"/vue/"}]},{text:"数据库",link:"/database/",items:[{text:"Mysql",link:"/mysql/"},{text:"Oracle",link:"/oracle/"},{text:"MongoDB",link:"/mongodb/"},{text:"Redis",link:"/redis/"},{text:"达梦",link:"/dm8/"}]},{text:"技术",link:"/technology/",items:[{text:"Gitlab",link:"/gitlab/"},{text:"Jenkins",link:"/jenkins/"},{text:"Maven",link:"/maven/"},{text:"Harbor",link:"/harbor/"},{text:"HTML",link:"/html/"},{text:"CSS",link:"/css/"},{text:"Nodejs",link:"/nodejs/"}]},{text:"更多",link:"/more/",items:[{text:"技术文档",link:"/tec-doc/"},{text:"闲言碎语",link:"/xysy/"},{text:"实用技巧",link:"/syjq/"},{text:"学习",link:"/learning/"},{text:"资源分享",link:"/share/"},{text:"人生轨迹",link:"/guiji/"}]},{text:"关于",link:"/about/"},{text:"收藏",link:"/shoucang/",items:[{text:"实用站点",link:"/pages/d4c693/"},{text:"时间线测试",link:"/tltest/"}]},{text:"索引",link:"/archives/",items:[{text:"分类",link:"/categories/"},{text:"标签",link:"/tags/"},{text:"归档",link:"/archives/"}]}],sidebarDepth:2,logo:"/img/logo-dxzh3.png",repo:"duxingz",searchMaxSuggestions:10,lastUpdated:"上次更新",docsDir:"docs",editLinks:!1,editLinkText:"编辑",sidebar:{"/00.目录页/":[["01.运维.md","运维","/ops/"],["02.编程.md","编程","/dev/"],["03.技术.md","技术","/technology/"],["04.更多.md","更多","/more/"],["05.数据库.md","数据库","/database/"],["06.收藏.md","收藏","/shoucang/"]],catalogue:{"运维":"/ops/","编程":"/dev/","技术":"/technology/","更多":"/more/","数据库":"/database/","收藏":"/shoucang/"},"/05.关于/":[["01.关于.md","关于","/about/"]],"/技术/":[{title:"Gitlab",collapsable:!0,children:[["01.Gitlab/01.Docker安装Gitlab.md","Docker安装Gitlab","/pages/2aa3c8/"]]},{title:"Jenkins",collapsable:!0,children:[]},{title:"Maven",collapsable:!0,children:[]},{title:"Harbor",collapsable:!0,children:[]},{title:"HTML",collapsable:!0,children:[]},{title:"CSS",collapsable:!0,children:[]},{title:"Nodejs",collapsable:!0,children:[["07.Nodejs/01.使用Nvm配置多Nodejs环境.md","使用Nvm配置多Nodejs环境","/pages/28c2d5/"]]}],"/收藏/":[["01.收藏站点.md","实用站点","/pages/d4c693/"]],"/数据库/":[{title:"Mysql",collapsable:!0,children:[["01.Mysql/01.Mysql的安装和初始化.md","Linux环境安装Mysql","/pages/8f25b7/"],["01.Mysql/02.Mysql的一些常用函数.md","Mysql的一些常用函数","/pages/aa966f/"],["01.Mysql/03.记录Mysql中一些常见操作.md","Mysql基本的数据库管理和数据维护命令","/pages/4e6bdd/"]]},{title:"Oracle",collapsable:!0,children:[["02.Oracle/01.用Docker安装oracle11g.md","用Docker安装oracle11g","/pages/dc4c36/"],["02.Oracle/02.Oracle 存储过程基本语法及其使用.md","Oracle 存储过程的基本语法及其使用","/pages/12246b/"],["02.Oracle/03.oracle数据库的逻辑备份与恢复.md","oracle数据库的逻辑备份与恢复","/pages/af984e/"]]},{title:"MongoDB",collapsable:!0,children:[]},{title:"Redis",collapsable:!0,children:[]},{title:"达梦",collapsable:!0,children:[["05.达梦/01.搭建达梦数据库.md","安装国产达梦数据库","/pages/4fe983/"],["05.达梦/02.达梦数据库的基本使用.md","达梦数据库的基本使用","/pages/c2f35a/"]]}],"/更多/":[{title:"技术文档",collapsable:!0,children:[["01.技术文档/01.Git使用手册.md","Git使用手册","/pages/9a7ee40fc232253e"],["01.技术文档/02.Markdown使用教程.md","Markdown使用教程","/pages/ad247c4332211551"],["01.技术文档/03.npm常用命令.md","npm常用命令","/pages/61f2f95fd7da14fd"],["01.技术文档/10.npm packageJson属性详解.md","npm packageJson属性详解","/pages/dec4f3f00e71a312"],["01.技术文档/15.yaml语言教程.md","yaml语言教程","/pages/4e8444e2d534d14f"],["01.技术文档/20.Git修改分支名.md","Git修改分支名","/pages/922650/"]]},{title:"闲言碎语",collapsable:!0,children:[["02.闲言碎语/01.2023.md","2023杂录","/pages/d5f5a3/"]]},{title:"实用技巧",collapsable:!0,children:[["03.实用技巧/01.2分钟规则.md","2分钟规则","/pages/baaa02/"]]},{title:"学习",collapsable:!0,children:[["04.学习/00.费曼学习法.md","费曼学习法","/pages/f2a556/"],["04.学习/01.笔记方法.md","笔记方法","/pages/e60c81/"],["04.学习/02.提高学习效率的策略.md","提高学习效率的策略","/pages/a8692ab3bdcb4588"],["04.学习/03.提高记忆的技巧.md","提高记忆的技巧","/pages/996822b2a2ca6e3b"],["04.学习/04.自律小建议.md","自律小建议","/pages/c3f302a03c8daf79"],["04.学习/05.处理问题的思路.md","处理问题的思路","/pages/9ba2b8fb13de1957"],["04.学习/10.搜索引擎使用技巧.md","搜索引擎使用技巧","/pages/ce818a"]]},{title:"资源分享",collapsable:!0,children:[]}],"/编程/":[{title:"Python",collapsable:!0,children:[["01.Python/02.Python中使用Anoconda.md","使用Anoconda创建虚拟环境和管理包","/pages/4b8622/"],["01.Python/03.python中几种常见数据结构的使用.md","python中几种常见数据结构的使用","/pages/b2bcaa/"],["01.Python/04.学习python中的多线程.md","学习python多线程","/pages/eeda61/"]]},{title:"Java",collapsable:!0,children:[]},{title:"Shell",collapsable:!0,children:[["03.Shell/01.Shell学习笔记.md","Shell学习笔记","/pages/6bd99a/"],["03.Shell/02.Shell中的条件判断.md","shell中的条件判断","/pages/84cf23/"],["03.Shell/03.shell脚本中set命令的使用.md","shell脚本内一些set 命令的使用","/pages/554077/"],["03.Shell/04.一些shell练习题.md","收集的一些shell练习题","/pages/e3a119/"]]},{title:"Javascript",collapsable:!0,children:[]},{title:"Vue",collapsable:!0,children:[]}],"/运维/":[["00.关于运维工程师.md","关于运维工程师","/pages/9fa080/","转载"],{title:"Linux",collapsable:!0,children:[{title:"Centos",collapsable:!0,children:[["01.Linux/01.Centos/01.centos包管理相关.md","centos包管理相关","/pages/f3e444/"],["01.Linux/01.Centos/02.Centos7配置yum源.md","Centos7配置yum源","/pages/b14489/"]]},{title:"Ubuntu",collapsable:!0,children:[["01.Linux/02.Ubuntu/01.ubuntu包管理相关.md","ubuntu包管理相关","/pages/fbf33b/"]]},["01.Linux/03.linux环境下管理任务的进程、端口.md","linux环境下管理任务的进程、端口","/pages/ce9c59/"],["01.Linux/04.linux环境下四种查找命令的区别.md","linux环境下四种查找命令的使用及其区别(find/which/whereis/locate)","/pages/7f59e5/"],["01.Linux/05.linux 中sed、awk、grep和正则表达式的用法.md","linux 中sed、awk、grep及正则表达式的用法","/pages/80ce65/"],["01.Linux/06.Linux利用cron定期执行任务.md","Linux利用cron定期执行任务","/pages/43ceba/"],["01.Linux/07.Linux环境下的磁盘扩展和磁盘清理.md","linux环境下的磁盘扩展和磁盘清理","/pages/7a8215/"],["01.Linux/10.linux利用tar和openssl命令实现文件加密、解密.md","linux利用tar和openssl命令实现文件加密、解密","/pages/7678af/"],["01.Linux/11.通过iptables限制连接数.md","通过iptables限制连接数","/pages/be753f/"]]},{title:"Docker",collapsable:!0,children:[["02.Docker/01.两种方式安装Docker.md","两种方式安装Docker","/pages/77b45b/"],["02.Docker/02.docker问题记录.md","docker问题记录","/pages/af0c2d/"],["02.Docker/03.安装Docker-Compose.md","安装Docker-Compose","/pages/5f33ac/"],["02.Docker/05.通过Docker运行跨平台的容器.md","通过Docker运行跨平台的容器","/pages/0fad9e/"],["02.Docker/06.Docker根目录迁移.md","Docker根目录迁移","/pages/b3a787/"]]},{title:"Nginx",collapsable:!0,children:[["03.Nginx/01.Nginx的基本使用.md","Nginx的基本使用","/pages/fa15b2/"],["03.Nginx/02.整理一些Nginx的常见问题及解惑.md","整理一些Nginx的常见问题及解惑","/pages/f4274c/"],["03.Nginx/09.nginx通过四层代理实现端口转发.md","nginx通过四层代理实现端口转发","/pages/eeaf64/"],["03.Nginx/10.http状态码详解.md","http状态码详解","/pages/18b551/"]]},{title:"Kubernetes",collapsable:!0,children:[["04.Kubernetes/01.使用minikube安装k8s单机版.md","使用minikube安装k8s单机版","/pages/4cc7bb/"]]},{title:"ELK",collapsable:!0,children:[["05.ELK/02.单节点版ELK日志服务搭建.md","单节点版ELK日志服务搭建","/pages/47f919/"],["05.ELK/03.ElasticSearch进行索引、文档管理.md","ElasticSearch 索引、文档管理","/pages/2fd687/"],["05.ELK/10.学习目标.md","学习目标","/pages/599861/"]]},{title:"Ansible",collapsable:!0,children:[]},{title:"Zabbix",collapsable:!0,children:[["07.Zabbix/05.Zabbix 忘记登录密码如何找回.md","Zabbix 忘记登录密码如何找回","/pages/3604d0/"]]}]},author:{name:"dxzh",link:"https://www.bing.com/cn"},blogger:{avatar:"/img/tx4.jpg",name:"浮尘",slogan:"初阶运维修行者"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:wky2017@foxmail.com"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/#/playlist?id=360359131"}]},footer:{createYear:2021},extendFrontmatter:{author:{name:"dxzh",link:""}}},locales:{"/":{lang:"zh-CN",title:"浮尘",description:"个人博客,专注运维开发等技术的学习与总结。包含Linux、Docker、K8s、Python、Java等技术文章。",path:"/"}}};var Hs=t(94),Gs=t(95),Vs=t(11);var Zs={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:a}}=n;return!(e||!1===t||!0===a)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,a=e.frontmatter.sticky;return t&&a?t==a?Object(Vs.a)(n,e):t-a:t&&!a?-1:!t&&a?1:Object(Vs.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(Vs.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let a=0,r=n.length;a<r;a++){const{frontmatter:{categories:r,tags:o}}=n[a];"array"===Object(Vs.n)(r)&&r.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[a]))}),"array"===Object(Vs.n)(o)&&o.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[a]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Gt.component(Hs.default),Gt.component(Gs.default);function Js(n){return n.toString().padStart(2,"0")}t(243);Gt.component("BlockToggle",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,342))),Gt.component("TimelinePage copy",()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,343))),Gt.component("TimelinePage",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,344))),Gt.component("Badge",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,451))),Gt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,94))),Gt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,95)));t(244);var Ws=[({Vue:n,options:e,router:t,siteData:a})=>{},({Vue:n,options:e,router:t,siteData:a})=>{a.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${Js(n.getUTCMonth()+1)}-${Js(n.getUTCDate())} ${Js(n.getUTCHours())}:${Js(n.getUTCMinutes())}:${Js(n.getUTCSeconds())}`}(e)),t?n.author=t:a.themeConfig.author&&(n.author=a.themeConfig.author)}),n.mixin(Zs)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{}],Ys=["BlockToggle"];class Qs extends class{constructor(){this.store=new Gt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Gt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Qs.prototype,{getPageAsyncComponent:is,getLayoutAsyncComponent:ss,getAsyncComponent:ls,getVueComponent:cs});var Xs={install(n){const e=new Qs;n.$vuepress=e,n.prototype.$vuepress=e}};function nl(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var el={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return ps("pageKey",e),Gt.component(e)||Gt.component(e,is(e)),Gt.component(e)?n(e):n("")}},tl={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},al={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},rl=(t(245),t(246),Object(Ns.a)(al,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),ol={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Gt.config.productionTip=!1,Gt.use(Ki),Gt.use(Xs),Gt.mixin(function(n,e,t=Gt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const a=new(n(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),o={};return Object.keys(r).reduce((n,e)=>(e.startsWith("$")&&(n[e]=r[e].get),n),o),{computed:o}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const a in n)"/"===a?t=n[a]:0===this.$page.path.indexOf(a)&&(e=n[a]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,a=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?a?a+" | "+t:t:a||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const a=n[t];if(a.path.toLowerCase()===e.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Ks)),Gt.component("Content",el),Gt.component("ContentSlotsDistributor",tl),Gt.component("OutboundLink",rl),Gt.component("ClientOnly",ol),Gt.component("Layout",ss("Layout")),Gt.component("NotFound",ss("NotFound")),Gt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.9",hash:"aeb42e4"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ks.routerBase||Ks.base,t=new Ki({base:e,mode:"history",fallback:!1,routes:Rs,scrollBehavior:(n,e,t)=>t||(n.hash?!Gt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,a)=>{if(nl(n,e.path))a();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";nl(n,t)?a(t):a()}else a();else{const t=e.path+"/",r=e.path+".html";nl(n,r)?a(r):nl(n,t)?a(t):a()}})}(t);const a={};try{await Promise.all(Ws.filter(n=>"function"==typeof n).map(e=>e({Vue:Gt,options:a,router:t,siteData:Ks,isServer:n})))}catch(n){console.error(n)}return{app:new Gt(Object.assign(a,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Ys.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);